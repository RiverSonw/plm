{"version":3,"file":"index.es.js","sources":["../src/utils/modal-utils.ts","../src/wang-editor/wang-editor-comment.tsx","../src/html-comment-toolbars.ts","../src/interface/pers-marker-data-interface.ts","../src/wang-editor/wang-editor-collapse.tsx","../src/utils/utils.ts","../src/utils/slate-util.ts","../src/html-comment.tsx","../../../node_modules/.pnpm/snabbdom@3.5.1/node_modules/snabbdom/build/vnode.js","../../../node_modules/.pnpm/snabbdom@3.5.1/node_modules/snabbdom/build/is.js","../../../node_modules/.pnpm/snabbdom@3.5.1/node_modules/snabbdom/build/h.js","../src/attachments/attachments-node-module.ts","../src/attachments/attachments-controller.ts","../src/code-snippet/code-snippet-node-module.ts","../src/code-snippet/code-snippet-controller.ts","../src/marker/marker-node-module.ts","../src/component/mention/mention.tsx","../src/component/marker/marker.tsx","../src/component/emoji/emoji.tsx","../src/marker/marker-controller.ts","../src/mention/mention-node-module.ts","../src/mention/mention-controller.ts","../src/page/page-node-module.ts","../src/page/page-controller.ts","../src/emoji/emoji-node-module.ts","../src/emoji/emoji-controller.ts","../src/factory/custom-node-factory.ts","../src/custom-elem/mention-elem.ts","../src/custom-elem/personnel-marker-elem.ts","../src/custom-elem/emoji.ts","../src/paint-format/paint-format-menu.ts","../src/personnel-marker/personnel-marker-node-module.ts","../src/ai/ai-modules.ts","../src/link/link-node-module.ts","../src/html-comment.controller.ts","../src/html-comment.provider.ts","../src/index.ts"],"sourcesContent":["export class ModalUtil {\n  /**\n   * 模态实例\n   * @memberof ModalUtil\n   */\n  private modalOrPanel!: IParams;\n\n  /**\n   * 富文本Ref\n   * @memberof ModalUtil\n   */\n  private htmlRef!: IParams;\n\n  constructor(modalOrPanel: IParams, htmlRef: IParams) {\n    this.modalOrPanel = modalOrPanel;\n    this.htmlRef = htmlRef;\n    this.calcModalPosition();\n    window.addEventListener('resize', this.handleResize.bind(this));\n  }\n\n  /**\n   * 计算模态定位\n   * @memberof ModalUtil\n   */\n  calcModalPosition(): void {\n    const modalType = ['dropPanel', 'selectList'];\n    if (!modalType.includes(this.modalOrPanel.type)) {\n      return;\n    }\n    const { $elem } = this.modalOrPanel;\n    const dom = $elem[0];\n    // 富文本编辑器实例\n    const htmlDom = this.htmlRef.$el;\n    // 获取工具栏节点\n    const toolbarDom = htmlDom.querySelector('.w-e-bar');\n    // 工具栏触发模态的行为项元素\n    const buttonDom = dom.previousElementSibling;\n    const dataMenuKey = buttonDom.getAttribute('data-menu-key');\n    // html-toolbar工具栏\n    const outToolbarDom = dom.parentNode.parentNode.parentNode;\n\n    const menuKeys = ['bgColor', 'color', 'headerSelect'];\n\n    if (\n      !menuKeys.includes(dataMenuKey) ||\n      !htmlDom ||\n      !toolbarDom ||\n      !buttonDom ||\n      outToolbarDom.getAttribute('data-w-e-toolbar') === 'true'\n    ) {\n      return;\n    }\n\n    // 获取模态元素本身宽度\n    const modalWidth = dom.clientWidth;\n    const modalHeight = dom.clientHeight;\n    // 获取工具栏节点\n    const toolbarHeight = toolbarDom.clientHeight;\n    // 获取元素本身定位\n    const btnRect = buttonDom.getBoundingClientRect();\n    // 拿到节点距离顶部窗口及距离左边窗口的位置\n    const btnBottom = btnRect.bottom;\n    const btnRight = btnRect.right;\n    const btnTop = btnRect.top;\n    const btnLeft = btnRect.left;\n\n    // 定位计算值\n    const top = `${btnTop + toolbarHeight}px`;\n    const left = `${btnLeft}px`;\n    const bottom = `${btnBottom - modalHeight - toolbarHeight}px`;\n    const right = `${btnRight - modalWidth}px`;\n\n    const modalStyle = { position: 'fixed', left, top } as IParams;\n    // 获取窗口宽高\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    // 判断是否应该定位在左侧\n    if (windowWidth - btnLeft < modalWidth) {\n      Object.assign(modalStyle, { left: right });\n    }\n    // 判断是否应该定位在下面\n    if (windowHeight - btnTop - toolbarHeight < modalHeight) {\n      Object.assign(modalStyle, { top: bottom });\n    }\n\n    Object.assign(dom.style, { top: '', bottom: '', left: '', right: '' });\n    Object.assign(dom.style, modalStyle);\n  }\n\n  /**\n   * 监听窗口变化\n   * @memberof ModalUtil\n   */\n  handleResize(): void {\n    this.calcModalPosition();\n  }\n\n  /**\n   * 销毁\n   * @memberof ModalUtil\n   */\n  destroy(): void {\n    window.removeEventListener('resize', this.handleResize);\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  onBeforeUnmount,\n  ref,\n  shallowRef,\n  onMounted,\n  watch,\n  Ref,\n  defineComponent,\n  nextTick,\n} from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nimport {\n  IEditorConfig,\n  IToolbarConfig,\n  SlateEditor,\n  SlateElement,\n  SlateNode,\n} from '@wangeditor/editor';\nimport type { IDomEditor } from '@wangeditor/editor';\nimport { createUUID, getCookie } from 'qx-util';\nimport { isNil } from 'ramda';\nimport { getHtmlProps, useNamespace } from '@ibiz-template/vue3-util';\nimport {\n  CoreConst,\n  IChatMessage,\n  IPortalAsyncAction,\n} from '@ibiz-template/core';\nimport { ElMessageBox } from 'element-plus';\nimport { EventBase, ScriptFactory } from '@ibiz-template/runtime';\nimport { HtmlCommentController } from '../html-comment.controller';\nimport { ModalUtil } from '../utils/modal-utils';\n\ntype InsertFnType = (_url: string, _alt: string, _href: string) => void;\n\nconst IBizHtmlContent = defineComponent({\n  name: 'IBizHtmlContent',\n  props: getHtmlProps<HtmlCommentController>(),\n  emits: ['change', 'blur', 'focus', 'enter', 'infoTextChange', 'link'],\n  setup(props, { emit }) {\n    const ns = useNamespace('html');\n\n    const c = props.controller!;\n\n    // HTML ref\n    const htmlContent = ref();\n\n    // 样式变量\n    const cssVars = ref({});\n\n    // 浏览器ResizeObserver对象\n    let resizeObserver: ResizeObserver | null = null;\n\n    // 上次工具栏高度\n    let lastToolbarHeight = 0;\n\n    // 工具栏ref\n    const toolbarRef = ref();\n\n    // 富文本ref\n    const htmlRef = ref();\n\n    // 编辑器实例，必须用 shallowRef，重要！\n    const editorRef = shallowRef();\n\n    // 图片预览ref\n    const previewRef = ref();\n\n    // 内容 HTML\n    const valueHtml = ref('');\n\n    // 请求头\n    const headers: Ref<IData> = ref({\n      Authorization: `Bearer ${getCookie(CoreConst.TOKEN)}`,\n    });\n\n    // 上传文件路径\n    const uploadUrl: Ref<string> = ref('');\n\n    // 下载文件路径\n    const downloadUrl: Ref<string> = ref('');\n\n    // 允许编辑\n    const enableEdit = ref(true);\n\n    // 是否存在编辑器参数enableEdit\n    const hasEnableEdit = ref(false);\n\n    // 只读状态\n    const readonlyState = ref(false);\n\n    // 允许全屏打开\n    const enableFullScreen = ref(false);\n\n    // 是否全屏\n    const isFullScreen = ref(false);\n\n    // 预览图片地址\n    const previewUrl = ref('');\n\n    // 预览图片集合,此变量用于控制图片模态的显示隐藏,为空时会关闭模态,element图片组件未支持控制是否显示的属性\n    const previewUrlList: Ref<string[] | []> = ref([]);\n\n    // 是否是回填\n    const isBackFill = ref(false);\n\n    const editorModel = c.model;\n    if (editorModel.editorParams) {\n      if (editorModel.editorParams.enableEdit) {\n        hasEnableEdit.value = true;\n        readonlyState.value = true;\n        enableEdit.value =\n          c.toBoolean(editorModel.editorParams.enableEdit) &&\n          !props.readonly &&\n          !props.disabled;\n      }\n      if (editorModel.editorParams.enableFullScreen) {\n        enableFullScreen.value = c.toBoolean(\n          editorModel.editorParams.enableFullScreen,\n        );\n      }\n    }\n\n    const handleSetHtml = (event: EventBase) => {\n      if (!editorRef.value) {\n        return;\n      }\n      const { eventArg } = event;\n      if (eventArg) {\n        editorRef.value.setHtml(eventArg);\n        editorRef.value.focus(true);\n        emit('focus');\n      }\n    };\n\n    const handleClear = () => {\n      if (!editorRef.value) {\n        return;\n      }\n      editorRef.value.blur();\n      editorRef.value.setHtml('');\n    };\n\n    const handleSetReply = () => {\n      if (!editorRef.value) {\n        return;\n      }\n      editorRef.value.focus(true);\n      emit('focus');\n    };\n\n    c.evt.on('setHtml', handleSetHtml);\n    c.evt.on('clear', handleClear);\n    c.evt.on('onSetReply', handleSetReply);\n\n    // data响应式变更基础路径\n    watch(\n      () => props.data,\n      newVal => {\n        if (newVal) {\n          const urls = ibiz.util.file.calcFileUpDownUrl(\n            c.context,\n            c.params,\n            newVal,\n          );\n          uploadUrl.value = urls.uploadUrl;\n          downloadUrl.value = urls.downloadUrl;\n        }\n      },\n      { immediate: true, deep: true },\n    );\n\n    // 自定义校验链接\n    const customCheckLinkFn = (\n      text: string,\n      url: string,\n    ): string | boolean | undefined => {\n      if (!url) {\n        return;\n      }\n      // if (url.indexOf('http') !== 0) {\n      //   return '链接必须以 http/https 开头';\n      // }\n      return true;\n\n      // 返回值有三种选择：\n      // 1. 返回 true ，说明检查通过，编辑器将正常插入链接\n      // 2. 返回一个字符串，说明检查未通过，编辑器会阻止插入。会 alert 出错误信息（即返回的字符串）\n      // 3. 返回 undefined（即没有任何返回），说明检查未通过，编辑器会阻止插入。但不会提示任何信息\n    };\n\n    // 自定义转换链接 url\n    const customParseLinkUrl = (url: string): string => {\n      // if (url.indexOf('http') !== 0) {\n      //   return `http://${url}`;\n      // }\n      return url;\n    };\n\n    // 工具栏配置\n    const toolbarConfig: Partial<IToolbarConfig> = {\n      toolbarKeys: [\n        {\n          key: 'group-add-style', // 必填，要以 group 开头\n          title: '添加', // 必填\n          iconSvg:\n            '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fit=\"\" height=\"1em\" width=\"1em\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\"><g id=\"arvaction/plus-circle-fill\" stroke-width=\"1\" fill-rule=\"evenodd\"><path d=\"M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm-.6-8.6H4v1.2h3.4V12h1.2V8.6H12V7.4H8.6V4H7.4v3.4z\" id=\"arv形状结合\"></path></g></svg>', // 可选\n          menuKeys: ['attachments', 'codesnippet', 'page'],\n        },\n        '|',\n        {\n          key: 'group-inline-style', // 必填，要以 group 开头\n          title: '文本格式', // 必填\n          iconSvg:\n            '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fit=\"\" height=\"1em\" width=\"1em\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\"><g id=\"ahdeditor/color-tt\" stroke-width=\"1\" fill-rule=\"evenodd\"><path id=\"ahdsecondary-color\" d=\"M1.999 15.011h11.998V13.81H1.999z\"></path><path d=\"M6.034 7.59h4.104L8.086 2.297 6.034 7.59zm-.465 1.2l-1.437 3.707H2.845L7.301 1h1.287l-.001.004h.286l4.454 11.492h-1.288L10.603 8.79H5.569z\" id=\"ahd合并形状\"></path></g></svg>', // 可选\n          menuKeys: [\n            'bold',\n            'italic',\n            'underline',\n            'through',\n            'code',\n            'numberedList',\n            'bulletedList',\n            'insertLink',\n          ],\n        },\n        'codeBlock',\n        'mention',\n        'marker',\n        'emoji',\n      ],\n    };\n    if (c.chatCompletion) {\n      toolbarConfig.toolbarKeys!.push('aichart');\n    }\n    // 编辑器配置\n    const editorConfig: Partial<IEditorConfig> = {\n      placeholder: c.placeHolder,\n      readOnly: hasEnableEdit.value ? readonlyState.value : props.readonly,\n      MENU_CONF: {\n        // 图片上传\n        uploadImage: {\n          // 上传地址\n          server: uploadUrl.value,\n\n          // form-data fieldName ，默认值 'wangeditor-uploaded-image'\n          fieldName: 'file',\n\n          // 单个文件的最大体积限制，默认为 2M\n          maxFileSize: 10 * 1024 * 1024, // 10M\n\n          // 最多可上传几个文件，默认为 100\n          maxNumberOfFiles: 10,\n\n          // 选择文件时的类型限制，默认为 ['image/*'] 。如不想限制，则设置为 []\n          allowedFileTypes: [],\n\n          // 自定义增加 http  header\n          headers: headers.value,\n\n          // 跨域是否传递 cookie ，默认为 false\n          withCredentials: true,\n\n          // 上传之前触发\n          onBeforeUpload(file: File) {\n            // TS 语法\n            // onBeforeUpload(file) {    // JS 语法\n            // file 选中的文件，格式如 { key: file }\n            return file;\n\n            // 可以 return\n            // 1. return file 或者 new 一个 file ，接下来将上传\n            // 2. return false ，不上传这个 file\n          },\n\n          // 上传进度的回调函数\n          onProgress(progress: number) {\n            console.log('progress', progress);\n          },\n\n          // 单个文件上传成功之后\n          onSuccess(file: File, res: IData) {\n            console.log(`${file.name} 上传成功`, res);\n          },\n\n          // 单个文件上传失败\n          onFailed(file: File, res: IData) {\n            console.log(`${file.name} 上传失败`, res);\n          },\n\n          // 上传错误，或者触发 timeout 超时\n          onError(file: File, err: IData, res: IData) {\n            console.log(`${file.name} 上传出错`, err, res);\n          },\n\n          // 自定义插入图片\n          async customInsert(res: IData, insertFn: InsertFnType) {\n            const url = downloadUrl.value.replace('%fileId%', res.id);\n            const alt = res.filename;\n            // 从 res 中找到 url alt href ，然后插入图片\n            insertFn(url, alt, '');\n          },\n        },\n        // 插入链接\n        insertLink: {\n          checkLink: customCheckLinkFn, // 也支持 async 函数\n          parseLinkUrl: customParseLinkUrl, // 也支持 async 函数\n        },\n        // 更新链接\n        editLink: {\n          checkLink: customCheckLinkFn, // 也支持 async 函数\n          parseLinkUrl: customParseLinkUrl, // 也支持 async 函数\n        },\n      },\n      hoverbarKeys: {\n        link: {\n          menuKeys: ['editLink', 'unLink', 'customViewLink'],\n        },\n      },\n    };\n\n    // 图片预览\n    const handlePreview = async (el: IData) => {\n      const url: string = el.src;\n      if (readonlyState.value) {\n        openPreview(url);\n      } else {\n        // 需先选中后点击才是预览\n        const nodeEntries = SlateEditor.nodes(editorRef.value, {\n          match: (node: SlateNode) => {\n            if (SlateElement.isElement(node)) {\n              if ((node as IData).type === 'image') {\n                return true; // 匹配 image\n              }\n            }\n            return false;\n          },\n          universal: true,\n        });\n\n        if (nodeEntries) {\n          for (const nodeEntry of nodeEntries) {\n            const [node] = nodeEntry;\n            if ((node as IData).type === 'image') {\n              // 确保点击图片与选中图片一致\n              if (url.endsWith((node as IData).src)) {\n                openPreview((node as IData).src);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    /**\n     * 打开图片预览框\n     *\n     * @param {string} url\n     */\n    const openPreview = async (url: string) => {\n      previewUrl.value = url;\n      // 打开预览图片模态\n      previewUrlList.value = [url];\n      await nextTick();\n      if (previewRef.value) {\n        const { container } = previewRef.value.$refs;\n        if (container) {\n          container.children[0].click();\n        }\n      }\n    };\n\n    // 设置图片hook\n    const setImageHook = (editor: IDomEditor) => {\n      const editorContainer = editor.getEditableContainer();\n      if (editorContainer) {\n        const imgs = editorContainer.querySelectorAll('img');\n        imgs.forEach(img => {\n          img.onclick = event => {\n            const el: IData | null = event.target;\n            if (el) {\n              handlePreview(el);\n            }\n          };\n        });\n      }\n    };\n\n    /**\n     * 处理绑定或卸载事件\n     */\n    const handleEventListener = (funcName: string) => {\n      if (previewRef.value) {\n        const { container } = previewRef.value.$refs;\n        if (container) {\n          const imgEl = container.querySelector('.el-image-viewer__wrapper');\n          // eslint-disable-next-line no-use-before-define\n          imgEl?.[funcName]('keydown', handleKeyPress);\n        }\n      }\n    };\n\n    /**\n     * 处理键盘事件\n     */\n    const handleKeyPress = async (event: KeyboardEvent) => {\n      if (event.key === 'Escape' || event.keyCode === 27) {\n        event.stopPropagation(); // 阻止事件冒泡到其他元素\n        event.preventDefault(); // 阻止事件的默认行为\n        await nextTick();\n        handleEventListener('removeEventListener');\n        // 关闭预览图片模态\n        previewUrlList.value = [];\n      }\n    };\n\n    /**\n     * 打开图片预览\n     */\n    const onShow = async () => {\n      await nextTick();\n      handleEventListener('addEventListener');\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let chatInstance: any;\n\n    const onClickAI = async () => {\n      if (c.deService) {\n        const module = await import('@ibiz-template-plugin/ai-chat');\n        const chat = module.chat || module.default.chat;\n        chatInstance = chat;\n        const aiChat = chat.create({\n          question: async (arr: IChatMessage[]) => {\n            const id = createUUID();\n            await c.deService?.aiChatSse(\n              (msg: IPortalAsyncAction) => {\n                ibiz.log.info('aiChatSse', msg);\n                // 20: 持续回答中，消息会持续推送。同一个消息 id 会显示在同一个框内\n                if (msg.actionstate === 20 && msg.actionresult) {\n                  aiChat.addMessage({\n                    messageid: id,\n                    state: msg.actionstate,\n                    type: 'DEFAULT',\n                    role: 'ASSISTANT',\n                    content: msg.actionresult as string,\n                  });\n                }\n                // 30: 回答完成，包含具体所有消息内容。直接覆盖之前的临时拼接消息\n                else if (msg.actionstate === 30 && msg.actionresult) {\n                  const result = JSON.parse(msg.actionresult as string);\n                  const { choices } = result;\n                  if (choices && choices.length > 0) {\n                    aiChat.replaceMessage({\n                      messageid: id,\n                      state: msg.actionstate,\n                      type: 'DEFAULT',\n                      role: 'ASSISTANT',\n                      content: choices[0].content || '',\n                    });\n                  }\n                }\n                // 40: 回答报错，展示错误信息\n                else if (msg.actionstate === 40) {\n                  aiChat.replaceMessage({\n                    messageid: id,\n                    state: msg.actionstate,\n                    type: 'ERROR',\n                    role: 'ASSISTANT',\n                    content: msg.actionresult as string,\n                  });\n                }\n              },\n              c.context,\n              {},\n              {\n                messages: arr,\n              },\n            );\n            aiChat.addMessage({\n              messageid: id,\n              state: 10,\n              type: 'DEFAULT',\n              role: 'ASSISTANT',\n              content: '',\n            });\n            return true;\n          },\n          action: ((action: string, message: IChatMessage) => {\n            if (action === 'backfill') {\n              emit('change', message.content);\n              isBackFill.value = true;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          }) as any,\n          closed: () => {\n            // 关闭AI聊天窗口时左侧评论区聚焦\n            if (editorRef.value) {\n              if (props.value) {\n                if (editorRef.value) {\n                  editorRef.value.focus(true);\n                }\n              }\n            }\n          },\n        });\n        const res = await c.deService?.aiChatHistory(c.context, {});\n        if (res.data && Array.isArray(res.data)) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          res.data.forEach((item: any) => {\n            const msg = {\n              messageid: createUUID(),\n              state: 30,\n              type: 'DEFAULT',\n              role: item.role,\n              content: item.content,\n            } as const;\n            aiChat.addMessage(msg);\n          });\n        }\n      }\n    };\n\n    // 组件销毁时，也及时销毁编辑器，重要！\n    onBeforeUnmount(() => {\n      if (chatInstance) {\n        chatInstance.close();\n      }\n\n      const editor = editorRef.value;\n      if (editor == null) return;\n\n      editor.destroy();\n    });\n\n    // 编辑器回调函数\n    // 编辑器创建完毕时的回调函数\n    const handleCreated = (editor: IDomEditor) => {\n      editorRef.value = editor; // 记录 editor 实例，重要！\n      let modalUtil: ModalUtil;\n      // 模态打开\n      editor.on('modalOrPanelShow', modalOrPanel => {\n        modalUtil = new ModalUtil(modalOrPanel, htmlRef.value);\n      });\n      // 模态关闭\n      editor.on('modalOrPanelHide', () => {\n        if (modalUtil) {\n          modalUtil.destroy();\n        }\n      });\n      editor.setHtml(valueHtml.value);\n\n      editor.on('aiClick', () => {\n        onClickAI();\n      });\n\n      c.onCreated(editorRef.value, props.data, toolbarConfig);\n      c.onLineEditing(editorRef.value);\n    };\n    // 编辑器内容、选区变化时的回调函数\n    const handleChange = (editor: IDomEditor) => {\n      // console.log('change:', editor.getHtml());\n      const html = editor.getHtml();\n      setImageHook(editor);\n      // wangEditor初始值抛空字符串给后台\n      const emitValue = html === '<p><br></p>' ? '' : html;\n      if (\n        emitValue === props.value ||\n        (emitValue === '' && isNil(props.value))\n      ) {\n        return;\n      }\n      // 修复初始化有值编辑器也会抛值导致表单脏值检查异常问题\n      if (!hasEnableEdit.value) {\n        emit('change', emitValue);\n        c.evt.emit('onChange', {\n          eventArg: emitValue,\n        });\n      }\n    };\n    // 编辑器销毁时的回调函数。调用 editor.destroy() 即可销毁编辑器\n    const handleDestroyed = (_editor: IDomEditor) => {\n      // console.log('destroyed', _editor);\n      // c.onDestroyed();\n      c.evt.off('setHtml', handleSetHtml);\n      c.evt.off('clear', handleClear);\n      c.evt.off('onSetReply', handleSetReply);\n    };\n    // 编辑器 focus 时的回调函数\n    const handleFocus = () => {\n      // console.log('focus', _editor);\n      emit('focus');\n      c.evt.emit('onFocus', {\n        eventArg: props.value,\n      });\n    };\n    // 编辑器 blur 时的回调函数。\n    const handleBlur = () => {\n      // console.log('blur', _editor);\n      emit('blur');\n      c.evt.emit('onBlur', { eventArg: props.value });\n    };\n    // 自定义编辑器 alert\n    const customAlert = (info: string, type: string) => {\n      // eslint-disable-next-line no-alert\n      alert(`【自定义提示】${type} - ${info}`);\n    };\n    // 自定义粘贴。可阻止编辑器的默认粘贴，实现自己的粘贴逻辑\n    const customPaste = (\n      editor: IDomEditor,\n      event: ClipboardEvent,\n      callback: (_n: boolean) => void,\n    ) => {\n      // 返回值（注意，vue 事件的返回值，不能用 return）\n      // callback(false); // 返回 false ，阻止默认粘贴行为\n      callback(true); // 返回 true ，继续默认的粘贴行为\n    };\n\n    // 插入文本\n    const insertText = (str: string) => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n      editor.insertText(str);\n    };\n\n    // 获取非格式化的 html\n    const printHtml = () => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n      console.log(editor.getHtml());\n    };\n\n    // 禁用编辑器\n    const disable = () => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n      editor.disable();\n    };\n\n    // 取消禁用编辑器\n    const enable = () => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n      editor.enable();\n    };\n\n    const calcHtmlStyle = () => {\n      if (htmlContent.value && toolbarRef.value) {\n        const htmlContentHeight = htmlContent.value.offsetHeight;\n\n        // 监听工具栏高度变化动态去算\n        resizeObserver = new ResizeObserver(entries => {\n          // 处理组件高度变化\n          const { height } = entries[0].contentRect;\n          if (height !== lastToolbarHeight) {\n            const tempCssVars = {\n              height: `${htmlContentHeight - entries[0].contentRect.height}px`,\n            };\n            cssVars.value = ns.cssVarBlock(tempCssVars);\n            lastToolbarHeight = height;\n          }\n        });\n        resizeObserver.observe(toolbarRef.value.selector);\n      }\n    };\n\n    // 光标移动到第一行末尾\n    const moveToLastStr = () => {\n      if (props.value) {\n        const index = props.value.indexOf('</p>');\n        if (index >= 0) {\n          const offset = editorRef.value.selection.anchor?.offset;\n          const path = editorRef.value.selection.anchor?.path;\n          if (offset === 0 && path.length > 0 && path[0] === 0) {\n            editorRef.value.move(index - 3);\n          }\n        }\n      }\n    };\n\n    // 更改编辑状态\n    const changeEditState = () => {\n      readonlyState.value = !readonlyState.value;\n      if (!readonlyState.value) {\n        enable();\n        editorRef.value.focus();\n        moveToLastStr();\n      } else {\n        disable();\n      }\n    };\n\n    // 绘制取消消息盒子\n    const renderCancelMessage = () => {\n      return (\n        <div class={ns.be('message', 'message-content')}>\n          <p>确定要取消编辑吗？</p>\n          <p class={ns.bem('message', 'message-content', 'message-tip')}>\n            取消编辑将无法保存修改的内容，且不能找回。\n          </p>\n        </div>\n      );\n    };\n\n    // 取消编辑\n    const cancelEdit = () => {\n      if (props.value !== valueHtml.value) {\n        ElMessageBox({\n          title: '确认取消',\n          type: 'warning',\n          customClass: ns.b('message'),\n          message: renderCancelMessage(),\n          showCancelButton: true,\n          cancelButtonClass: ns.be('message', 'message-cancel'),\n          confirmButtonClass: ns.be('message', 'message-comfire'),\n        })\n          .then(() => {\n            if (props.value) {\n              const html = c.parseNode(props.value);\n              valueHtml.value = html;\n            } else {\n              valueHtml.value = '';\n            }\n            changeEditState();\n          })\n          .catch(() => {\n            // 重新聚焦\n            editorRef.value.focus();\n          });\n      } else {\n        changeEditState();\n      }\n    };\n\n    // 确认保存\n    const save = () => {\n      readonlyState.value = true;\n      editorRef.value.disable();\n      const { value } = valueHtml;\n      emit('change', value);\n      if (isFullScreen.value) {\n        isFullScreen.value = false;\n      }\n    };\n\n    // 绘制底部取消确认按钮\n    const renderFooter = () => {\n      if (hasEnableEdit.value) {\n        return (\n          <div\n            class={[\n              ns.b('footer'),\n              { [ns.b('footer-dialog')]: isFullScreen.value },\n            ]}\n          >\n            <div class={ns.be('footer', 'cancel')} onClick={() => cancelEdit()}>\n              取消\n            </div>\n            <div class={ns.be('footer', 'save')} onClick={() => save()}>\n              保存\n            </div>\n          </div>\n        );\n      }\n      return null;\n    };\n\n    // 更新全屏状态\n    const changeFullScreenState = () => {\n      isFullScreen.value = !isFullScreen.value;\n      nextTick(() => {\n        if (readonlyState.value) {\n          disable();\n        } else {\n          enable();\n          editorRef.value.focus();\n        }\n      });\n    };\n\n    // 绘制全屏图标\n    const isAllowRenderFullScreen = () => {\n      if (enableFullScreen.value) {\n        if (isFullScreen.value) {\n          return (\n            <i\n              class='fa fa-compress'\n              aria-hidden='true'\n              title='缩小'\n              onClick={() => changeFullScreenState()}\n            ></i>\n          );\n        }\n        return (\n          <i\n            class='fa fa-expand'\n            aria-hidden='true'\n            title='放大'\n            onClick={() => changeFullScreenState()}\n          ></i>\n        );\n      }\n      return null;\n    };\n\n    // 绘制头部工具栏\n    const renderHeaserToolbar = () => {\n      if (hasEnableEdit.value || enableFullScreen.value) {\n        return (\n          <div class={ns.b('custom-toolbar')}>\n            {hasEnableEdit.value && enableEdit.value && readonlyState.value ? (\n              <i\n                class='fa fa-edit'\n                aria-hidden='true'\n                title='启用编辑'\n                onClick={() => changeEditState()}\n              ></i>\n            ) : null}\n            {isAllowRenderFullScreen()}\n          </div>\n        );\n      }\n      return null;\n    };\n\n    // 绘制回复\n    const renderReply = () => {\n      if (c.reply.value) {\n        const htmlCode = ScriptFactory.execScriptFn(\n          { value: c.reply.value },\n          c.replyScript,\n          { singleRowReturn: true, isAsync: false },\n        ) as string;\n        return (\n          <div class={ns.b('reply')}>\n            <div class={ns.be('reply', 'content')} v-html={htmlCode}></div>\n            <ion-icon\n              name='close-outline'\n              onClick={() => c.removeReply()}\n            ></ion-icon>\n          </div>\n        );\n      }\n    };\n\n    // 绘制编辑器内容\n    const renderEditorContent = () => {\n      if (c.hidden.value) {\n        return null;\n      }\n      return (\n        <div class={ns.b('content')} ref='htmlContent' style={cssVars.value}>\n          <Editor\n            ref='htmlRef'\n            class={ns.b('editor')}\n            v-model={valueHtml.value}\n            default-config={editorConfig}\n            mode='default'\n            onOnCreated={handleCreated}\n            onOnChange={handleChange}\n            onOnDestroyed={handleDestroyed}\n            onOnFocus={handleFocus}\n            onOnBlur={handleBlur}\n            oncustomAlert={customAlert}\n            oncustomPaste={customPaste}\n          />\n          {renderReply()}\n          <Toolbar\n            ref='toolbarRef'\n            editor={editorRef.value}\n            default-config={toolbarConfig}\n            mode='default'\n            class={ns.b('toolbar')}\n          />\n        </div>\n      );\n    };\n\n    // 绘制预览框\n    const renderPreview = () => {\n      return (\n        <el-image\n          class={ns.e('preview')}\n          ref='previewRef'\n          zoom-rate={1.1}\n          src={previewUrl.value}\n          preview-src-list={previewUrlList.value}\n          hide-on-click-modal={true}\n          onShow={onShow}\n          fit='cover'\n        />\n      );\n    };\n\n    onMounted(() => {\n      calcHtmlStyle();\n\n      // 监听值变化赋值\n      watch(\n        () => props.value,\n        (newVal, oldVal) => {\n          if (\n            newVal !== oldVal &&\n            (typeof props.value === 'string' || newVal == null)\n          ) {\n            if (newVal == null) {\n              valueHtml.value = '';\n            } else {\n              valueHtml.value = newVal as string;\n            }\n            if (isBackFill.value) {\n              if (editorRef.value) {\n                nextTick(() => {\n                  editorRef.value.focus(true);\n                });\n              }\n              isBackFill.value = false;\n            }\n          }\n        },\n        { immediate: true },\n      );\n\n      // 监听disabled禁用\n      watch(\n        () => props.disabled,\n        (newVal, oldVal) => {\n          if (newVal !== oldVal) {\n            if (newVal === true) {\n              disable();\n            } else {\n              enable();\n            }\n          }\n        },\n        { immediate: true },\n      );\n    });\n\n    return {\n      ns,\n      editorRef,\n      previewRef,\n      mode: 'default',\n      valueHtml,\n      toolbarConfig,\n      editorConfig,\n      handleCreated,\n      handleChange,\n      handleDestroyed,\n      handleFocus,\n      handleBlur,\n      customAlert,\n      customPaste,\n      insertText,\n      printHtml,\n      disable,\n      enable,\n      renderHeaserToolbar,\n      renderEditorContent,\n      renderFooter,\n      htmlContent,\n      hasEnableEdit,\n      cssVars,\n      toolbarRef,\n      htmlRef,\n      isFullScreen,\n      readonlyState,\n      changeFullScreenState,\n      renderPreview,\n    };\n  },\n  render() {\n    return !this.isFullScreen ? (\n      <div\n        class={[\n          this.ns.b(),\n          { [this.ns.b('editor-readonly')]: this.readonlyState },\n        ]}\n      >\n        {this.renderHeaserToolbar()}\n        {this.renderEditorContent()}\n        {this.renderPreview()}\n        {this.hasEnableEdit && !this.readonlyState ? this.renderFooter() : null}\n      </div>\n    ) : (\n      <el-dialog\n        v-model={this.isFullScreen}\n        width='80%'\n        top='10vh'\n        class={this.ns.b('dialog-full-screen')}\n        onClose={() => this.changeFullScreenState()}\n      >\n        <div\n          class={[\n            this.ns.b(),\n            { [this.ns.b('editor-readonly')]: this.readonlyState },\n          ]}\n        >\n          {this.renderHeaserToolbar()}\n          {this.renderEditorContent()}\n          {this.hasEnableEdit && !this.readonlyState\n            ? this.renderFooter()\n            : null}\n        </div>\n      </el-dialog>\n    );\n  },\n});\n\nexport default IBizHtmlContent;\n","export const defaultToolbars = [\n  'headerSelect',\n  'blockquote',\n  '|',\n  'bold',\n  'underline',\n  'italic',\n  {\n    key: 'group-more-style',\n    title: '更多',\n    iconSvg:\n      '<svg viewBox=\"0 0 1024 1024\"><path d=\"M204.8 505.6m-76.8 0a76.8 76.8 0 1 0 153.6 0 76.8 76.8 0 1 0-153.6 0Z\"></path><path d=\"M505.6 505.6m-76.8 0a76.8 76.8 0 1 0 153.6 0 76.8 76.8 0 1 0-153.6 0Z\"></path><path d=\"M806.4 505.6m-76.8 0a76.8 76.8 0 1 0 153.6 0 76.8 76.8 0 1 0-153.6 0Z\"></path></svg>',\n    menuKeys: ['through', 'code', 'sup', 'sub', 'clearStyle'],\n  },\n  'color',\n  'bgColor',\n  '|',\n  'fontSize',\n  'fontFamily',\n  'lineHeight',\n  '|',\n  'bulletedList',\n  'numberedList',\n  'todo',\n  {\n    key: 'group-justify',\n    title: '对齐',\n    iconSvg:\n      '<svg viewBox=\"0 0 1024 1024\"><path d=\"M768 793.6v102.4H51.2v-102.4h716.8z m204.8-230.4v102.4H51.2v-102.4h921.6z m-204.8-230.4v102.4H51.2v-102.4h716.8zM972.8 102.4v102.4H51.2V102.4h921.6z\"></path></svg>',\n    menuKeys: [\n      'justifyLeft',\n      'justifyRight',\n      'justifyCenter',\n      'justifyJustify',\n    ],\n  },\n  {\n    key: 'group-indent',\n    title: '缩进',\n    iconSvg:\n      '<svg viewBox=\"0 0 1024 1024\"><path d=\"M0 64h1024v128H0z m384 192h640v128H384z m0 192h640v128H384z m0 192h640v128H384zM0 832h1024v128H0z m0-128V320l256 192z\"></path></svg>',\n    menuKeys: ['indent', 'delIndent'],\n  },\n  '|',\n  'emoji',\n  'insertLink',\n  {\n    key: 'group-image',\n    title: '图片',\n    iconSvg:\n      '<svg viewBox=\"0 0 1024 1024\"><path d=\"M959.877 128l0.123 0.123v767.775l-0.123 0.122H64.102l-0.122-0.122V128.123l0.122-0.123h895.775zM960 64H64C28.795 64 0 92.795 0 128v768c0 35.205 28.795 64 64 64h896c35.205 0 64-28.795 64-64V128c0-35.205-28.795-64-64-64zM832 288.01c0 53.023-42.988 96.01-96.01 96.01s-96.01-42.987-96.01-96.01S682.967 192 735.99 192 832 234.988 832 288.01zM896 832H128V704l224.01-384 256 320h64l224.01-192z\"></path></svg>',\n    menuKeys: ['insertImage', 'uploadImage'],\n  },\n  {\n    key: 'group-video',\n    title: '视频',\n    iconSvg:\n      '<svg viewBox=\"0 0 1024 1024\"><path d=\"M981.184 160.096C837.568 139.456 678.848 128 512 128S186.432 139.456 42.816 160.096C15.296 267.808 0 386.848 0 512s15.264 244.16 42.816 351.904C186.464 884.544 345.152 896 512 896s325.568-11.456 469.184-32.096C1008.704 756.192 1024 637.152 1024 512s-15.264-244.16-42.816-351.904zM384 704V320l320 192-320 192z\"></path></svg>',\n    menuKeys: ['insertVideo', 'uploadVideo'],\n  },\n  'insertTable',\n  'codeBlock',\n  'divider',\n  '|',\n  'undo',\n  'redo',\n];\n","/* eslint-disable prettier/prettier */\nimport { SlateNode, SlatePoint, SlateRange } from '@wangeditor/editor';\n\n/**\n * 光标信息\n * - 信息中的offset均为当前行中相对于首位字符的偏移量\n */\nexport interface ICursor {\n  /**\n   * 光标老位置\n   */\n  position?: SlatePoint;\n  /**\n   * 光标新位置\n   */\n  newPosition?: SlatePoint;\n  /**\n   * 选区范围\n   */\n  selectionRange?: SlateRange;\n}\n\n/**\n * 用户标记数据\n *\n */\nexport interface IPersMarkData {\n  /**\n   * 用户标记\n   */\n  id: string;\n  /**\n   * 上一次操作的光标信息\n   */\n  preCursor?: ICursor;\n  /**\n   * 光标信息\n   */\n  cursor: ICursor;\n}\n\n/**\n * 用户标记节点\n */\nexport interface IPersMarkNode {\n  /**\n   * 节点结构\n   */\n  node: SlateNode;\n  /**\n   * 参数\n   */\n  param: IPersMarkData;\n}\nexport const presRegex = /<span class='personnel-marker'>(.*?)<\\/span>/;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  onBeforeUnmount,\n  ref,\n  shallowRef,\n  onMounted,\n  watch,\n  Ref,\n  defineComponent,\n  nextTick,\n  onUnmounted,\n} from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nimport {\n  IEditorConfig,\n  IToolbarConfig,\n  SlateEditor,\n  SlateElement,\n  SlateNode,\n} from '@wangeditor/editor';\nimport type { IDomEditor } from '@wangeditor/editor';\nimport { createUUID, getCookie } from 'qx-util';\nimport { isNil } from 'ramda';\nimport {\n  getHtmlProps,\n  useClickOutside,\n  useNamespace,\n} from '@ibiz-template/vue3-util';\nimport {\n  CoreConst,\n  IChatMessage,\n  IPortalAsyncAction,\n  OnClickOutsideResult,\n  awaitTimeout,\n  debounce,\n} from '@ibiz-template/core';\nimport { ElMessageBox } from 'element-plus';\nimport { defaultToolbars } from '../html-comment-toolbars';\nimport { HtmlCommentController } from '../html-comment.controller';\nimport { ModalUtil } from '../utils/modal-utils';\nimport { presRegex } from '../interface';\n\ntype InsertFnType = (_url: string, _alt: string, _href: string) => void;\n\nconst IBizHtmlCollapse = defineComponent({\n  name: 'IBizHtmlCollapse',\n  props: getHtmlProps<HtmlCommentController>(),\n  emits: ['change', 'blur', 'focus', 'enter', 'infoTextChange', 'link'],\n  setup(props, { emit }) {\n    const ns = useNamespace('html');\n\n    const c = props.controller!;\n\n    // HTML ref\n    const htmlContent = ref();\n\n    // 样式变量\n    const cssVars = ref({});\n\n    // 浏览器ResizeObserver对象\n    let resizeObserver: ResizeObserver | null = null;\n\n    // 上次工具栏高度\n    let lastToolbarHeight = 0;\n\n    // 工具栏ref\n    const toolbarRef = ref();\n\n    // 编辑器实例，必须用 shallowRef，重要！\n    const editorRef = shallowRef();\n\n    // 富文本ref\n    const htmlRef = ref();\n\n    // 图片预览ref\n    const previewRef = ref();\n\n    const containerRef = ref();\n\n    // 内容 HTML\n    const valueHtml = ref('');\n\n    // 请求头\n    const headers: Ref<IData> = ref({\n      Authorization: `Bearer ${getCookie(CoreConst.TOKEN)}`,\n    });\n\n    // 上传文件路径\n    const uploadUrl: Ref<string> = ref('');\n\n    // 下载文件路径\n    const downloadUrl: Ref<string> = ref('');\n\n    // 允许编辑\n    const enableEdit = ref(true);\n\n    // 是否存在编辑器参数enableEdit\n    const hasEnableEdit = ref(false);\n\n    // 只读状态\n    const readonlyState = ref(false);\n\n    // 允许全屏打开\n    const enableFullScreen = ref(false);\n\n    // 是否全屏\n    const isFullScreen = ref(false);\n\n    // 是否折叠\n    const collapse = ref(true);\n\n    const showExpand = ref(false);\n\n    // 预览图片地址\n    const previewUrl = ref('');\n\n    // 是否是回填\n    const isBackFill = ref(false);\n\n    // 点击外部\n    let funcs: OnClickOutsideResult;\n\n    // 预览图片集合,此变量用于控制图片模态的显示隐藏,为空时会关闭模态,element图片组件未支持控制是否显示的属性\n    const previewUrlList: Ref<string[] | []> = ref([]);\n\n    const editorModel = c.model;\n    if (editorModel.editorParams) {\n      if (editorModel.editorParams.enableEdit) {\n        hasEnableEdit.value = true;\n        readonlyState.value = true;\n        enableEdit.value =\n          c.toBoolean(editorModel.editorParams.enableEdit) &&\n          !props.readonly &&\n          !props.disabled;\n      }\n      if (editorModel.editorParams.enableFullScreen) {\n        enableFullScreen.value = c.toBoolean(\n          editorModel.editorParams.enableFullScreen,\n        );\n      }\n    }\n\n    if (props.readonly) {\n      hasEnableEdit.value = false;\n      readonlyState.value = true;\n    }\n\n    // data响应式变更基础路径\n    watch(\n      () => props.data,\n      newVal => {\n        if (newVal) {\n          const urls = ibiz.util.file.calcFileUpDownUrl(\n            c.context,\n            c.params,\n            newVal,\n            c.editorParams,\n          );\n          uploadUrl.value = urls.uploadUrl;\n          downloadUrl.value = urls.downloadUrl;\n        }\n      },\n      { immediate: true, deep: true },\n    );\n\n    // 自定义校验链接\n    const customCheckLinkFn = (\n      text: string,\n      url: string,\n    ): string | boolean | undefined => {\n      if (!url) {\n        return;\n      }\n      // if (url.indexOf('http') !== 0) {\n      //   return '链接必须以 http/https 开头';\n      // }\n      return true;\n\n      // 返回值有三种选择：\n      // 1. 返回 true ，说明检查通过，编辑器将正常插入链接\n      // 2. 返回一个字符串，说明检查未通过，编辑器会阻止插入。会 alert 出错误信息（即返回的字符串）\n      // 3. 返回 undefined（即没有任何返回），说明检查未通过，编辑器会阻止插入。但不会提示任何信息\n    };\n\n    // 自定义转换链接 url\n    const customParseLinkUrl = (url: string): string => {\n      // if (url.indexOf('http') !== 0) {\n      //   return `http://${url}`;\n      // }\n      return url;\n    };\n\n    // 组件销毁时，也及时销毁编辑器，重要！\n    onBeforeUnmount(() => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n\n      editor.destroy();\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let chatInstance: any;\n\n    const onClickAI = async () => {\n      if (c.deService) {\n        const module = await import('@ibiz-template-plugin/ai-chat');\n        const chat = module.chat || module.default.chat;\n        chatInstance = chat;\n        const aiChat = chat.create({\n          question: async (arr: IChatMessage[]) => {\n            const id = createUUID();\n            await c.deService?.aiChatSse(\n              (msg: IPortalAsyncAction) => {\n                ibiz.log.info('aiChatSse', msg);\n                // 20: 持续回答中，消息会持续推送。同一个消息 id 会显示在同一个框内\n                if (msg.actionstate === 20 && msg.actionresult) {\n                  aiChat.addMessage({\n                    messageid: id,\n                    state: msg.actionstate,\n                    type: 'DEFAULT',\n                    role: 'ASSISTANT',\n                    content: msg.actionresult as string,\n                  });\n                }\n                // 30: 回答完成，包含具体所有消息内容。直接覆盖之前的临时拼接消息\n                else if (msg.actionstate === 30 && msg.actionresult) {\n                  const result = JSON.parse(msg.actionresult as string);\n                  const { choices } = result;\n                  if (choices && choices.length > 0) {\n                    aiChat.replaceMessage({\n                      messageid: id,\n                      state: msg.actionstate,\n                      type: 'DEFAULT',\n                      role: 'ASSISTANT',\n                      content: choices[0].content || '',\n                    });\n                  }\n                }\n                // 40: 回答报错，展示错误信息\n                else if (msg.actionstate === 40) {\n                  aiChat.replaceMessage({\n                    messageid: id,\n                    state: msg.actionstate,\n                    type: 'ERROR',\n                    role: 'ASSISTANT',\n                    content: msg.actionresult as string,\n                  });\n                }\n              },\n              c.context,\n              {},\n              {\n                messages: arr,\n              },\n            );\n            aiChat.addMessage({\n              messageid: id,\n              state: 10,\n              type: 'DEFAULT',\n              role: 'ASSISTANT',\n              content: '',\n            });\n            return true;\n          },\n          action: ((action: string, message: IChatMessage) => {\n            if (action === 'backfill') {\n              if (hasEnableEdit.value) {\n                valueHtml.value = message.content;\n              } else {\n                emit('change', message.content);\n              }\n              isBackFill.value = true;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          }) as any,\n          closed: () => {\n            // 关闭AI聊天窗口时左侧评论区聚焦\n            if (editorRef.value) {\n              editorRef.value.focus(true);\n            }\n          },\n        });\n        const res = await c.deService?.aiChatHistory(c.context, {});\n        if (res.data && Array.isArray(res.data)) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          res.data.forEach((item: any) => {\n            const msg = {\n              messageid: createUUID(),\n              state: 30,\n              type: 'DEFAULT',\n              role: item.role,\n              content: item.content,\n            } as const;\n            aiChat.addMessage(msg);\n          });\n        }\n      }\n    };\n\n    // 工具栏配置\n    const toolbarConfig: Partial<IToolbarConfig> = {\n      toolbarKeys: defaultToolbars,\n    };\n\n    if (c.chatCompletion) {\n      toolbarConfig.insertKeys = {\n        index: 60,\n        keys: ['|', 'aichart'],\n      };\n    }\n\n    if (c.insertKeys.length > 0 && toolbarConfig.toolbarKeys) {\n      c.insertKeys.forEach((item: IData) => {\n        if (item.keys) {\n          item.keys.forEach((key: string, i: number) => {\n            if (!toolbarConfig.toolbarKeys!.includes(key)) {\n              toolbarConfig.toolbarKeys!.splice(item.index + i, 0, key);\n            }\n          });\n        }\n      });\n    }\n\n    // 编辑器配置\n    const editorConfig: Partial<IEditorConfig> = {\n      placeholder: c.placeHolder,\n      readOnly: hasEnableEdit.value ? readonlyState.value : props.readonly,\n      MENU_CONF: {\n        // 图片上传\n        uploadImage: {\n          // 上传地址\n          server: uploadUrl.value,\n\n          // form-data fieldName ，默认值 'wangeditor-uploaded-image'\n          fieldName: 'file',\n\n          // 单个文件的最大体积限制，默认为 2M\n          maxFileSize: 10 * 1024 * 1024, // 10M\n\n          // 最多可上传几个文件，默认为 100\n          maxNumberOfFiles: 10,\n\n          // 选择文件时的类型限制，默认为 ['image/*'] 。如不想限制，则设置为 []\n          allowedFileTypes: [],\n\n          // 自定义增加 http  header\n          headers: headers.value,\n\n          // 跨域是否传递 cookie ，默认为 false\n          withCredentials: true,\n\n          // 上传之前触发\n          onBeforeUpload(file: File) {\n            // TS 语法\n            // onBeforeUpload(file) {    // JS 语法\n            // file 选中的文件，格式如 { key: file }\n            return file;\n\n            // 可以 return\n            // 1. return file 或者 new 一个 file ，接下来将上传\n            // 2. return false ，不上传这个 file\n          },\n\n          // 上传进度的回调函数\n          onProgress(progress: number) {\n            console.log('progress', progress);\n          },\n\n          // 单个文件上传成功之后\n          onSuccess(file: File, res: IData) {\n            console.log(`${file.name} 上传成功`, res);\n          },\n\n          // 单个文件上传失败\n          onFailed(file: File, res: IData) {\n            console.log(`${file.name} 上传失败`, res);\n          },\n\n          // 上传错误，或者触发 timeout 超时\n          onError(file: File, err: IData, res: IData) {\n            console.log(`${file.name} 上传出错`, err, res);\n          },\n\n          // 自定义插入图片\n          async customInsert(res: IData, insertFn: InsertFnType) {\n            const url = downloadUrl.value.replace('%fileId%', res.id);\n            const alt = res.filename;\n            // 从 res 中找到 url alt href ，然后插入图片\n            insertFn(url, alt, '');\n          },\n        },\n        // 插入链接\n        insertLink: {\n          checkLink: customCheckLinkFn, // 也支持 async 函数\n          parseLinkUrl: customParseLinkUrl, // 也支持 async 函数\n        },\n        // 更新链接\n        editLink: {\n          checkLink: customCheckLinkFn, // 也支持 async 函数\n          parseLinkUrl: customParseLinkUrl, // 也支持 async 函数\n        },\n      },\n      hoverbarKeys: {\n        link: {\n          menuKeys: ['editLink', 'unLink', 'customViewLink'],\n        },\n      },\n    };\n\n    // 组件销毁时，也及时销毁编辑器，重要！\n    onBeforeUnmount(() => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n\n      editor.destroy();\n    });\n\n    // 判断是否折叠\n    const handleExpand = async (editor: IDomEditor) => {\n      if (c.maxHeight) {\n        const container = editor.getEditableContainer();\n        showExpand.value = (container as IData).offsetHeight > c.maxHeight;\n      }\n    };\n\n    // 图片预览\n    const handlePreview = async (el: IData) => {\n      const url: string = el.src;\n      if (readonlyState.value) {\n        openPreview(url);\n      } else {\n        // 需先选中后点击才是预览\n        const nodeEntries = SlateEditor.nodes(editorRef.value, {\n          match: (node: SlateNode) => {\n            if (SlateElement.isElement(node)) {\n              if ((node as IData).type === 'image') {\n                return true; // 匹配 image\n              }\n            }\n            return false;\n          },\n          universal: true,\n        });\n\n        if (nodeEntries) {\n          for (const nodeEntry of nodeEntries) {\n            const [node] = nodeEntry;\n            if ((node as IData).type === 'image') {\n              // 确保点击图片与选中图片一致\n              if (url.endsWith((node as IData).src)) {\n                openPreview((node as IData).src);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    /**\n     * 打开图片预览框\n     *\n     * @param {string} url\n     */\n    const openPreview = async (url: string) => {\n      previewUrl.value = url;\n      // 打开预览图片模态\n      previewUrlList.value = [url];\n      await nextTick();\n      if (previewRef.value) {\n        const { container } = previewRef.value.$refs;\n        if (container) {\n          container.children[0].click();\n        }\n      }\n    };\n\n    // 设置图片hook\n    const setImageHook = (editor: IDomEditor) => {\n      const editorContainer = editor.getEditableContainer();\n      if (editorContainer) {\n        const imgs = editorContainer.querySelectorAll('img');\n        imgs.forEach(img => {\n          img.onload = () => {\n            handleExpand(editor);\n          };\n          img.onclick = event => {\n            const el: IData | null = event.target;\n            if (el) {\n              handlePreview(el);\n            }\n          };\n        });\n      }\n    };\n\n    /**\n     * 处理绑定或卸载事件\n     */\n    const handleEventListener = (funcName: string) => {\n      if (previewRef.value) {\n        const { container } = previewRef.value.$refs;\n        if (container) {\n          const imgEl = container.querySelector('.el-image-viewer__wrapper');\n          // eslint-disable-next-line no-use-before-define\n          imgEl?.[funcName]('keydown', handleKeyPress);\n        }\n      }\n    };\n\n    /**\n     * 处理键盘事件\n     */\n    const handleKeyPress = async (event: KeyboardEvent) => {\n      if (event.key === 'Escape' || event.keyCode === 27) {\n        event.stopPropagation(); // 阻止事件冒泡到其他元素\n        event.preventDefault(); // 阻止事件的默认行为\n        await nextTick();\n        handleEventListener('removeEventListener');\n        // 关闭预览图片模态\n        previewUrlList.value = [];\n      }\n    };\n\n    /**\n     * 打开图片预览\n     */\n    const onShow = async () => {\n      await nextTick();\n      handleEventListener('addEventListener');\n    };\n\n    /**\n     * 绘制模式为json时，处理抛值逻辑\n     */\n    const handleEmit = (): void => {\n      let emitValue = valueHtml.value;\n      // 去除用户标记\n      emitValue = emitValue.replace(presRegex, '');\n      // 绘制模式为JSON\n      if (c.renderMode === 'JSON') {\n        const editor = editorRef.value;\n        emitValue = c.toJson(editor.children);\n      }\n      if (props.value !== emitValue) {\n        emit('change', emitValue);\n      }\n    };\n\n    /**\n     * 抛值事件支持防抖\n     */\n    const debounceEmit = debounce(handleEmit, c.saveInterval);\n\n    // 编辑器回调函数\n    // 编辑器创建完毕时的回调函数\n    const handleCreated = (editor: IDomEditor) => {\n      editorRef.value = editor; // 记录 editor 实例，重要！\n      c.onCreated(editorRef.value, props.data, toolbarConfig);\n      const html = c.parseNode(valueHtml.value);\n      editor.setHtml(html);\n      c.onLineEditing(editorRef.value);\n      let modalUtil: ModalUtil;\n      // 模态打开\n      editor.on('modalOrPanelShow', modalOrPanel => {\n        modalUtil = new ModalUtil(modalOrPanel, htmlRef.value);\n      });\n      // 模态关闭\n      editor.on('modalOrPanelHide', () => {\n        if (modalUtil) {\n          modalUtil.destroy();\n        }\n      });\n\n      // 点击AI聊天\n      editor.on('aiClick', () => {\n        onClickAI();\n      });\n    };\n    // 编辑器内容、选区变化时的回调函数\n    const handleChange = (editor: IDomEditor) => {\n      // 去除用户标记\n      const html = editor.getHtml().replace(presRegex, '');\n      handleExpand(editor);\n      setImageHook(editor);\n      // wangEditor初始值抛空字符串给后台\n      const emitValue = html === '<p><br></p>' ? '' : html;\n      if (\n        emitValue === props.value ||\n        (emitValue === '' && isNil(props.value))\n      ) {\n        return;\n      }\n      // 修复初始化有值编辑器也会抛值导致表单脏值检查异常问题\n      if (!hasEnableEdit.value && editor.isFocused()) {\n        if (c.emitMode === 'AUTOMATIC') {\n          debounceEmit();\n        } else {\n          handleEmit();\n        }\n      }\n      c.evt.emit('onChange', {\n        eventArg: emitValue,\n      });\n    };\n    // 编辑器销毁时的回调函数。调用 editor.destroy() 即可销毁编辑器\n    const handleDestroyed = (_editor: IDomEditor) => {\n      // c.onDestroyed();\n    };\n    // 编辑器 focus 时的回调函数\n    const handleFocus = (_editor: IDomEditor) => {\n      emit('focus');\n      c.evt.emit('onFocus', {\n        eventArg: props.value,\n      });\n    };\n    // 编辑器 blur 时的回调函数。\n    const handleBlur = (_editor: IDomEditor) => {\n      emit('blur');\n      c.evt.emit('onBlur', { eventArg: props.value });\n    };\n    // 自定义编辑器 alert\n    const customAlert = (info: string, type: string) => {\n      // eslint-disable-next-line no-alert\n      alert(`【自定义提示】${type} - ${info}`);\n    };\n    // 自定义粘贴。可阻止编辑器的默认粘贴，实现自己的粘贴逻辑\n    const customPaste = (\n      editor: IDomEditor,\n      event: ClipboardEvent,\n      callback: (_n: boolean) => void,\n    ) => {\n      // 返回值（注意，vue 事件的返回值，不能用 return）\n      // callback(false); // 返回 false ，阻止默认粘贴行为\n      callback(true); // 返回 true ，继续默认的粘贴行为\n    };\n\n    // 插入文本\n    const insertText = (str: string) => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n\n      editor.insertText(str);\n    };\n\n    // 获取非格式化的 html\n    const printHtml = () => {\n      const editor = editorRef.value;\n      // eslint-disable-next-line no-useless-return\n      if (editor == null) return;\n    };\n\n    // 禁用编辑器\n    const disable = () => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n      editor.disable();\n    };\n\n    // 取消禁用编辑器\n    const enable = () => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n      editor.enable();\n    };\n\n    const calcHtmlStyle = () => {\n      awaitTimeout(0, () => {\n        if (htmlContent.value && toolbarRef.value) {\n          const htmlContentHeight = htmlContent.value.offsetHeight;\n\n          // 监听工具栏高度变化动态去算\n          resizeObserver = new ResizeObserver(entries => {\n            // 处理组件高度变化\n            const { height } = entries[0].contentRect;\n            if (height !== lastToolbarHeight) {\n              const tempCssVars = {\n                height: `${\n                  htmlContentHeight - entries[0].contentRect.height\n                }px`,\n              };\n              cssVars.value = ns.cssVarBlock(tempCssVars);\n              lastToolbarHeight = height;\n            }\n          });\n          resizeObserver.observe(toolbarRef.value.selector);\n        }\n      });\n    };\n\n    // 光标移动到第一行末尾\n    const moveToLastStr = () => {\n      if (props.value) {\n        const index = props.value.indexOf('</p>');\n        if (index >= 0) {\n          const offset = editorRef.value.selection.anchor?.offset;\n          const path = editorRef.value.selection.anchor?.path;\n          if (offset === 0 && path.length > 0 && path[0] === 0) {\n            editorRef.value.move(index - 3);\n          }\n        }\n      }\n    };\n\n    // 更改编辑状态\n    const changeEditState = () => {\n      readonlyState.value = !readonlyState.value;\n      if (!readonlyState.value) {\n        enable();\n        editorRef.value.focus();\n        moveToLastStr();\n        collapse.value = true;\n      } else {\n        // 取消编辑时内容滚动到顶部\n        if (htmlRef.value) {\n          const { box } = htmlRef.value.$refs;\n          box.scroll(0, 0);\n        }\n        disable();\n      }\n    };\n\n    // 绘制取消消息盒子\n    const renderCancelMessage = () => {\n      return (\n        <div class={ns.be('message', 'message-content')}>\n          <p>确定要取消编辑吗？</p>\n          <p class={ns.bem('message', 'message-content', 'message-tip')}>\n            取消编辑将无法保存修改的内容，且不能找回。\n          </p>\n        </div>\n      );\n    };\n\n    // 取消编辑\n    const cancelEdit = () => {\n      if (props.value !== valueHtml.value) {\n        ElMessageBox({\n          title: '确认取消',\n          type: 'warning',\n          customClass: ns.b('message'),\n          message: renderCancelMessage(),\n          showCancelButton: true,\n          cancelButtonClass: ns.be('message', 'message-cancel'),\n          confirmButtonClass: ns.be('message', 'message-comfire'),\n        })\n          .then(() => {\n            if (props.value) {\n              const html = c.parseNode(props.value);\n              valueHtml.value = html;\n            } else {\n              valueHtml.value = '';\n            }\n            changeEditState();\n          })\n          .catch(() => {\n            // 重新聚焦\n            editorRef.value.focus();\n          });\n      } else {\n        changeEditState();\n      }\n    };\n\n    // 确认保存\n    const save = () => {\n      readonlyState.value = true;\n      editorRef.value.disable();\n      // 去除用户标记\n      const value = valueHtml.value.replace(presRegex, '');\n      if (c.renderMode !== 'JSON') {\n        emit('change', value);\n      }\n      if (isFullScreen.value) {\n        isFullScreen.value = false;\n      }\n    };\n\n    // 绘制底部取消确认按钮\n    const renderFooter = () => {\n      if (hasEnableEdit.value && c.emitMode !== 'AUTOMATIC') {\n        return (\n          <div\n            class={[\n              ns.b('footer'),\n              { [ns.b('footer-dialog')]: isFullScreen.value },\n            ]}\n          >\n            <div class={ns.be('footer', 'cancel')} onClick={() => cancelEdit()}>\n              取消\n            </div>\n            <div class={ns.be('footer', 'save')} onClick={() => save()}>\n              保存\n            </div>\n          </div>\n        );\n      }\n      return null;\n    };\n\n    // 更新全屏状态\n    const changeFullScreenState = () => {\n      isFullScreen.value = !isFullScreen.value;\n      collapse.value = !isFullScreen.value;\n      nextTick(() => {\n        if (readonlyState.value) {\n          disable();\n        } else {\n          enable();\n          editorRef.value.focus();\n        }\n      });\n    };\n\n    // 绘制全屏图标\n    const isAllowRenderFullScreen = () => {\n      if (enableFullScreen.value) {\n        if (isFullScreen.value) {\n          return (\n            <i\n              class='fa fa-compress'\n              aria-hidden='true'\n              title='缩小'\n              onClick={() => changeFullScreenState()}\n            ></i>\n          );\n        }\n        return (\n          <i\n            class='fa fa-expand'\n            aria-hidden='true'\n            title='放大'\n            onClick={() => changeFullScreenState()}\n          ></i>\n        );\n      }\n      return null;\n    };\n\n    // 绘制头部工具栏\n    const renderHeaserToolbar = () => {\n      if (hasEnableEdit.value || enableFullScreen.value) {\n        return (\n          <div class={ns.b('custom-toolbar')}>\n            {hasEnableEdit.value && enableEdit.value && readonlyState.value ? (\n              <i\n                class='fa fa-edit'\n                aria-hidden='true'\n                title='编辑'\n                onClick={() => changeEditState()}\n              ></i>\n            ) : null}\n            {isAllowRenderFullScreen()}\n          </div>\n        );\n      }\n      return null;\n    };\n\n    const renderToggle = () => {\n      if (!showExpand.value) {\n        return null;\n      }\n      if (!collapse.value) {\n        return (\n          <div\n            class={ns.e('toggle')}\n            onClick={() => {\n              collapse.value = !collapse.value;\n            }}\n          >\n            收起更多 <ion-icon name='arrow-up-outline'></ion-icon>\n          </div>\n        );\n      }\n      return (\n        <div\n          class={ns.e('toggle')}\n          onClick={() => {\n            collapse.value = !collapse.value;\n          }}\n        >\n          展开更多 <ion-icon name='arrow-down-outline'></ion-icon>\n        </div>\n      );\n    };\n\n    // 绘制编辑器内容\n    const renderEditorContent = () => {\n      const tempStyle = { ...cssVars.value };\n      if (collapse.value && c.maxHeight) {\n        Object.assign(tempStyle, {\n          maxHeight: `${c.maxHeight}px`,\n        });\n      }\n      return (\n        <div\n          class={[ns.b('content'), ns.is('readonly', readonlyState.value)]}\n          ref='htmlContent'\n          style={tempStyle}\n        >\n          <Toolbar\n            ref='toolbarRef'\n            editor={editorRef.value}\n            default-config={toolbarConfig}\n            mode='default'\n            class={ns.b('toolbar')}\n          />\n          <Editor\n            ref='htmlRef'\n            class={ns.b('editor')}\n            v-model={valueHtml.value}\n            default-config={editorConfig}\n            mode='default'\n            onOnCreated={handleCreated}\n            onOnChange={handleChange}\n            onOnDestroyed={handleDestroyed}\n            onOnFocus={handleFocus}\n            onOnBlur={handleBlur}\n            oncustomAlert={customAlert}\n            oncustomPaste={customPaste}\n          />\n        </div>\n      );\n    };\n\n    // 绘制预览框\n    const renderPreview = () => {\n      return (\n        <el-image\n          class={ns.e('preview')}\n          ref='previewRef'\n          zoom-rate={1.1}\n          src={previewUrl.value}\n          preview-src-list={previewUrlList.value}\n          hide-on-click-modal={true}\n          onShow={onShow}\n          fit='cover'\n        />\n      );\n    };\n\n    onMounted(() => {\n      if (containerRef.value) {\n        funcs = useClickOutside(containerRef, async () => {\n          if (editorRef.value) {\n            editorRef.value.emit('clickOutside');\n          }\n        });\n      }\n      calcHtmlStyle();\n      // 监听值变化赋值\n      watch(\n        () => props.value,\n        (newVal, oldVal) => {\n          if (\n            newVal !== oldVal &&\n            (typeof props.value === 'string' || newVal == null)\n          ) {\n            if (newVal == null) {\n              valueHtml.value = '';\n            } else if (c.renderMode === 'JSON') {\n              valueHtml.value = c.jsonToHtml(newVal) as string;\n            } else {\n              valueHtml.value = newVal as string;\n            }\n            if (isBackFill.value) {\n              if (editorRef.value) {\n                nextTick(() => {\n                  editorRef.value.focus(true);\n                });\n              }\n              isBackFill.value = false;\n            }\n          }\n        },\n        { immediate: true },\n      );\n\n      // 监听disabled禁用\n      watch(\n        () => props.disabled,\n        (newVal, oldVal) => {\n          if (newVal !== oldVal) {\n            if (newVal === true) {\n              disable();\n            } else {\n              enable();\n            }\n          }\n        },\n        { immediate: true },\n      );\n    });\n\n    onUnmounted(() => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n      if (funcs && funcs.stop) {\n        funcs.stop();\n      }\n      if (chatInstance) {\n        chatInstance.close();\n      }\n    });\n\n    return {\n      ns,\n      editorRef,\n      previewRef,\n      containerRef,\n      htmlRef,\n      mode: 'default',\n      valueHtml,\n      toolbarConfig,\n      editorConfig,\n      handleCreated,\n      handleChange,\n      handleDestroyed,\n      handleFocus,\n      handleBlur,\n      customAlert,\n      customPaste,\n      insertText,\n      printHtml,\n      disable,\n      enable,\n      renderHeaserToolbar,\n      renderEditorContent,\n      renderToggle,\n      renderFooter,\n      htmlContent,\n      hasEnableEdit,\n      cssVars,\n      toolbarRef,\n      isFullScreen,\n      readonlyState,\n      collapse,\n      changeFullScreenState,\n      renderPreview,\n    };\n  },\n  render() {\n    return !this.isFullScreen ? (\n      <div\n        ref='containerRef'\n        class={[\n          this.ns.b(),\n          this.ns.is('allow-collapse', true),\n          { [this.ns.b('editor-readonly')]: this.readonlyState },\n        ]}\n      >\n        {this.renderHeaserToolbar()}\n        {this.renderEditorContent()}\n        {this.readonlyState ? this.renderToggle() : null}\n        {this.hasEnableEdit && !this.readonlyState ? this.renderFooter() : null}\n        {this.renderPreview()}\n      </div>\n    ) : (\n      <el-dialog\n        v-model={this.isFullScreen}\n        width='80%'\n        top='10vh'\n        class={this.ns.b('dialog-full-screen')}\n        onClose={() => this.changeFullScreenState()}\n      >\n        <div\n          ref='containerRef'\n          class={[\n            this.ns.b(),\n            this.ns.b('collapse'),\n            { [this.ns.b('editor-readonly')]: this.readonlyState },\n          ]}\n        >\n          {this.renderHeaserToolbar()}\n          {this.renderEditorContent()}\n          {this.hasEnableEdit && !this.readonlyState\n            ? this.renderFooter()\n            : null}\n        </div>\n      </el-dialog>\n    );\n  },\n});\n\nexport default IBizHtmlCollapse;\n","export class HtmlUtil {\n  /**\n   * 获取主题\n   * @returns\n   */\n  public static getThemeVar(): string | null {\n    const root = document.documentElement;\n    if (!root) {\n      return null;\n    }\n    const style = getComputedStyle(root);\n\n    const primary = style.getPropertyValue('--ibiz-color-primary');\n    return primary;\n  }\n\n  /**\n   * 是否包含中文字符\n   * @param inputString\n   * @returns\n   */\n  public static isChineseCharacter(inputString: string): boolean {\n    const chinesePattern = /[\\u4e00-\\u9fa5]/;\n    return chinesePattern.test(inputString);\n  }\n\n  /**\n   * 判断字符串是否同时存在英文和中文\n   * @param str\n   * @returns\n   */\n  public static hasChineseAndEnglish(str: string): boolean {\n    const regex = /[\\u4e00-\\u9fa5]+.*[a-zA-Z]+|[a-zA-Z]+.*[\\u4e00-\\u9fa5]+/;\n    return regex.test(str);\n  }\n\n  /**\n   * 字符串转16进制颜色\n   * @param text\n   * @returns\n   */\n  public static stringToHexColor(text: string): string {\n    if (!text) return '';\n    // 计算字符串的哈希值\n    let hash = 0;\n    for (let i = 0; i < text.length; i++) {\n      if (this.isChineseCharacter(text)) {\n        // eslint-disable-next-line no-bitwise\n        hash = text.charCodeAt(i) + ((hash << 5) - hash);\n        // eslint-disable-next-line operator-assignment, no-bitwise\n        hash = hash & hash;\n      } else {\n        const charCode = text.charCodeAt(i);\n        hash += charCode.toString(16) as unknown as number;\n      }\n    }\n\n    // 将哈希值转换为16进制颜色代码\n    const trimmedHash = String(hash).substring(0, 6);\n\n    const r = parseInt(trimmedHash.substring(0, 2), 16);\n    const g = parseInt(trimmedHash.substring(2, 4), 16);\n    const b = parseInt(trimmedHash.substring(4, 6), 16);\n\n    const colorCode = `#${r.toString(16).padStart(2, '0')}${g\n      .toString(16)\n      .padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n    if (colorCode === '#FFFFFF') {\n      return this.getThemeVar() || colorCode;\n    }\n    return colorCode;\n  }\n\n  /**\n   * 缩写名字\n   * @param text\n   * @returns\n   */\n  public static avatarName(text: string): string | void {\n    if (text && text.toString().length < 2) {\n      return text;\n    }\n    if (text && text.toString().length >= 2) {\n      // 大于两个字符\n      const tag = this.hasChineseAndEnglish(text);\n      // 存在中英文混合情况，按顺序取第一个英文与第一个中文\n      if (tag) {\n        const engChar: string =\n          text.split('').find((char: string) => {\n            return /[a-zA-Z]/.test(char);\n          }) || '';\n        const chineseStr: string =\n          text.split('').find((char: string) => {\n            return /[\\u4E00-\\u9FA5]/.test(char);\n          }) || '';\n        return `${engChar}${chineseStr}`.toLowerCase();\n      }\n      // 只存在英文，取前两个\n      const engTag = /[a-zA-Z]/.test(text);\n      if (engTag) {\n        return text\n          .split('')\n          .filter((char: string) => {\n            return /[a-zA-Z]/.test(char);\n          })\n          .slice(0, 2)\n          .join('')\n          .toUpperCase();\n      }\n      // 只存在中文，取最后两个\n      const chineseTag = /[\\u4E00-\\u9FA5]/.test(text);\n      if (chineseTag) {\n        return text\n          .split('')\n          .filter((char: string) => {\n            return /[\\u4E00-\\u9FA5]/.test(char);\n          })\n          .slice(-2)\n          .join('');\n      }\n      return text.replaceAll(' ', '').substring(0, 2);\n    }\n  }\n\n  /**\n   * 解析emoji表情\n   *\n   * @param {string} value\n   * @return {*}  {string}\n   */\n  public static getEmojiCustomHtml(value: string): string {\n    return value\n      .replaceAll(/{\"emoji\":\"(.+?)\"}/g, (x, emoji) => {\n        const tempVal = decodeURIComponent(atob(emoji));\n        return `<span class=\"emoji-tag\">${tempVal}</span>`;\n      })\n      .replaceAll(\n        /<span data-w-e-type=\"emoji\" class='emoji'>(.+?)<\\/span>/g,\n        (x, emoji) => {\n          const tempVal = decodeURIComponent(atob(emoji));\n          return `<span data-w-e-type=\"emoji\" class='emoji'>${tempVal}</span>`;\n        },\n      );\n  }\n}\n","import {\n  SlateNode,\n  IDomEditor,\n  SlateTransforms,\n  SlateText,\n  SlatePoint,\n  SlatePath,\n  SlateEditor,\n  SlateRange,\n} from '@wangeditor/editor';\nimport { VNode, VNodeStyle } from 'snabbdom';\nimport { IPersMarkNode } from '../interface';\nimport { HtmlUtil } from './utils';\n\n/**\n * 添加样式\n * @param vnode\n * @param newStyle\n */\nexport function addVnodeStyle(vnode: VNode, newStyle: VNodeStyle) {\n  if (vnode.data == null) vnode.data = {};\n  const data = vnode.data;\n  if (data.style == null) data.style = {};\n\n  Object.assign(data.style, newStyle);\n}\n\n/**\n * 节点绘制样式\n * @param node\n * @param vnode\n * @returns\n */\nexport function renderStyle(node: IData, vnode: VNode): VNode {\n  const { backgroundColor, bgColor } = node;\n  let styleVnode: VNode = vnode;\n\n  // 选区背景色\n  if (backgroundColor) {\n    addVnodeStyle(styleVnode, { backgroundColor });\n  }\n\n  // 设置的背景色\n  if (bgColor) {\n    addVnodeStyle(styleVnode, { backgroundColor: bgColor });\n  }\n  return styleVnode;\n}\n\nexport class SlateUtil {\n  /**\n   * 添加标记\n   * @param editor 编辑器\n   * @param op 标记信息\n   */\n  static addMarks(\n    editor: IDomEditor,\n    op: { selection: SlateRange; mark: IData },\n  ) {\n    const { selection, mark } = op;\n    const match = (node: SlateNode, path: SlatePath) => {\n      if (!SlateText.isText(node)) {\n        return false;\n      }\n      const [parentNode, parentPath] = SlateEditor.parent(editor, path);\n      return !editor.isVoid(parentNode);\n    };\n    const expandedSelection = SlateRange.isExpanded(selection);\n    if (expandedSelection) {\n      SlateTransforms.setNodes(editor, mark, {\n        match,\n        at: selection,\n        split: true,\n        voids: true,\n      });\n    } else {\n      const marks = {\n        ...(SlateEditor.marks(editor) || {}),\n        ...mark,\n      };\n\n      editor.marks = marks;\n    }\n  }\n\n  /**\n   * 删除标记\n   * @param editor 编辑器\n   * @param op 标记信息\n   */\n  static removeMarks(\n    editor: IDomEditor,\n    op: { selection: SlateRange; keys: string[] },\n  ) {\n    const { selection, keys } = op;\n    const match = (node: SlateNode, path: SlatePath) => {\n      if (!SlateText.isText(node)) {\n        return false;\n      }\n      const [parentNode, parentPath] = SlateEditor.parent(editor, path);\n      return !editor.isVoid(parentNode);\n    };\n    const expandedSelection = SlateRange.isExpanded(selection);\n    if (expandedSelection) {\n      SlateTransforms.unsetNodes(editor, keys, {\n        match,\n        at: selection,\n        split: true,\n        voids: true,\n      });\n    } else {\n      const marks: IData = { ...(SlateEditor.marks(editor) || {}) };\n      keys.forEach(key => {\n        delete marks[key];\n      });\n      editor.marks = marks;\n    }\n  }\n\n  /**\n   * 移动用户光标节点\n   * @param editor\n   * @param options\n   */\n  static movePersNode(editor: IDomEditor, options: IPersMarkNode) {\n    const { param, node } = options;\n    const { id, cursor, preCursor } = param;\n    const { position, newPosition, selectionRange } = cursor;\n    // 用户取消选区时清除上一次光标选区样式\n    if (!selectionRange && preCursor?.selectionRange) {\n      const preRange = preCursor.selectionRange;\n      this.removeMarks(editor, {\n        keys: ['backgroundColor'],\n        selection: {\n          anchor: this.calcPointByOffset(editor, preRange.anchor),\n          focus: this.calcPointByOffset(editor, preRange.focus),\n        },\n      });\n    }\n    // 删除老位置的用户标记\n    if (position) {\n      const parent = SlateNode.parent(editor, position.path);\n      const index = parent.children.findIndex((c: IData) => c.id === id);\n      if (index > -1) {\n        SlateTransforms.removeNodes(editor, { at: [position.path[0], index] });\n      }\n    }\n    if (newPosition) {\n      // 如果是光标选中了一个区域，设置这个区域的背景色\n      if (selectionRange) {\n        this.addMarks(editor, {\n          mark: {\n            backgroundColor: HtmlUtil.stringToHexColor(id),\n          },\n          selection: {\n            anchor: this.calcPointByOffset(editor, selectionRange.anchor),\n            focus: this.calcPointByOffset(editor, selectionRange.focus),\n          },\n        });\n      }\n      const point = this.calcPointByOffset(editor, newPosition);\n      // 在新位置处插入用户标记\n      SlateTransforms.insertNodes(editor, [node], {\n        at: point,\n      });\n    }\n  }\n\n  /**\n   * 根据偏移量计算位置\n   * @param editor\n   * @param item\n   */\n  static calcPointByOffset(editor: IDomEditor, point: SlatePoint): SlatePoint {\n    // 获取点位置所在行\n    const parent = SlateNode.parent(editor, point.path);\n    let index: number = 0;\n    let textLength: number = 0;\n    // 遍历行节点计算文本偏移量\n    parent.children.forEach((c, i) => {\n      if (SlateText.isText(c) && textLength < point!.offset) {\n        // 字符串为空的记为1\n        textLength += c.text.length || 1;\n        index = i;\n      }\n    });\n    const offset =\n      (parent.children[index] as IData).text.length -\n      (textLength - point.offset);\n\n    return { path: [point.path[0], index], offset };\n  }\n\n  /**\n   * 根据点位置计算偏移量\n   * @param editor\n   * @param point\n   */\n  static calcOffsetByPoint(editor: IDomEditor, point: SlatePoint): number {\n    let offset = point.offset;\n    // 获取点位置所在行\n    const parent = SlateNode.parent(editor, point.path);\n    // 获取点位置所在节点\n    const target = SlateNode.get(editor, point.path);\n    // 如果点在一个空的文本节点上则偏移量记为1\n    if (SlateText.isText(target) && target.text.length === 0 && offset === 0) {\n      offset = 1;\n    }\n    // 遍历行节点计算文本偏移量\n    parent.children.forEach((c, index) => {\n      if (SlateText.isText(c) && index < point.path[1]) {\n        // 字符串为空的记为1\n        offset += c.text.length || 1;\n      }\n    });\n    return offset;\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { defineComponent, ref } from 'vue';\nimport {\n  getHtmlProps,\n  getEditorEmits,\n  useNamespace,\n} from '@ibiz-template/vue3-util';\nimport { HtmlCommentController } from './html-comment.controller';\nimport IBizHtmlContent from './wang-editor/wang-editor-comment';\nimport IBizHtmlCollapse from './wang-editor/wang-editor-collapse';\nimport { HtmlUtil } from './utils';\nimport './html-comment.scss';\n\nexport const HtmlComment = defineComponent({\n  name: 'HtmlComment',\n  props: getHtmlProps<HtmlCommentController>(),\n  emits: getEditorEmits(),\n  setup(props, { emit }) {\n    const ns = useNamespace('html-comment');\n\n    const c = props.controller!;\n\n    const comment = ref();\n\n    const editorRef = ref();\n\n    const isAvatarLoadError = ref(false);\n\n    const onFocus = () => {\n      c.collapsed.value = false;\n      emit('focus');\n    };\n\n    const onChange = (value: unknown) => {\n      emit('change', value);\n      if (value && c.collapsed.value) {\n        c.collapsed.value = false;\n      }\n    };\n\n    const onBlur = () => {\n      emit('blur');\n      if (props.value) {\n        return null;\n      }\n      c.collapsed.value = true;\n    };\n\n    const avatarLoadError = () => {\n      isAvatarLoadError.value = true;\n    };\n\n    const renderAvatar = () => {\n      if (c.userAvatar && !isAvatarLoadError.value) {\n        const urlConfig = JSON.parse(c.userAvatar);\n        if (urlConfig.length === 0) {\n          return null;\n        }\n        const { downloadUrl } = ibiz.util.file.calcFileUpDownUrl(\n          c.context,\n          c.params,\n          props.data,\n          c.editorParams,\n        );\n        const url = downloadUrl.replace('%fileId%', urlConfig[0].id);\n        return (\n          <div class={ns.e('avatar-name')}>\n            <img src={url} alt='' onError={avatarLoadError} />\n          </div>\n        );\n      }\n      const avatarBg = HtmlUtil.stringToHexColor(c.context.srfusername);\n      const avatarName = HtmlUtil.avatarName(c.context.srfusername);\n      if (c.context.srfusername) {\n        return (\n          <div class={ns.e('avatar-name')} style={`background: ${avatarBg};`}>\n            {avatarName}\n          </div>\n        );\n      }\n      return (\n        <el-avatar\n          class={ns.e('avatar')}\n          src='./assets/images/user-avatar.png'\n        />\n      );\n    };\n\n    return {\n      ns,\n      c,\n      comment,\n      editorRef,\n      onChange,\n      onFocus,\n      onBlur,\n      renderAvatar,\n    };\n  },\n  render() {\n    if (this.c.mode === 'default') {\n      return (\n        <IBizHtmlCollapse\n          controller={this.c}\n          data={this.data}\n          value={this.value}\n          readonly={this.readonly}\n          onChange={this.onChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        ></IBizHtmlCollapse>\n      );\n    }\n    return (\n      <div\n        ref='comment'\n        class={[this.ns.b(), this.ns.is('collapse', this.c.collapsed.value)]}\n        style={{\n          height: `${\n            this.c.collapsed.value ? this.c.minHeight : this.c.maxHeight\n          }px`,\n        }}\n      >\n        {this.renderAvatar()}\n        <IBizHtmlContent\n          controller={this.c}\n          data={this.data}\n          value={this.value}\n          onChange={this.onChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        ></IBizHtmlContent>\n      </div>\n    );\n  },\n});\n","export function vnode(sel, data, children, text, elm) {\n    const key = data === undefined ? undefined : data.key;\n    return { sel, data, children, text, elm, key };\n}\n//# sourceMappingURL=vnode.js.map","export const array = Array.isArray;\nexport function primitive(s) {\n    return (typeof s === \"string\" ||\n        typeof s === \"number\" ||\n        s instanceof String ||\n        s instanceof Number);\n}\n//# sourceMappingURL=is.js.map","import { vnode } from \"./vnode\";\nimport * as is from \"./is\";\nexport function addNS(data, children, sel) {\n    data.ns = \"http://www.w3.org/2000/svg\";\n    if (sel !== \"foreignObject\" && children !== undefined) {\n        for (let i = 0; i < children.length; ++i) {\n            const child = children[i];\n            if (typeof child === \"string\")\n                continue;\n            const childData = child.data;\n            if (childData !== undefined) {\n                addNS(childData, child.children, child.sel);\n            }\n        }\n    }\n}\nexport function h(sel, b, c) {\n    let data = {};\n    let children;\n    let text;\n    let i;\n    if (c !== undefined) {\n        if (b !== null) {\n            data = b;\n        }\n        if (is.array(c)) {\n            children = c;\n        }\n        else if (is.primitive(c)) {\n            text = c.toString();\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined && b !== null) {\n        if (is.array(b)) {\n            children = b;\n        }\n        else if (is.primitive(b)) {\n            text = b.toString();\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (children !== undefined) {\n        for (i = 0; i < children.length; ++i) {\n            if (is.primitive(children[i]))\n                children[i] = vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === \"s\" &&\n        sel[1] === \"v\" &&\n        sel[2] === \"g\" &&\n        (sel.length === 3 || sel[3] === \".\" || sel[3] === \"#\")) {\n        addNS(data, children, sel);\n    }\n    return vnode(sel, data, children, text, undefined);\n}\n/**\n * @experimental\n */\nexport function fragment(children) {\n    let c;\n    let text;\n    if (is.array(children)) {\n        c = children;\n    }\n    else if (is.primitive(c)) {\n        text = children;\n    }\n    else if (c && c.sel) {\n        c = [children];\n    }\n    if (c !== undefined) {\n        for (let i = 0; i < c.length; ++i) {\n            if (is.primitive(c[i]))\n                c[i] = vnode(undefined, undefined, undefined, c[i], undefined);\n        }\n    }\n    return vnode(undefined, {}, c, text, undefined);\n}\n//# sourceMappingURL=h.js.map","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RuntimeError } from '@ibiz-template/core';\nimport { ScriptFactory } from '@ibiz-template/runtime';\nimport {\n  IDomEditor,\n  IButtonMenu,\n  IModuleConf,\n  SlateElement,\n} from '@wangeditor/editor';\nimport { DOMElement } from '@wangeditor/editor/dist/editor/src/utils/dom';\nimport { h } from 'snabbdom';\n\ntype EmptyText = {\n  text: '';\n};\nexport type AttachmentsElement = {\n  type: 'attachments';\n  script: string;\n  data: IData;\n  children: EmptyText[]; // void 元素必须有一个空 text\n};\n\nfunction attachmentsToHtml(elem: SlateElement): string {\n  const { script = '', data = {} } = elem as AttachmentsElement;\n  const result = ScriptFactory.execScriptFn({ data }, script, {\n    singleRowReturn: true,\n    isAsync: false,\n  }) as string;\n  return `${result}`;\n}\n\nconst elemToHtmlConf = {\n  type: 'attachments',\n  elemToHtml: attachmentsToHtml,\n};\n\nfunction parseHtml(elem: DOMElement): SlateElement {\n  const datastr = decodeURIComponent(elem.getAttribute('data-value') || '');\n  const data: IData = JSON.parse(datastr);\n  return {\n    type: 'attachments',\n    script: data.script,\n    data,\n    children: [{ text: '' }],\n  } as AttachmentsElement;\n}\n\nconst parseHtmlConf = {\n  selector: 'span[data-w-e-type=\"attachments\"]',\n  parseElemHtml: parseHtml,\n};\n\nfunction renderAttachments(elem: SlateElement) {\n  const { data = {} } = elem as AttachmentsElement;\n\n  const tempData = {\n    name: `${data.name}`,\n    id: data.id,\n  };\n\n  // 构建 vnode\n  const vnode = h(\n    'mention-elem',\n    {\n      dataset: { value: JSON.stringify(tempData) },\n      props: {\n        contentEditable: false, // 不可编辑\n      },\n    },\n    [],\n  );\n\n  return vnode;\n}\n\nconst renderElemConf: any = {\n  type: 'attachments',\n  renderElem: renderAttachments,\n};\n\nexport class AttachMentsMenu implements IButtonMenu {\n  readonly title = '本地文件';\n\n  readonly tag = 'button';\n\n  readonly iconSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"36px\" height=\"36px\" viewBox=\"0 0 36 36\" version=\"1.1\">\n    <title>附件</title>\n    <g id=\"附件\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"icon\">\n            <rect id=\"矩形\" stroke=\"#EEEEEE\" fill=\"#FFFFFF\" x=\"0.5\" y=\"0.5\" width=\"35\" height=\"35\" rx=\"4\"/>\n            <g id=\"编组-28\" transform=\"translate(2.997929, 8.001508)\">\n                <path d=\"M13.9611058,12.6330155 C13.9611058,14.5460163 12.4108408,16.0968098 10.498492,16.0968098 C8.58614322,16.0968098 7.03587822,14.5460163 7.03590808,12.6393438 L7.03590808,12.6393438 L6.98338468,7.07669061 C6.97992133,6.70644889 7.27712693,6.40347538 7.64724246,6.39998034 C8.017358,6.39648531 8.32022824,6.69379224 8.32372209,7.06403396 L8.32372209,7.06403396 L8.37624485,12.6330155 C8.37624485,13.8054998 9.32640727,14.7559862 10.498492,14.7559862 C11.6705768,14.7559862 12.6207392,13.8054998 12.6207392,12.6330155 L12.6207392,12.6330155 L12.6207392,6.46506253 C12.6207392,4.69957562 11.0562006,3.24725012 9.10227678,3.24725012 C7.148353,3.24725012 5.58381437,4.69957562 5.58381437,6.46506253 L5.58381437,6.46506253 L5.58381437,12.8655397 C5.58381437,15.5621365 7.78332719,17.7497339 10.498492,17.7497339 C13.2136568,17.7497339 15.4131697,15.5621365 15.4131697,12.8655397 L15.4131697,12.8655397 L15.4131697,7.10001026 C15.4131697,6.72975204 15.713221,6.42959845 16.083353,6.42959845 C16.453485,6.42959845 16.7535363,6.72975204 16.7535363,7.10001026 L16.7535363,7.10001026 L16.7535363,12.8655397 C16.7535363,16.3043913 13.9521943,19.0905575 10.498492,19.0905575 C7.04478976,19.0905575 4.24344774,16.3043913 4.24344774,12.8655397 L4.24344774,12.8655397 L4.24344774,6.46506253 C4.24344774,3.93573556 6.42955024,1.90642651 9.10227678,1.90642651 C11.7750033,1.90642651 13.9611058,3.93573556 13.9611058,6.46506253 L13.9611058,6.46506253 Z\" id=\"形状结合\" fill=\"#DDDDDD\" transform=\"translate(10.498492, 10.498492) rotate(-315.000000) translate(-10.498492, -10.498492) \"/>\n                <path d=\"M21.6662931,9.87797441 L24.6096402,9.87797441 C24.9410111,9.87797441 25.2096402,10.1466036 25.2096402,10.4779744 C25.2096402,10.8093453 24.9410111,11.0779744 24.6096402,11.0779744 L21.6662931,11.0779744 C21.3349223,11.0779744 21.0662931,10.8093453 21.0662931,10.4779744 C21.0662931,10.1466036 21.3349223,9.87797441 21.6662931,9.87797441 Z\" id=\"矩形备份-74\" fill=\"#73D897\"/>\n                <path d=\"M21.6662931,4.29120933 L27.4020707,4.29120933 C27.7334415,4.29120933 28.0020707,4.55983848 28.0020707,4.89120933 C28.0020707,5.22258018 27.7334415,5.49120933 27.4020707,5.49120933 L21.6662931,5.49120933 C21.3349223,5.49120933 21.0662931,5.22258018 21.0662931,4.89120933 C21.0662931,4.55983848 21.3349223,4.29120933 21.6662931,4.29120933 Z\" id=\"矩形备份-75\" fill=\"#6698FF\"/>\n                <path d=\"M21.6662931,15.4647395 L27.4020707,15.4647395 C27.7334415,15.4647395 28.0020707,15.7333686 28.0020707,16.0647395 C28.0020707,16.3961103 27.7334415,16.6647395 27.4020707,16.6647395 L21.6662931,16.6647395 C21.3349223,16.6647395 21.0662931,16.3961103 21.0662931,16.0647395 C21.0662931,15.7333686 21.3349223,15.4647395 21.6662931,15.4647395 Z\" id=\"矩形备份-77\" fill=\"#FF7575\"/>\n            </g>\n        </g>\n    </g>\n</svg>`;\n\n  constructor() {}\n\n  // 菜单是否需要激活（如选中加粗文本，“加粗”菜单会激活），用不到则返回 false\n  isActive(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 获取菜单执行时的 value ，用不到则返回空 字符串或 false\n  getValue(editor: IDomEditor): string | boolean {\n    return '';\n  }\n\n  // 菜单是否需要禁用（如选中 H1 ，“引用”菜单被禁用），用不到则返回 false\n  isDisabled(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 点击菜单时触发的函数\n  exec(editor: IDomEditor, value: string | boolean) {\n    throw new RuntimeError('暂未支持上传本地文件！');\n  }\n}\n\nconst Menu = {\n  key: 'attachments',\n  factory() {\n    return new AttachMentsMenu();\n  },\n};\n\nconst module: Partial<IModuleConf> = {\n  renderElems: [renderElemConf],\n  elemsToHtml: [elemToHtmlConf],\n  parseElemsHtml: [parseHtmlConf],\n  menus: [Menu],\n};\n\nexport default module;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-template-curly-in-string */\n/* eslint-disable no-useless-escape */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ControllerEvent } from '@ibiz-template/runtime';\nimport { IEditor } from '@ibiz/model-core';\nimport { Boot, IDomEditor } from '@wangeditor/editor';\nimport AttachmentsModule from './attachments-node-module';\nimport { commentEvent } from '../html-comment.event';\n\n/**\n * 附件控制器\n *\n * @export\n * @class AttachmentsController\n * @extends {EditorController}\n */\nexport class AttachmentsController {\n  /**\n   * 模型\n   *\n   * @type {IEditor}\n   * @memberof AttachmentsController\n   */\n  public model!: IEditor;\n\n  /**\n   * 上下文\n   *\n   * @type {IContext}\n   */\n  public context!: IContext;\n\n  /**\n   * 视图参数\n   *\n   * @type {IParams}\n   */\n  public params!: IParams;\n\n  /**\n   * 表单数据\n   *\n   * @type {IData}\n   * @memberof AttachmentsController\n   */\n  public data: IData = {};\n\n  /**\n   * 编辑器示例\n   *\n   * @type {IDomEditor}\n   * @memberof AttachmentsController\n   */\n  public editor!: IDomEditor;\n\n  /**\n   * 编辑器参数\n   *\n   * @type {IData}\n   * @memberof AttachmentsController\n   */\n  public editorParams: IData | undefined;\n\n  /**\n   * 用户数据\n   *\n   * @type {IData[]}\n   * @memberof AttachmentsController\n   */\n  public items: IData[] = [];\n\n  /**\n   * 编辑器事件\n   *\n   * @type {ControllerEvent<commentEvent>}\n   * @memberof AttachmentsController\n   */\n  public evt!: ControllerEvent<commentEvent>;\n\n  /**\n   * 是否正在执行\n   *\n   * @private\n   * @type {boolean}\n   * @memberof AttachmentsController\n   */\n  public execting: boolean = false;\n\n  /**\n   * Creates an instance of AttachmentsController.\n   * @param {IData} option\n   * @memberof AttachmentsController\n   */\n  constructor() {\n    this.registerNode();\n  }\n\n  public registerNode() {\n    if (!(window as IData).attachmentsIsRegiter) {\n      Boot.registerModule(AttachmentsModule);\n      (window as IData).attachmentsIsRegiter = true;\n    }\n  }\n\n  /**\n   * 初始化\n   *\n   * @param {IDomEditor} editor\n   * @memberof AttachmentsController\n   */\n  public async init(editor: IDomEditor, option: IData) {\n    this.model = option.model;\n    this.context = option.context;\n    this.params = option.params;\n    this.evt = option.evt;\n    this.data = option.data;\n    this.editor = editor;\n    this.editorParams = this.model.editorParams;\n  }\n\n  /**\n   * 控制器销毁\n   *\n   * @memberof AttachmentsController\n   */\n  public onDestroyed() {\n    // todo\n  }\n\n  /**\n   * 插入节点\n   *\n   * @param {IDomEditor} editor\n   * @memberof AttachmentsController\n   */\n  public insertNode(data: IData) {\n    // todo\n  }\n\n  /**\n   * 解析mention节点\n   *\n   * @param {string} value\n   * @return {*}\n   * @memberof AttachmentsController\n   */\n  public parseNode(value: string) {\n    return value;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RuntimeError } from '@ibiz-template/core';\nimport { ScriptFactory } from '@ibiz-template/runtime';\nimport {\n  IDomEditor,\n  IButtonMenu,\n  IModuleConf,\n  SlateElement,\n} from '@wangeditor/editor';\nimport { DOMElement } from '@wangeditor/editor/dist/editor/src/utils/dom';\nimport { h } from 'snabbdom';\n\ntype EmptyText = {\n  text: '';\n};\nexport type CodeSnippetElement = {\n  type: 'codesnippet';\n  script: string;\n  data: IData;\n  children: EmptyText[]; // void 元素必须有一个空 text\n};\n\nfunction CodeSnippetToHtml(elem: SlateElement): string {\n  const { script = '', data = {} } = elem as CodeSnippetElement;\n  const result = ScriptFactory.execScriptFn({ data }, script, {\n    singleRowReturn: true,\n    isAsync: false,\n  }) as string;\n  return `${result}`;\n}\n\nconst elemToHtmlConf = {\n  type: 'codesnippet',\n  elemToHtml: CodeSnippetToHtml,\n};\n\nfunction parseHtml(elem: DOMElement): SlateElement {\n  const datastr = decodeURIComponent(elem.getAttribute('data-value') || '');\n  const data: IData = JSON.parse(datastr);\n  return {\n    type: 'codesnippet',\n    script: data.script,\n    data,\n    children: [{ text: '' }],\n  } as CodeSnippetElement;\n}\n\nconst parseHtmlConf = {\n  selector: 'span[data-w-e-type=\"codesnippet\"]',\n  parseElemHtml: parseHtml,\n};\n\nfunction renderCodeSnippet(elem: SlateElement) {\n  const { data = {} } = elem as CodeSnippetElement;\n\n  const tempData = {\n    name: `${data.name}`,\n    id: data.id,\n  };\n\n  // 构建 vnode\n  const vnode = h(\n    'mention-elem',\n    {\n      dataset: { value: JSON.stringify(tempData) },\n      props: {\n        contentEditable: false, // 不可编辑\n      },\n    },\n    [],\n  );\n\n  return vnode;\n}\n\nconst renderElemConf: any = {\n  type: 'CodeSnippet',\n  renderElem: renderCodeSnippet,\n};\n\nexport class CodeSnippetMenu implements IButtonMenu {\n  readonly title = '代码段';\n\n  readonly tag = 'button';\n\n  readonly iconSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"36px\" height=\"36px\" viewBox=\"0 0 36 36\" version=\"1.1\">\n  <title>代码段</title>\n  <g id=\"代码段\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n      <g id=\"icon备份\">\n          <rect id=\"矩形\" stroke=\"#EEEEEE\" fill=\"#FFFFFF\" x=\"0.5\" y=\"0.5\" width=\"35\" height=\"35\" rx=\"4\"/>\n          <path d=\"M24.6642225,18.8794824 L27.6075695,18.8794824 C27.9389404,18.8794824 28.2075695,19.1481115 28.2075695,19.4794824 C28.2075695,19.8108532 27.9389404,20.0794824 27.6075695,20.0794824 L24.6642225,20.0794824 C24.3328516,20.0794824 24.0642225,19.8108532 24.0642225,19.4794824 C24.0642225,19.1481115 24.3328516,18.8794824 24.6642225,18.8794824 Z\" id=\"矩形备份-74\" fill=\"#73D897\"/>\n          <path d=\"M24.6642225,13.2927173 L30.4,13.2927173 C30.7313708,13.2927173 31,13.5613465 31,13.8927173 C31,14.2240882 30.7313708,14.4927173 30.4,14.4927173 L24.6642225,14.4927173 C24.3328516,14.4927173 24.0642225,14.2240882 24.0642225,13.8927173 C24.0642225,13.5613465 24.3328516,13.2927173 24.6642225,13.2927173 Z\" id=\"矩形备份-75\" fill=\"#6698FF\"/>\n          <path d=\"M24.6642225,24.4662475 L30.4,24.4662475 C30.7313708,24.4662475 31,24.7348766 31,25.0662475 C31,25.3976183 30.7313708,25.6662475 30.4,25.6662475 L24.6642225,25.6662475 C24.3328516,25.6662475 24.0642225,25.3976183 24.0642225,25.0662475 C24.0642225,24.7348766 24.3328516,24.4662475 24.6642225,24.4662475 Z\" id=\"矩形备份-77\" fill=\"#FF7575\"/>\n          <g id=\"1.Base基础/1.icon图标/11.editor/header-1\" transform=\"translate(5.000000, 11.000000)\" fill=\"#DDDDDD\">\n              <path d=\"M4.68266589,2.39258039 L1.51032474,7.44797324 L5.01586095,12.7216272 L4.05994646,13.3212428 L0.126424153,7.40475416 L3.68603474,1.72997946 L4.68266589,2.39258039 Z M11.3173341,12.6697762 L14.4896753,7.61438339 L10.984139,2.34072939 L11.9400535,1.7411138 L15.8735758,7.65760247 L12.3139653,13.3323772 L11.3173341,12.6697762 Z M8.86596086,1.31248434 L10.0376294,1.55020137 L7.19605832,13.6243456 L6.0243898,13.3866286 L8.86596086,1.31248434 Z\" id=\"形状结合\"/>\n          </g>\n      </g>\n  </g>\n</svg>`;\n\n  constructor() {}\n\n  // 菜单是否需要激活（如选中加粗文本，“加粗”菜单会激活），用不到则返回 false\n  isActive(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 获取菜单执行时的 value ，用不到则返回空 字符串或 false\n  getValue(editor: IDomEditor): string | boolean {\n    return '';\n  }\n\n  // 菜单是否需要禁用（如选中 H1 ，“引用”菜单被禁用），用不到则返回 false\n  isDisabled(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 点击菜单时触发的函数\n  exec(editor: IDomEditor, value: string | boolean) {\n    throw new RuntimeError('暂未支持上传代码段！');\n  }\n}\n\nconst Menu = {\n  key: 'codesnippet',\n  factory() {\n    return new CodeSnippetMenu();\n  },\n};\n\nconst module: Partial<IModuleConf> = {\n  renderElems: [renderElemConf],\n  elemsToHtml: [elemToHtmlConf],\n  parseElemsHtml: [parseHtmlConf],\n  menus: [Menu],\n};\n\nexport default module;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-template-curly-in-string */\n/* eslint-disable no-useless-escape */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ControllerEvent } from '@ibiz-template/runtime';\nimport { IEditor } from '@ibiz/model-core';\nimport { Boot, IDomEditor } from '@wangeditor/editor';\nimport CodeSnippetModule from './code-snippet-node-module';\nimport { commentEvent } from '../html-comment.event';\n\n/**\n * 代码段控制器\n *\n * @export\n * @class CodeSnippetController\n * @extends {EditorController}\n */\nexport class CodeSnippetController {\n  /**\n   * 模型\n   *\n   * @type {IEditor}\n   * @memberof CodeSnippetController\n   */\n  public model!: IEditor;\n\n  /**\n   * 上下文\n   *\n   * @type {IContext}\n   */\n  public context!: IContext;\n\n  /**\n   * 视图参数\n   *\n   * @type {IParams}\n   */\n  public params!: IParams;\n\n  /**\n   * 表单数据\n   *\n   * @type {IData}\n   * @memberof CodeSnippetController\n   */\n  public data: IData = {};\n\n  /**\n   * 编辑器示例\n   *\n   * @type {IDomEditor}\n   * @memberof CodeSnippetController\n   */\n  public editor!: IDomEditor;\n\n  /**\n   * 编辑器参数\n   *\n   * @type {IData}\n   * @memberof CodeSnippetController\n   */\n  public editorParams: IData | undefined;\n\n  /**\n   * 用户数据\n   *\n   * @type {IData[]}\n   * @memberof CodeSnippetController\n   */\n  public items: IData[] = [];\n\n  /**\n   * 编辑器事件\n   *\n   * @type {ControllerEvent<commentEvent>}\n   * @memberof CodeSnippetController\n   */\n  public evt!: ControllerEvent<commentEvent>;\n\n  /**\n   * 是否正在执行\n   *\n   * @private\n   * @type {boolean}\n   * @memberof CodeSnippetController\n   */\n  public execting: boolean = false;\n\n  /**\n   * Creates an instance of CodeSnippetController.\n   * @param {IData} option\n   * @memberof CodeSnippetController\n   */\n  constructor() {\n    this.registerNode();\n  }\n\n  public registerNode() {\n    if (!(window as IData).codesnippetIsRegiter) {\n      Boot.registerModule(CodeSnippetModule);\n      (window as IData).codesnippetIsRegiter = true;\n    }\n  }\n\n  /**\n   * 初始化\n   *\n   * @param {IDomEditor} editor\n   * @memberof CodeSnippetController\n   */\n  public async init(editor: IDomEditor, option: IData) {\n    this.model = option.model;\n    this.context = option.context;\n    this.params = option.params;\n    this.evt = option.evt;\n    this.data = option.data;\n    this.editor = editor;\n    this.editorParams = this.model.editorParams;\n  }\n\n  /**\n   * 控制器销毁\n   *\n   * @memberof CodeSnippetController\n   */\n  public onDestroyed() {\n    // todo\n  }\n\n  /**\n   * 插入节点\n   *\n   * @param {IDomEditor} editor\n   * @memberof CodeSnippetController\n   */\n  public insertNode(data: IData) {\n    // todo\n  }\n\n  /**\n   * 解析mention节点\n   *\n   * @param {string} value\n   * @return {*}\n   * @memberof CodeSnippetController\n   */\n  public parseNode(value: string) {\n    return value;\n  }\n}\n","/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ScriptFactory } from '@ibiz-template/runtime';\nimport {\n  IDomEditor,\n  IButtonMenu,\n  IModuleConf,\n  SlateElement,\n} from '@wangeditor/editor';\nimport { DOMElement } from '@wangeditor/editor/dist/editor/src/utils/dom';\nimport { h } from 'snabbdom';\n\ntype EmptyText = {\n  text: '';\n};\nexport type MarkerElement = {\n  type: 'marker';\n  script: string;\n  data: IData;\n  children: EmptyText[]; // void 元素必须有一个空 text\n};\n\nfunction markerToHtml(elem: SlateElement): string {\n  const { script = '', data = {} } = elem as MarkerElement;\n  const result = ScriptFactory.execScriptFn({ data }, script, {\n    singleRowReturn: true,\n    isAsync: false,\n  }) as string;\n  return `${result}`;\n}\n\nconst elemToHtmlConf = {\n  type: 'marker',\n  elemToHtml: markerToHtml,\n};\n\nfunction parseHtml(elem: DOMElement): SlateElement {\n  const datastr = decodeURIComponent(elem.getAttribute('data-value') || '');\n  const data: IData = JSON.parse(datastr);\n  return {\n    type: 'marker',\n    script: data.script,\n    data,\n    children: [{ text: '' }],\n  } as MarkerElement;\n}\n\nconst parseHtmlConf = {\n  selector: 'span[data-w-e-type=\"marker\"]',\n  parseElemHtml: parseHtml,\n};\n\nfunction renderMarker(elem: SlateElement) {\n  const { data = {} } = elem as MarkerElement;\n\n  // 构建 vnode\n  const vnode = h(\n    'mention-elem',\n    {\n      dataset: { value: JSON.stringify(data) },\n      props: {\n        contentEditable: false, // 不可编辑\n      },\n    },\n    [],\n  );\n\n  return vnode;\n}\n\nconst renderElemConf: any = {\n  type: 'marker',\n  renderElem: renderMarker,\n};\n\nexport class MenTionMenu implements IButtonMenu {\n  readonly title = '提及工作项';\n\n  readonly tag = 'button';\n\n  readonly iconSvg =\n    '<svg t=\"1706259772097\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"6854\" width=\"200\" height=\"200\"><path d=\"M929.28 625.664l-234.496 0.512 24.064-229.888 210.432-0.512c20.992 0 38.4-17.408 38.4-38.4s-17.408-38.4-38.4-38.4H727.04l29.184-275.456c2.048-20.992-13.312-39.936-34.304-41.984-20.992-2.048-39.936 13.312-41.984 34.304L650.24 318.976l-232.448 0.512 29.184-275.456c2.048-20.992-13.312-39.936-34.304-41.984-20.992-2.048-39.936 13.312-41.984 34.304l-29.696 283.648-246.272 0.512c-20.992 0-38.4 17.408-38.4 38.4s17.408 38.4 38.4 38.4l238.08-0.512-24.064 229.888-214.016 0.512c-20.992 0-38.4 17.408-38.4 38.4s17.408 38.4 38.4 38.4l205.824-0.512-29.184 276.992c-2.048 20.992 13.312 39.936 34.304 41.984h4.096c19.456 0 35.84-14.848 37.888-34.304l30.208-285.184 232.448-0.512-29.184 277.504c-2.048 20.992 13.312 39.936 34.304 41.984h4.096c19.456 0 35.84-14.848 38.4-34.304l30.208-285.184 242.688-0.512c20.992 0 38.4-17.408 38.4-38.4-1.536-20.992-18.944-37.888-39.936-37.888z m-544.256 0.512l24.064-229.888 232.448-0.512-24.064 229.888-232.448 0.512z\" fill=\"#979797\" p-id=\"6855\"></path></svg>';\n\n  constructor() {}\n\n  // 菜单是否需要激活（如选中加粗文本，“加粗”菜单会激活），用不到则返回 false\n  isActive(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 获取菜单执行时的 value ，用不到则返回空 字符串或 false\n  getValue(editor: IDomEditor): string | boolean {\n    return '';\n  }\n\n  // 菜单是否需要禁用（如选中 H1 ，“引用”菜单被禁用），用不到则返回 false\n  isDisabled(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 点击菜单时触发的函数\n  exec(editor: IDomEditor, value: string | boolean) {\n    editor.insertText('#');\n  }\n}\n\nconst atMenu = {\n  key: 'marker',\n  factory() {\n    return new MenTionMenu();\n  },\n};\n\nconst module: Partial<IModuleConf> = {\n  renderElems: [renderElemConf],\n  elemsToHtml: [elemToHtmlConf],\n  parseElemsHtml: [parseHtmlConf],\n  menus: [atMenu],\n};\n\nexport default module;\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable default-case */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-useless-escape */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  PropType,\n  Ref,\n  computed,\n  defineComponent,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n} from 'vue';\nimport { useNamespace } from '@ibiz-template/vue3-util';\nimport { EventBase, IModal, IModalData } from '@ibiz-template/runtime';\nimport { debounce } from 'lodash-es';\nimport { NOOP, listenJSEvent } from '@ibiz-template/core';\nimport { MenTionController } from '../../mention';\nimport { HtmlUtil } from '../../utils';\nimport './mention.scss';\n\nexport const MenTion = defineComponent({\n  name: 'MenTion',\n  props: {\n    controller: {\n      type: Object as PropType<MenTionController>,\n      required: true,\n    },\n    modal: { type: Object as PropType<IModal> },\n  },\n  setup(props) {\n    const ns = useNamespace('mention');\n    const c = props.controller;\n    const loading: Ref<boolean> = ref(false);\n    const items: Ref<IData[]> = ref([]);\n\n    let cleanup = NOOP;\n\n    const curUser: Ref<IData> = ref({});\n\n    const total = ref(0);\n\n    const errorLoadItems: Ref<string[]> = ref([]);\n\n    const handleChange = (event: EventBase) => {\n      const { eventArg } = event;\n      if (eventArg) {\n        // 删除@时隐藏气泡\n        if (!eventArg.includes('@') && c.overlay && c.execting) {\n          c.overlay.dismiss();\n        }\n        const values = eventArg.match(/(?<=\\@)([^\\@&^{]*?)(?=\\<)/g) || [];\n        if (c.execting) {\n          if (values.length === 0) {\n            c.overlay!.dismiss();\n          }\n          c.query = values.pop() || '';\n          // 输入空格隐藏气泡\n          if (c.query && /\\s$/.test(c.query)) {\n            c.overlay!.dismiss();\n          } else if (c.query) {\n            refresh({ isInitialLoad: true });\n          }\n        }\n      } else if (c.overlay && c.execting) {\n        c.overlay.dismiss();\n      }\n    };\n\n    const registerEditorEvt = () => {\n      if (c.evt) {\n        c.evt.on('onChange', handleChange);\n      }\n    };\n\n    const load = (args: IData = {}) => {\n      loading.value = true;\n      c.getUsers(args)\n        .then((response: IData) => {\n          if (response.status !== 200 || !response.data) {\n            loading.value = false;\n          }\n          if (response.headers['x-total']) {\n            total.value = Number(response.headers['x-total']);\n          }\n          const isLoadMore = args.isLoadMore === true;\n          if (isLoadMore) {\n            items.value.push(...c.toUIData(response.data));\n          } else {\n            items.value = c.toUIData(response.data);\n            if (items.value.length > 0) {\n              curUser.value = items.value[0];\n            }\n          }\n          loading.value = false;\n        })\n        .catch(() => {\n          loading.value = false;\n        });\n    };\n\n    const loadMore = () => {\n      load({ isLoadMore: true });\n    };\n\n    // 是否可以加载更多\n    const isLodeMoreDisabled = computed(() => {\n      return (\n        items.value.length >= total.value ||\n        loading.value ||\n        total.value <= c.size\n      );\n    });\n\n    const refresh = debounce(load, 300, { leading: true });\n\n    registerEditorEvt();\n    load({ isInitialLoad: true });\n\n    const setSelection = (type: 'up' | 'down' | 'enter') => {\n      let index = items.value.findIndex(x => x.id === curUser.value.id);\n      switch (type) {\n        case 'up':\n          index--;\n          if (index === -1 || index === -2) {\n            index = items.value.length - 1;\n          }\n          curUser.value = items.value[index];\n          break;\n        case 'down':\n          index++;\n          if (index === items.value.length) {\n            index = 0;\n          }\n          curUser.value = items.value[index];\n          break;\n        case 'enter':\n          onUserSelect(curUser.value);\n          break;\n      }\n    };\n\n    const onUserSelect = (user: IData) => {\n      if (props.modal) {\n        const modalData: IModalData = { ok: true, data: [user] };\n        props.modal?.dismiss(modalData);\n      }\n    };\n\n    const getAvatarDownloadUrl = (avatarUrl: string) => {\n      if (!avatarUrl) {\n        return null;\n      }\n      const urlConfig = JSON.parse(avatarUrl);\n      if (urlConfig.length === 0) {\n        return null;\n      }\n      const { downloadUrl } = ibiz.util.file.calcFileUpDownUrl(\n        c.context,\n        c.params,\n        c.editorParams,\n      );\n      const url = downloadUrl.replace('%fileId%', urlConfig[0].id);\n      return url;\n    };\n\n    const avatarLoadError = (url: string) => {\n      errorLoadItems.value.push(url);\n    };\n\n    const renderItem = (user: IData) => {\n      const usertext: string = user.name;\n      const avatarBg = HtmlUtil.stringToHexColor(usertext);\n      const avatarName = HtmlUtil.avatarName(usertext);\n      let url = '';\n      if (c.operatorMap.has(user.id)) {\n        const operator = c.operatorMap.get(user.id);\n        if (operator.data.iconurl) {\n          url = getAvatarDownloadUrl(operator.data.iconurl) || '';\n        }\n      }\n      return (\n        <div\n          class={[ns.e('item'), ns.is('active', user.id === curUser.value.id)]}\n          onClick={() => onUserSelect(user)}\n        >\n          <div class={ns.e('avatar')} style={`background: ${avatarBg};`}>\n            {url && !errorLoadItems.value.includes(url) ? (\n              <img src={url} onError={() => avatarLoadError(url)} />\n            ) : (\n              avatarName\n            )}\n          </div>\n          <div class={ns.e('name')} title={usertext}>\n            {usertext}\n          </div>\n        </div>\n      );\n    };\n\n    onMounted(() => {\n      cleanup = listenJSEvent(window, 'keyup', event => {\n        // 向下选择\n        if (event.keyCode === 40) {\n          setSelection('down');\n          // 向上选择\n        } else if (event.keyCode === 38) {\n          setSelection('up');\n        } else if (event.keyCode === 13) {\n          setSelection('enter');\n        }\n      });\n    });\n\n    // 组件销毁前销毁监听\n    onBeforeUnmount(() => {\n      if (cleanup !== NOOP) {\n        cleanup();\n      }\n      c.evt.off('onChange', handleChange);\n    });\n\n    return { ns, items, loading, isLodeMoreDisabled, renderItem, loadMore };\n  },\n  render() {\n    return (\n      <div\n        v-infinite-scroll={() => this.loadMore()}\n        infinite-scroll-distance={10}\n        infinite-scroll-disabled={this.isLodeMoreDisabled}\n        infinite-scroll-immediate={false}\n        v-loading={this.loading}\n        class={this.ns.b()}\n      >\n        {this.items.map((user: IData) => {\n          return this.renderItem(user);\n        })}\n        {this.items.length === 0 && (\n          <iBizNoData text={'暂无用户数据'}></iBizNoData>\n        )}\n      </div>\n    );\n  },\n});\n","/* eslint-disable prefer-destructuring */\n/* eslint-disable no-plusplus */\n/* eslint-disable default-case */\n/* eslint-disable no-useless-escape */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  PropType,\n  Ref,\n  computed,\n  defineComponent,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n} from 'vue';\nimport { useNamespace } from '@ibiz-template/vue3-util';\nimport { EventBase, IModal, IModalData } from '@ibiz-template/runtime';\nimport { debounce } from 'lodash-es';\nimport { NOOP, listenJSEvent } from '@ibiz-template/core';\nimport { MarkerController } from '../../marker';\nimport './marker.scss';\n\nexport const Marker = defineComponent({\n  name: 'Marker',\n  props: {\n    controller: {\n      type: Object as PropType<MarkerController>,\n      required: true,\n    },\n    modal: { type: Object as PropType<IModal> },\n  },\n  setup(props) {\n    const ns = useNamespace('marker');\n    const c = props.controller;\n    const loading: Ref<boolean> = ref(false);\n    const items: Ref<IData[]> = ref([]);\n\n    let cleanup = NOOP;\n\n    const curItem: Ref<IData> = ref({});\n\n    const total = ref(0);\n\n    const handleChange = (event: EventBase) => {\n      const { eventArg } = event;\n      if (eventArg) {\n        // 删除#时隐藏气泡\n        if (!eventArg.includes('#') && c.overlay && c.execting) {\n          c.overlay.dismiss();\n        }\n        const regex = /<svg((.|[\\t\\r\\f\\n\\s])+?)<\\/svg>/g;\n        const value = eventArg.replace(regex, '');\n        const values = value.match(/(?<=\\#)([^\\#&^{]*?)(?=\\<)/g) || [];\n        if (c.execting) {\n          if (values.length === 0) {\n            c.overlay!.dismiss();\n          }\n          c.query = values.pop() || '';\n          // 输入空格隐藏气泡\n          if (c.query && /\\s$/.test(c.query)) {\n            c.overlay!.dismiss();\n          } else if (c.query) {\n            refresh({ isInitialLoad: true });\n          }\n        }\n      } else if (c.overlay && c.execting) {\n        c.overlay.dismiss();\n      }\n    };\n\n    const registerEditorEvt = () => {\n      if (c.evt) {\n        c.evt.on('onChange', handleChange);\n      }\n    };\n\n    const load = (args: IData = {}) => {\n      loading.value = true;\n      c.load(args)\n        .then((response: IData) => {\n          if (response.status !== 200 || !response.data) {\n            loading.value = false;\n          }\n          if (response.headers['x-total']) {\n            total.value = Number(response.headers['x-total']);\n          }\n          const isLoadMore = args.isLoadMore === true;\n          if (isLoadMore) {\n            items.value.push(...c.toUIData(response.data));\n          } else {\n            items.value = c.toUIData(response.data);\n            if (items.value.length > 0) {\n              curItem.value = items.value[0];\n            }\n          }\n          loading.value = false;\n        })\n        .catch(() => {\n          loading.value = false;\n        });\n    };\n\n    const loadMore = () => {\n      load({ isLoadMore: true });\n    };\n\n    // 是否可以加载更多\n    const isLodeMoreDisabled = computed(() => {\n      return (\n        items.value.length >= total.value ||\n        loading.value ||\n        total.value <= c.size\n      );\n    });\n\n    const refresh = debounce(load, 300, { leading: true });\n\n    registerEditorEvt();\n    load({ isInitialLoad: true });\n\n    const setSelection = (type: 'up' | 'down' | 'enter') => {\n      let index = items.value.findIndex(x => x.id === curItem.value.id);\n      switch (type) {\n        case 'up':\n          index--;\n          if (index === -1 || index === -2) {\n            index = items.value.length - 1;\n          }\n          curItem.value = items.value[index];\n          break;\n        case 'down':\n          index++;\n          if (index === items.value.length) {\n            index = 0;\n          }\n          curItem.value = items.value[index];\n          break;\n        case 'enter':\n          onSelect(curItem.value);\n          break;\n      }\n    };\n\n    const onSelect = (user: IData) => {\n      if (props.modal) {\n        const modalData: IModalData = { ok: true, data: [user] };\n        props.modal?.dismiss(modalData);\n      }\n    };\n\n    const renderContent = (type: string, value: string) => {\n      if (c.quoteCodelistMap.has(type)) {\n        const item = c.quoteCodelistMap.get(type)!;\n        return (\n          <iBizCodeList\n            codeListItems={item.codeListItems}\n            codeList={item.codeList}\n            value={value}\n          ></iBizCodeList>\n        );\n      }\n      return value;\n    };\n\n    const renderItem = (item: IData) => {\n      return (\n        <div\n          class={[ns.e('item'), ns.is('active', item.id === curItem.value.id)]}\n          onClick={() => onSelect(item)}\n        >\n          <div class={ns.e('type')}>{renderContent('type', item.type)}</div>\n          <div class={ns.e('identifier')}>\n            {renderContent('identifier', item.identifier)}\n          </div>\n          <div class={ns.e('name')} title={item.name}>\n            {renderContent('name', item.name)}\n          </div>\n        </div>\n      );\n    };\n\n    onMounted(() => {\n      cleanup = listenJSEvent(window, 'keyup', event => {\n        // 向下选择\n        if (event.keyCode === 40) {\n          setSelection('down');\n          // 向上选择\n        } else if (event.keyCode === 38) {\n          setSelection('up');\n        } else if (event.keyCode === 13) {\n          setSelection('enter');\n        }\n      });\n    });\n\n    // 组件销毁前销毁监听\n    onBeforeUnmount(() => {\n      if (cleanup !== NOOP) {\n        cleanup();\n      }\n      c.evt.off('onChange', handleChange);\n    });\n\n    return { ns, items, loading, isLodeMoreDisabled, renderItem, loadMore };\n  },\n  render() {\n    return (\n      <div\n        v-infinite-scroll={() => this.loadMore()}\n        infinite-scroll-distance={10}\n        infinite-scroll-disabled={this.isLodeMoreDisabled}\n        infinite-scroll-immediate={false}\n        v-loading={this.loading}\n        class={this.ns.b()}\n      >\n        {this.items.map((user: IData) => {\n          return this.renderItem(user);\n        })}\n        {this.items.length === 0 && (\n          <iBizNoData text={'暂无用户数据'}></iBizNoData>\n        )}\n      </div>\n    );\n  },\n});\n","import { PropType, defineComponent } from 'vue';\nimport { strToBase64 } from '@ibiz-template/core';\nimport { useNamespace } from '@ibiz-template/vue3-util';\nimport { IModal, IModalData } from '@ibiz-template/runtime';\nimport './emoji.scss';\n\nexport const Emoji = defineComponent({\n  name: 'IBizHtmlEmoji',\n  props: {\n    modal: { type: Object as PropType<IModal>, required: true },\n  },\n  setup(props) {\n    const ns = useNamespace('html-emoji');\n\n    // 选择表情\n    const onSelect = (val: IData): void => {\n      const modalData: IModalData = {\n        ok: true,\n        data: [{ emoji: strToBase64(val.data) }],\n      };\n      props.modal.dismiss(modalData);\n    };\n\n    return { ns, onSelect };\n  },\n  render() {\n    return (\n      <div class={this.ns.b()}>\n        <iBizEmojiSelect\n          dark={true}\n          continuousList={true}\n          onSelect={this.onSelect}\n        />\n      </div>\n    );\n  },\n});\n","/* eslint-disable no-template-curly-in-string */\n/* eslint-disable guard-for-in */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable no-useless-escape */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport {\n  CodeListItem,\n  ControllerEvent,\n  IModal,\n  IModalData,\n  IOverlayPopoverContainer,\n  ScriptFactory,\n  convertNavData,\n} from '@ibiz-template/runtime';\nimport { IEditor, INavigateParamContainer } from '@ibiz/model-core';\nimport { VNode, h } from 'vue';\nimport { Boot, DomEditor, IDomEditor } from '@wangeditor/editor';\nimport { NOOP, RuntimeError, listenJSEvent } from '@ibiz-template/core';\nimport markerModule from './marker-node-module';\nimport { Marker } from '../component';\nimport { commentEvent } from '../html-comment.event';\n\n/**\n * 用户列表适配器\n *\n * @export\n * @class MarkerController\n * @extends {EditorController}\n */\nexport class MarkerController {\n  /**\n   * 模型\n   *\n   * @type {IEditor}\n   * @memberof MarkerController\n   */\n  public model!: IEditor;\n\n  /**\n   * 上下文\n   *\n   * @type {IContext}\n   */\n  public context!: IContext;\n\n  /**\n   * 视图参数\n   *\n   * @type {IParams}\n   */\n  public params!: IParams;\n\n  /**\n   * 表单数据\n   *\n   * @type {IData}\n   * @memberof MarkerController\n   */\n  public data: IData = {};\n\n  /**\n   * 编辑器示例\n   *\n   * @type {IDomEditor}\n   * @memberof MarkerController\n   */\n  public editor!: IDomEditor;\n\n  /**\n   * 引用请求url\n   *\n   * @type {string}\n   * @memberof MarkerController\n   */\n  public quoteUrl: string = '';\n\n  /**\n   * 人员UI转化\n   */\n  public quoteFieldMap: IData = {\n    id: 'id',\n    name: 'name',\n  };\n\n  /**\n   * 代码表map\n   *\n   * @type {IData}\n   * @memberof MarkerController\n   */\n  public quoteCodelistMap: Map<string, IData> = new Map();\n\n  /**\n   * 请求方法\n   *\n   * @type {('post' | 'get')}\n   * @memberof MarkerController\n   */\n  public quoteMethod: 'post' | 'get' = 'post';\n\n  /**\n   * 请求参数\n   *\n   * @type {IData}\n   * @memberof MarkerController\n   */\n  public quoteParams: IData = {};\n\n  /**\n   * 转换脚本\n   *\n   * @type {string}\n   * @memberof MenTionController\n   */\n  public quoteScript: string =\n    '`#{id=${data.id},name=${data.name},identifier=${data.identifier},icon=${data.icon}}`';\n\n  /**\n   * 逆转换脚本\n   *\n   * @type {string}\n   * @memberof MenTionController\n   */\n  public quoteInScript: string = `value.replaceAll(/\\#\\{id=(.+?),name=(.+?),identifier=(.+?),icon=((.|[\\\\t\\\\r\\\\f\\\\n\\\\s])+?)\\}/g,(x, id, name, identifier, icon) => {return controller.getNodeInfo({ id, name, identifier, icon })})`;\n\n  /**\n   * 编辑器参数\n   *\n   * @type {IData}\n   * @memberof MarkerController\n   */\n  public editorParams: IData | undefined;\n\n  /**\n   * 用户数据\n   *\n   * @type {IData[]}\n   * @memberof MarkerController\n   */\n  public items: IData[] = [];\n\n  /**\n   * 气泡容器\n   *\n   * @type {IOverlayPopoverContainer}\n   * @memberof MarkerController\n   */\n  public overlay: IOverlayPopoverContainer | null = null;\n\n  /**\n   * 编辑器事件\n   *\n   * @type {ControllerEvent<commentEvent>}\n   * @memberof MarkerController\n   */\n  public evt!: ControllerEvent<commentEvent>;\n\n  /**\n   * 是否正在执行\n   *\n   * @private\n   * @type {boolean}\n   * @memberof MarkerController\n   */\n  public execting: boolean = false;\n\n  /**\n   * 搜索字段\n   *\n   * @type {string}\n   * @memberof MarkerController\n   */\n  public query: string = '';\n\n  /**\n   * 当前页\n   *\n   * @type {number}\n   * @memberof MarkerController\n   */\n  public curPage: number = 0;\n\n  /**\n   * 分页条数\n   *\n   * @type {number}\n   * @memberof MarkerController\n   */\n  public size: number = 20;\n\n  /**\n   * 预定义阻止捕获事件code\n   *\n   * @type {number[]}\n   * @memberof MarkerController\n   */\n  public presetPreventEvents: number[] = [13, 38, 40];\n\n  /**\n   * 预定义阻止冒泡事件code\n   *\n   * @type {number[]}\n   * @memberof MarkerController\n   */\n  public presetPreventPropEvents: number[] = [27];\n\n  /**\n   * 删除回调\n   *\n   * @type {NOOP}\n   * @memberof MarkerController\n   */\n  public cleanup = NOOP;\n\n  /**\n   * 声明'@'插件\n   *\n   * @template T\n   * @param {T} editor\n   * @return {*}\n   * @memberof MarkerController\n   */\n  public markerPlugin<T extends IDomEditor>(editor: T) {\n    const { insertText, isInline, isVoid } = editor;\n\n    // 重写 insertText\n    editor.insertText = t => {\n      // 默认富文本编辑器走默认逻辑\n      if (!this.editor) {\n        insertText(t);\n        return;\n      }\n      if (!this.editor.isFocused()) {\n        insertText(t);\n        return;\n      }\n      // 选中了 void 元素\n      const elems = DomEditor.getSelectedElems(editor);\n      const isSelectedVoidElem = elems.some(elem => editor.isVoid(elem));\n      if (isSelectedVoidElem) {\n        insertText(t);\n        return;\n      }\n\n      if (t === '#' && !this.execting) {\n        this.query = '';\n        this.showModal();\n      }\n\n      // 非 '#' 则执行默认行为\n      insertText(t);\n    };\n\n    // 重写 isInline\n    editor.isInline = elem => {\n      const type = DomEditor.getNodeType(elem);\n      if (type === 'marker') {\n        return true;\n      }\n\n      return isInline(elem);\n    };\n\n    // 重写 isVoid\n    editor.isVoid = elem => {\n      const type = DomEditor.getNodeType(elem);\n      if (type === 'marker') {\n        return true;\n      }\n\n      return isVoid(elem);\n    };\n\n    return editor;\n  }\n\n  /**\n   * Creates an instance of MarkerController.\n   * @param {IData} option\n   * @memberof MarkerController\n   */\n  constructor() {\n    this.registerNode();\n  }\n\n  public registerNode() {\n    if (!(window as IData).markerIsRegiter) {\n      Boot.registerModule(markerModule);\n      (window as IData).markerIsRegiter = true;\n    }\n    Boot.registerPlugin(this.markerPlugin.bind(this));\n  }\n\n  /**\n   * 初始化\n   *\n   * @param {IDomEditor} editor\n   * @memberof MarkerController\n   */\n  public async init(editor: IDomEditor, option: IData) {\n    this.model = option.model;\n    this.context = option.context;\n    this.params = option.params;\n    this.evt = option.evt;\n    this.data = option.data;\n    this.editor = editor;\n    this.editorParams = this.model.editorParams;\n    if (this.editorParams) {\n      const {\n        QUOTEURL,\n        QUOTEFIELDMAP,\n        QUOTEMETHOD,\n        QUOTESCRIPT,\n        QUOTEINSCRIPT,\n        QUOTEPARAMS,\n        QUOTECODELISTMAP,\n      } = this.editorParams;\n      if (QUOTEURL) {\n        this.quoteUrl = QUOTEURL;\n      }\n      if (QUOTEFIELDMAP) {\n        this.quoteFieldMap = JSON.parse(QUOTEFIELDMAP);\n      }\n      if (QUOTEMETHOD) {\n        this.quoteMethod = QUOTEMETHOD.toLowerCase();\n      }\n      if (QUOTEPARAMS) {\n        this.quoteParams = JSON.parse(QUOTEPARAMS);\n      }\n      if (QUOTESCRIPT) {\n        this.quoteScript = QUOTESCRIPT;\n      }\n      if (QUOTEINSCRIPT) {\n        this.quoteInScript = QUOTEINSCRIPT;\n      }\n      if (QUOTECODELISTMAP) {\n        const codelist = JSON.parse(QUOTECODELISTMAP);\n        this.setCodeListMap(codelist);\n      }\n    }\n    const container = this.editor.getEditableContainer();\n    if (container) {\n      this.cleanup = listenJSEvent(container, 'keydown', event => {\n        if (this.execting && this.presetPreventEvents.includes(event.keyCode)) {\n          event.preventDefault();\n        }\n        // 监听esc按键，销毁弹框\n        if (\n          this.execting &&\n          this.presetPreventPropEvents.includes(event.keyCode)\n        ) {\n          event.stopPropagation();\n          this.overlay?.dismiss();\n        }\n      });\n    }\n  }\n\n  public onDestroyed() {\n    if (this.cleanup !== NOOP) {\n      this.cleanup();\n    }\n    if (this.overlay) {\n      this.overlay.dismiss();\n    }\n  }\n\n  // 设置代码表map\n  public async setCodeListMap(items: IData) {\n    for (const key in items) {\n      const item = await this.loadCodeList(items[key]);\n      if (item) {\n        this.quoteCodelistMap.set(key, item);\n      }\n    }\n  }\n\n  // 显示弹框\n  public showModal() {\n    if (!this.quoteUrl) {\n      throw new RuntimeError('未配置提及工作项QUOTEURL编辑器参数！');\n    }\n    // 获取光标位置，定位 modal\n    const domSelection = document.getSelection();\n    if (!domSelection) {\n      return;\n    }\n    const { focusNode } = domSelection;\n    if (focusNode) {\n      this.openPopover(focusNode.parentNode as HTMLElement).then(\n        (user: IData[]) => {\n          if (user.length > 0) {\n            this.insertNode(user[0]);\n          }\n        },\n      );\n    }\n  }\n\n  public findCodeListItem(\n    codelist: CodeListItem[] | undefined,\n    value: string | number,\n  ) {\n    if (codelist) {\n      // eslint-disable-next-line eqeqeq\n      const findItem = codelist.find(item => item.value == value);\n      if (findItem) {\n        return findItem;\n      }\n      for (let i = 0; i < codelist.length; i++) {\n        const childrenItem = this.findCodeListItem(\n          codelist[i].children,\n          value,\n        ) as CodeListItem;\n        if (childrenItem) {\n          return childrenItem;\n        }\n      }\n    }\n  }\n\n  /**\n   * 插入@\n   *\n   * @param {IDomEditor} editor\n   * @memberof MarkerController\n   */\n  public insertNode(data: IData) {\n    if (this.quoteCodelistMap.has('type') && data.type) {\n      const item = this.quoteCodelistMap.get('type')!;\n      const findItem = this.findCodeListItem(item.codeListItems, data.type);\n      if (findItem && findItem.sysImage) {\n        Object.assign(data, {\n          icon: findItem.sysImage.rawContent,\n        });\n      }\n    }\n    const markerNode: any = {\n      type: 'marker',\n      script: this.quoteScript,\n      data,\n      children: [{ text: '' }],\n    };\n\n    this.editor.restoreSelection(); // 恢复选区\n    this.editor.deleteBackward('character'); // 删除 '#'\n    // 删除查询字段\n    for (let index = 0; index < this.query.length; index++) {\n      this.editor.deleteBackward('character');\n    }\n    this.editor.insertNode(markerNode); // 插入 marker\n    this.editor.move(1); // 移动光标\n  }\n\n  /**\n   * 获取节点信息\n   *\n   * @param {IData} data\n   * @memberof MenTionController\n   */\n  public getNodeInfo(data: IData) {\n    Object.assign(data, { script: this.quoteScript });\n    return `<span data-w-e-type=\"marker\" data-w-e-is-void data-w-e-is-inline data-value=\"${encodeURIComponent(\n      JSON.stringify(data),\n    )}\"></span>`;\n  }\n\n  /**\n   * 解析marker节点\n   *\n   * @param {string} value\n   * @return {*}\n   * @memberof MarkerController\n   */\n  public parseNode(value: string) {\n    return ScriptFactory.execScriptFn(\n      { value, controller: this },\n      this.quoteInScript,\n      {\n        singleRowReturn: true,\n        isAsync: false,\n      },\n    ) as string;\n  }\n\n  /**\n   * 处理公共参数\n   *\n   * @param {IData} data\n   * @param {IContext} context\n   * @param {IParams} params\n   * @return {*}  {{ context: IContext; params: IParams }}\n   * @memberof MarkerController\n   */\n  public handlePublicParams(\n    data: IData,\n    context: IContext,\n    params: IParams,\n  ): { context: IContext; params: IParams } {\n    const { navigateContexts, navigateParams } = this\n      .model as INavigateParamContainer;\n    let selfContext = {};\n    if (navigateContexts && data) {\n      selfContext = convertNavData(navigateContexts!, data, params, context);\n    }\n    const _context = Object.assign(context.clone(), selfContext);\n\n    let selfParams = {};\n    if (navigateParams && data) {\n      selfParams = convertNavData(navigateParams!, data, params, context);\n    }\n    return { context: _context, params: selfParams };\n  }\n\n  /**\n   * 获取工作项信息\n   *\n   * @param {IData} data\n   * @return {*}  {Promise<IData[]>}\n   * @memberof MarkerController\n   */\n  public load(args: IData = {}): Promise<IData> {\n    const { context, params } = this.handlePublicParams(\n      this.data,\n      this.context,\n      this.params,\n    );\n    const isInitialLoad = args.isInitialLoad === true;\n    const isLoadMore = args.isLoadMore === true;\n    if (isInitialLoad) {\n      this.curPage = 0;\n    } else if (isLoadMore) {\n      this.curPage += 1;\n    }\n    const url = ScriptFactory.execScriptFn(\n      { data: this.data, context, params },\n      this.quoteUrl,\n      {\n        singleRowReturn: true,\n        isAsync: false,\n      },\n    ) as string;\n    const tempParams: IData = {\n      ...params,\n      query: this.query,\n      size: this.size,\n      page: this.curPage,\n      ...this.quoteParams,\n    };\n    return ibiz.net[this.quoteMethod](url, tempParams);\n  }\n\n  /**\n   * 转换ui数据\n   *\n   * @param {IData[]} data\n   * @return {*}  {IData[]}\n   * @memberof MarkerController\n   */\n  public toUIData(data: IData[]): IData[] {\n    return data.map((item: IData) => {\n      const result: IData = {};\n      Object.keys(this.quoteFieldMap).forEach((key: string) => {\n        result[key] = item[this.quoteFieldMap[key]];\n      });\n      return result;\n    });\n  }\n\n  /**\n   * 打开用户列表气泡框\n   *\n   * @param {HTMLElement} event\n   * @memberof MarkerController\n   */\n  public async openPopover(event: HTMLElement) {\n    this.overlay = ibiz.overlay.createPopover(\n      this.createOverlayView(),\n      undefined,\n      {\n        placement: 'bottom-start',\n        autoClose: true,\n        width: '300px',\n        noArrow: true,\n      },\n    );\n    await this.overlay.present(event);\n    this.execting = true;\n    const result: IModalData = await this.overlay.onWillDismiss();\n    this.execting = false;\n    return result.data || [];\n  }\n\n  public createOverlayView(): (modal: IModal) => VNode {\n    return (modal: IModal) => {\n      return h(Marker, {\n        controller: this,\n        modal,\n      });\n    };\n  }\n\n  /**\n   * 加载代码表\n   *\n   * @param {string} appCodeListId\n   * @return {*}  {(Promise<IData | undefined>)}\n   * @memberof MarkerController\n   */\n  async loadCodeList(appCodeListId: string): Promise<IData | undefined> {\n    const app = ibiz.hub.getApp(this.context.srfappid);\n    const codeList = app.codeList.getCodeList(appCodeListId);\n    const codeListItems = await app.codeList.get(\n      appCodeListId,\n      this.context,\n      this.params,\n    );\n    return { codeList, codeListItems };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ScriptFactory } from '@ibiz-template/runtime';\nimport {\n  IDomEditor,\n  IButtonMenu,\n  IModuleConf,\n  SlateElement,\n} from '@wangeditor/editor';\nimport { DOMElement } from '@wangeditor/editor/dist/editor/src/utils/dom';\nimport { h } from 'snabbdom';\n\ntype EmptyText = {\n  text: '';\n};\nexport type MentionElement = {\n  type: 'mention';\n  script: string;\n  data: IData;\n  children: EmptyText[]; // void 元素必须有一个空 text\n};\n\nfunction mentionToHtml(elem: SlateElement): string {\n  const { script = '', data = {} } = elem as MentionElement;\n  const result = ScriptFactory.execScriptFn({ data }, script, {\n    singleRowReturn: true,\n    isAsync: false,\n  }) as string;\n  return `${result}`;\n}\n\nconst elemToHtmlConf = {\n  type: 'mention',\n  elemToHtml: mentionToHtml,\n};\n\nfunction parseHtml(elem: DOMElement): SlateElement {\n  const datastr = decodeURIComponent(elem.getAttribute('data-value') || '');\n  const data: IData = JSON.parse(datastr);\n  return {\n    type: 'mention',\n    script: data.script,\n    data,\n    children: [{ text: '' }],\n  } as MentionElement;\n}\n\nconst parseHtmlConf = {\n  selector: 'span[data-w-e-type=\"mention\"]',\n  parseElemHtml: parseHtml,\n};\n\nfunction renderMention(elem: SlateElement) {\n  const { data = {} } = elem as MentionElement;\n\n  const tempData = {\n    name: `@${data.name}`,\n    id: data.id,\n  };\n\n  // 构建 vnode\n  const vnode = h(\n    'mention-elem',\n    {\n      dataset: { value: JSON.stringify(tempData) },\n      props: {\n        contentEditable: false, // 不可编辑\n      },\n    },\n    [],\n  );\n\n  return vnode;\n}\n\nconst renderElemConf: any = {\n  type: 'mention',\n  renderElem: renderMention,\n};\n\nexport class MenTionMenu implements IButtonMenu {\n  readonly title = '提及成员';\n\n  readonly tag = 'button';\n\n  readonly iconSvg =\n    '<svg t=\"1705979200437\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4218\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"200\" height=\"200\"><path d=\"M23.7 555c0-339.3 247-550 533.8-550 295.6 0 442.8 165.9 442.8 401.6 0 210.8-93.5 361.7-237 361.7-63.6 0-108.5-26.2-137.2-78.6-48.6 51.1-96 79.8-174.6 79.8-116 0-178.4-77.3-178.4-193.3 0-209.5 131-323 251.9-323 64.9 0 102.3 24.9 122.2 68.6l11.2-58.6 114.7 1.2L727 510.1c-7.5 36.2-11.2 63.6-11.2 81.1 0 44.9 22.5 71.1 56.1 71.1 63.6 0 106-89.8 106-243.2 0-205.8-114.7-300.6-323-300.6-220.8 0-405.4 163.4-405.4 436.5 0 238.2 132.2 350.5 390.4 350.5 94.8 0 174.6-12.5 255.7-36.2v109.8c-88.6 26.2-177.1 39.9-263.2 39.9-329.1 0-508.7-168.4-508.7-464z m585-44.9c3.7-20 6.2-39.9 6.2-53.6 0-56.1-15-96-83.6-96-83.6 0-133.5 108.5-133.5 212 0 44.9 13.7 88.6 77.3 88.6 73.7-0.1 114.9-57.4 133.6-151z\" fill=\"#333333\" p-id=\"4219\"></path></svg>';\n\n  constructor() {}\n\n  // 菜单是否需要激活（如选中加粗文本，“加粗”菜单会激活），用不到则返回 false\n  isActive(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 获取菜单执行时的 value ，用不到则返回空 字符串或 false\n  getValue(editor: IDomEditor): string | boolean {\n    return '';\n  }\n\n  // 菜单是否需要禁用（如选中 H1 ，“引用”菜单被禁用），用不到则返回 false\n  isDisabled(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 点击菜单时触发的函数\n  exec(editor: IDomEditor, value: string | boolean) {\n    editor.insertText('@');\n  }\n}\n\nconst atMenu = {\n  key: 'mention',\n  factory() {\n    return new MenTionMenu();\n  },\n};\n\nconst module: Partial<IModuleConf> = {\n  renderElems: [renderElemConf],\n  elemsToHtml: [elemToHtmlConf],\n  parseElemsHtml: [parseHtmlConf],\n  menus: [atMenu],\n};\n\nexport default module;\n","/* eslint-disable no-template-curly-in-string */\n/* eslint-disable no-useless-escape */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport {\n  CodeListItem,\n  ControllerEvent,\n  IModal,\n  IModalData,\n  IOverlayPopoverContainer,\n  ScriptFactory,\n  convertNavData,\n} from '@ibiz-template/runtime';\nimport { IEditor, INavigateParamContainer } from '@ibiz/model-core';\nimport { VNode, h } from 'vue';\nimport { Boot, DomEditor, IDomEditor } from '@wangeditor/editor';\nimport { NOOP, RuntimeError, listenJSEvent } from '@ibiz-template/core';\nimport mentionModule from './mention-node-module';\nimport { MenTion } from '../component';\nimport { commentEvent } from '../html-comment.event';\n\n/**\n * 用户列表适配器\n *\n * @export\n * @class MenTionController\n * @extends {EditorController}\n */\nexport class MenTionController {\n  /**\n   *云系统操作者Map\n   *\n   * @memberof MenTionController\n   */\n  public operatorMap = new Map();\n\n  /**\n   * 模型\n   *\n   * @type {IEditor}\n   * @memberof MenTionController\n   */\n  public model!: IEditor;\n\n  /**\n   * 上下文\n   *\n   * @type {IContext}\n   */\n  public context!: IContext;\n\n  /**\n   * 视图参数\n   *\n   * @type {IParams}\n   */\n  public params!: IParams;\n\n  /**\n   * 表单数据\n   *\n   * @type {IData}\n   * @memberof MenTionController\n   */\n  public data: IData = {};\n\n  /**\n   * 编辑器示例\n   *\n   * @type {IDomEditor}\n   * @memberof MenTionController\n   */\n  public editor!: IDomEditor;\n\n  /**\n   * 用户请求url\n   *\n   * @type {string}\n   * @memberof MenTionController\n   */\n  public userUrl: string = '';\n\n  /**\n   * 人员UI转化\n   */\n  public userFieldMap: IData = {\n    id: 'id',\n    name: 'name',\n  };\n\n  /**\n   * 请求方法\n   *\n   * @type {('post' | 'get')}\n   * @memberof MenTionController\n   */\n  public userMethod: 'post' | 'get' = 'post';\n\n  /**\n   * 转换脚本\n   *\n   * @type {string}\n   * @memberof MenTionController\n   */\n  public userScript: string = '`@{userid=${data.id},name=${data.name}}`';\n\n  /**\n   * 逆转换脚本\n   *\n   * @type {string}\n   * @memberof MenTionController\n   */\n  public userInScript: string = `value.replaceAll(/\\@\\{userid=(.+?),name=(.+?)\\}/g,(x, id, name) => {return controller.getNodeInfo({ id, name })})`;\n\n  /**\n   * 编辑器参数\n   *\n   * @type {IData}\n   * @memberof MenTionController\n   */\n  public editorParams: IData | undefined;\n\n  /**\n   * 用户数据\n   *\n   * @type {IData[]}\n   * @memberof MenTionController\n   */\n  public items: IData[] = [];\n\n  /**\n   * 气泡容器\n   *\n   * @type {IOverlayPopoverContainer}\n   * @memberof MenTionController\n   */\n  public overlay: IOverlayPopoverContainer | null = null;\n\n  /**\n   * 编辑器事件\n   *\n   * @type {ControllerEvent<commentEvent>}\n   * @memberof MenTionController\n   */\n  public evt!: ControllerEvent<commentEvent>;\n\n  /**\n   * 是否正在执行\n   *\n   * @private\n   * @type {boolean}\n   * @memberof MenTionController\n   */\n  public execting: boolean = false;\n\n  /**\n   * 搜索字段\n   *\n   * @type {string}\n   * @memberof MenTionController\n   */\n  public query: string = '';\n\n  /**\n   * 当前页\n   *\n   * @type {number}\n   * @memberof MenTionController\n   */\n  public curPage: number = 0;\n\n  /**\n   * 分页条数\n   *\n   * @type {number}\n   * @memberof MenTionController\n   */\n  public size: number = 20;\n\n  /**\n   * 预定义阻止捕获事件code\n   *\n   * @type {number[]}\n   * @memberof MenTionController\n   */\n  public presetPreventEvents: number[] = [13, 38, 40];\n\n  /**\n   * 预定义阻止冒泡事件code\n   *\n   * @type {number[]}\n   * @memberof MenTionController\n   */\n  public presetPreventPropEvents: number[] = [27];\n\n  /**\n   * 删除回调\n   *\n   * @type {NOOP}\n   * @memberof MenTionController\n   */\n  public cleanup = NOOP;\n\n  /**\n   * 声明'@'插件\n   *\n   * @template T\n   * @param {T} editor\n   * @return {*}\n   * @memberof MenTionController\n   */\n  public mentionPlugin<T extends IDomEditor>(editor: T) {\n    const { insertText, isInline, isVoid } = editor;\n\n    // 重写 insertText\n    editor.insertText = t => {\n      // 默认富文本编辑器走默认逻辑\n      if (!this.editor) {\n        insertText(t);\n        return;\n      }\n      if (!this.editor.isFocused()) {\n        insertText(t);\n        return;\n      }\n      // 选中了 void 元素\n      const elems = DomEditor.getSelectedElems(editor);\n      const isSelectedVoidElem = elems.some(elem => editor.isVoid(elem));\n      if (isSelectedVoidElem) {\n        insertText(t);\n        return;\n      }\n\n      if (t === '@' && !this.execting) {\n        this.query = '';\n        this.showModal();\n      }\n\n      // 非 '@' 则执行默认行为\n      insertText(t);\n    };\n\n    // 重写 isInline\n    editor.isInline = elem => {\n      const type = DomEditor.getNodeType(elem);\n      if (type === 'mention') {\n        return true;\n      }\n\n      return isInline(elem);\n    };\n\n    // 重写 isVoid\n    editor.isVoid = elem => {\n      const type = DomEditor.getNodeType(elem);\n      if (type === 'mention') {\n        return true;\n      }\n\n      return isVoid(elem);\n    };\n\n    return editor;\n  }\n\n  /**\n   * Creates an instance of MenTionController.\n   * @param {IData} option\n   * @memberof MenTionController\n   */\n  constructor() {\n    this.registerNode();\n  }\n\n  public registerNode() {\n    if (!(window as IData).mentionIsRegiter) {\n      Boot.registerModule(mentionModule);\n      (window as IData).mentionIsRegiter = true;\n    }\n    Boot.registerPlugin(this.mentionPlugin.bind(this));\n  }\n\n  /**\n   * 初始化\n   *\n   * @param {IDomEditor} editor\n   * @memberof MenTionController\n   */\n  public async init(editor: IDomEditor, option: IData) {\n    this.model = option.model;\n    this.context = option.context;\n    this.params = option.params;\n    this.evt = option.evt;\n    this.data = option.data;\n    this.editor = editor;\n    this.editorParams = this.model.editorParams;\n    if (this.editorParams) {\n      const { USERURL, USERFIELDMAP, USERMETHOD, USERSCRIPT, USERINSCRIPT } =\n        this.editorParams;\n      if (USERURL) {\n        this.userUrl = USERURL;\n      }\n      if (USERFIELDMAP) {\n        this.userFieldMap = JSON.parse(USERFIELDMAP);\n      }\n      if (USERMETHOD) {\n        this.userMethod = USERMETHOD.toLowerCase();\n      }\n      if (USERSCRIPT) {\n        this.userScript = USERSCRIPT;\n      }\n      if (USERINSCRIPT) {\n        this.userInScript = USERINSCRIPT;\n      }\n    }\n    const container = this.editor.getEditableContainer();\n    if (container) {\n      this.cleanup = listenJSEvent(container, 'keydown', event => {\n        if (this.execting && this.presetPreventEvents.includes(event.keyCode)) {\n          event.preventDefault();\n        }\n        // 监听esc按键，销毁弹框\n        if (\n          this.execting &&\n          this.presetPreventPropEvents.includes(event.keyCode)\n        ) {\n          event.stopPropagation();\n          this.overlay?.dismiss();\n        }\n      });\n    }\n    await this.getOperatorUserList();\n  }\n\n  /**\n   * 获取云系统操作者\n   *\n   * @memberof MenTionController\n   */\n  async getOperatorUserList() {\n    const app = await ibiz.hub.getApp(this.context.srfappid);\n    let dataItems: readonly CodeListItem[] = [];\n    dataItems = await app.codeList.get(\n      'SysOperator',\n      this.context,\n      this.params,\n    );\n    // 构建一个map,避免后续匹配数据时循环花时间\n    this.operatorMap = new Map(\n      dataItems.map((item: CodeListItem) => [item.value, item]),\n    );\n  }\n\n  public onDestroyed() {\n    if (this.cleanup !== NOOP) {\n      this.cleanup();\n    }\n    if (this.overlay) {\n      this.overlay.dismiss();\n    }\n  }\n\n  // 显示弹框\n  public showModal() {\n    if (!this.userUrl) {\n      throw new RuntimeError('未配置提及用户USERURL编辑器参数！');\n    }\n    // 获取光标位置，定位 modal\n    const domSelection = document.getSelection();\n    if (!domSelection) {\n      return;\n    }\n    const { focusNode } = domSelection;\n    if (focusNode) {\n      this.openUserPopover(focusNode.parentNode as HTMLElement).then(\n        (user: IData[]) => {\n          if (user.length > 0) {\n            this.insertNode(user[0]);\n          }\n        },\n      );\n    }\n  }\n\n  /**\n   * 插入@\n   *\n   * @param {IDomEditor} editor\n   * @memberof MenTionController\n   */\n  public insertNode(data: IData) {\n    const mentionNode: any = {\n      type: 'mention',\n      script: this.userScript,\n      data,\n      children: [{ text: '' }],\n    };\n\n    this.editor.restoreSelection(); // 恢复选区\n    this.editor.deleteBackward('character'); // 删除 '@'\n    // 删除查询字段\n    for (let index = 0; index < this.query.length; index++) {\n      this.editor.deleteBackward('character');\n    }\n    this.editor.insertNode(mentionNode); // 插入 mention\n    this.editor.move(1); // 移动光标\n  }\n\n  /**\n   * 获取节点信息\n   *\n   * @param {IData} data\n   * @memberof MenTionController\n   */\n  public getNodeInfo(data: IData) {\n    Object.assign(data, { script: this.userScript });\n    return `<span data-w-e-type=\"mention\" data-w-e-is-void data-w-e-is-inline data-value=\"${encodeURIComponent(\n      JSON.stringify(data),\n    )}\"></span>`;\n  }\n\n  /**\n   * 解析mention节点\n   *\n   * @param {string} value\n   * @return {*}\n   * @memberof MenTionController\n   */\n  public parseNode(value: string) {\n    return ScriptFactory.execScriptFn(\n      { value, controller: this },\n      this.userInScript,\n      {\n        singleRowReturn: true,\n        isAsync: false,\n      },\n    ) as string;\n  }\n\n  /**\n   * 处理公共参数\n   *\n   * @param {IData} data\n   * @param {IContext} context\n   * @param {IParams} params\n   * @return {*}  {{ context: IContext; params: IParams }}\n   * @memberof MenTionController\n   */\n  public handlePublicParams(\n    data: IData,\n    context: IContext,\n    params: IParams,\n  ): { context: IContext; params: IParams } {\n    const { navigateContexts, navigateParams } = this\n      .model as INavigateParamContainer;\n    let selfContext = {};\n    if (navigateContexts && data) {\n      selfContext = convertNavData(navigateContexts!, data, params, context);\n    }\n    const _context = Object.assign(context.clone(), selfContext);\n\n    let selfParams = {};\n    if (navigateParams && data) {\n      selfParams = convertNavData(navigateParams!, data, params, context);\n    }\n    return { context: _context, params: selfParams };\n  }\n\n  /**\n   * 获取用户信息\n   *\n   * @param {IData} data\n   * @return {*}  {Promise<IData[]>}\n   * @memberof MenTionController\n   */\n  public getUsers(args: IData = {}): Promise<IData> {\n    const { context, params } = this.handlePublicParams(\n      this.data,\n      this.context,\n      this.params,\n    );\n    const isInitialLoad = args.isInitialLoad === true;\n    const isLoadMore = args.isLoadMore === true;\n    if (isInitialLoad) {\n      this.curPage = 0;\n    } else if (isLoadMore) {\n      this.curPage += 1;\n    }\n    const url = ScriptFactory.execScriptFn(\n      { data: this.data, context, params },\n      this.userUrl,\n      {\n        singleRowReturn: true,\n        isAsync: false,\n      },\n    ) as string;\n    const tempParams: IData = {\n      ...params,\n      query: this.query,\n      size: this.size,\n      page: this.curPage,\n    };\n    return ibiz.net[this.userMethod](url, tempParams);\n  }\n\n  /**\n   * 转换ui数据\n   *\n   * @param {IData[]} data\n   * @return {*}  {IData[]}\n   * @memberof MenTionController\n   */\n  public toUIData(data: IData[]): IData[] {\n    return data.map((item: IData) => {\n      const result: IData = {};\n      Object.keys(this.userFieldMap).forEach((key: string) => {\n        result[key] = item[this.userFieldMap[key]];\n      });\n      return result;\n    });\n  }\n\n  /**\n   * 打开用户列表气泡框\n   *\n   * @param {HTMLElement} event\n   * @memberof MenTionController\n   */\n  public async openUserPopover(event: HTMLElement) {\n    this.overlay = ibiz.overlay.createPopover(\n      this.createOverlayView(),\n      undefined,\n      {\n        placement: 'bottom-start',\n        autoClose: true,\n        width: '300px',\n        noArrow: true,\n      },\n    );\n    await this.overlay.present(event);\n    this.execting = true;\n    const result: IModalData = await this.overlay.onWillDismiss();\n    this.execting = false;\n    return result.data || [];\n  }\n\n  public createOverlayView(): (modal: IModal) => VNode {\n    return (modal: IModal) => {\n      return h(MenTion, {\n        controller: this,\n        modal,\n      });\n    };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RuntimeError } from '@ibiz-template/core';\nimport { ScriptFactory } from '@ibiz-template/runtime';\nimport {\n  IDomEditor,\n  IButtonMenu,\n  IModuleConf,\n  SlateElement,\n} from '@wangeditor/editor';\nimport { DOMElement } from '@wangeditor/editor/dist/editor/src/utils/dom';\nimport { h } from 'snabbdom';\n\ntype EmptyText = {\n  text: '';\n};\nexport type PageElement = {\n  type: 'page';\n  script: string;\n  data: IData;\n  children: EmptyText[]; // void 元素必须有一个空 text\n};\n\nfunction PageToHtml(elem: SlateElement): string {\n  const { script = '', data = {} } = elem as PageElement;\n  const result = ScriptFactory.execScriptFn({ data }, script, {\n    singleRowReturn: true,\n    isAsync: false,\n  }) as string;\n  return `${result}`;\n}\n\nconst elemToHtmlConf = {\n  type: 'page',\n  elemToHtml: PageToHtml,\n};\n\nfunction parseHtml(elem: DOMElement): SlateElement {\n  const datastr = decodeURIComponent(elem.getAttribute('data-value') || '');\n  const data: IData = JSON.parse(datastr);\n  return {\n    type: 'page',\n    script: data.script,\n    data,\n    children: [{ text: '' }],\n  } as PageElement;\n}\n\nconst parseHtmlConf = {\n  selector: 'span[data-w-e-type=\"page\"]',\n  parseElemHtml: parseHtml,\n};\n\nfunction renderPage(elem: SlateElement) {\n  const { data = {} } = elem as PageElement;\n\n  const tempData = {\n    name: `${data.name}`,\n    id: data.id,\n  };\n\n  // 构建 vnode\n  const vnode = h(\n    'mention-elem',\n    {\n      dataset: { value: JSON.stringify(tempData) },\n      props: {\n        contentEditable: false, // 不可编辑\n      },\n    },\n    [],\n  );\n\n  return vnode;\n}\n\nconst renderElemConf: any = {\n  type: 'Page',\n  renderElem: renderPage,\n};\n\nexport class PageMenu implements IButtonMenu {\n  readonly title = '页面';\n\n  readonly tag = 'button';\n\n  readonly iconSvg = `<svg t=\"1707293566679\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"6103\" width=\"200\" height=\"200\"><path d=\"M288 512l256 0C561.92 512 576 497.92 576 480 576 462.08 561.92 448 544 448l-256 0C270.08 448 256 462.08 256 480 256 497.92 270.08 512 288 512zM768 64 192 64C121.6 64 64 121.6 64 192l0 576c0 70.4 57.6 128 128 128l576 0c70.4 0 128-57.6 128-128L896 192C896 121.6 838.4 64 768 64zM832 768c0 35.2-28.8 64-64 64L192 832c-35.2 0-64-28.8-64-64L128 192c0-35.2 28.8-64 64-64l576 0c35.2 0 64 28.8 64 64L832 768zM672 256l-384 0C270.08 256 256 270.08 256 288 256 305.92 270.08 320 288 320l384 0C689.92 320 704 305.92 704 288 704 270.08 689.92 256 672 256zM608 640l-320 0C270.08 640 256 654.08 256 672l0 0C256 689.92 270.08 704 288 704l320 0c17.92 0 32-14.08 32-32l0 0C640 654.08 625.92 640 608 640z\" p-id=\"6104\"></path></svg>`;\n\n  constructor() {}\n\n  // 菜单是否需要激活（如选中加粗文本，“加粗”菜单会激活），用不到则返回 false\n  isActive(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 获取菜单执行时的 value ，用不到则返回空 字符串或 false\n  getValue(editor: IDomEditor): string | boolean {\n    return '';\n  }\n\n  // 菜单是否需要禁用（如选中 H1 ，“引用”菜单被禁用），用不到则返回 false\n  isDisabled(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  // 点击菜单时触发的函数\n  exec(editor: IDomEditor, value: string | boolean) {\n    throw new RuntimeError('暂未支持上传页面！');\n  }\n}\n\nconst Menu = {\n  key: 'page',\n  factory() {\n    return new PageMenu();\n  },\n};\n\nconst module: Partial<IModuleConf> = {\n  renderElems: [renderElemConf],\n  elemsToHtml: [elemToHtmlConf],\n  parseElemsHtml: [parseHtmlConf],\n  menus: [Menu],\n};\n\nexport default module;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-template-curly-in-string */\n/* eslint-disable no-useless-escape */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ControllerEvent } from '@ibiz-template/runtime';\nimport { IEditor } from '@ibiz/model-core';\nimport { Boot, IDomEditor } from '@wangeditor/editor';\nimport PageModule from './page-node-module';\nimport { commentEvent } from '../html-comment.event';\n\n/**\n * 代码段控制器\n *\n * @export\n * @class PageController\n * @extends {EditorController}\n */\nexport class PageController {\n  /**\n   * 模型\n   *\n   * @type {IEditor}\n   * @memberof PageController\n   */\n  public model!: IEditor;\n\n  /**\n   * 上下文\n   *\n   * @type {IContext}\n   */\n  public context!: IContext;\n\n  /**\n   * 视图参数\n   *\n   * @type {IParams}\n   */\n  public params!: IParams;\n\n  /**\n   * 表单数据\n   *\n   * @type {IData}\n   * @memberof PageController\n   */\n  public data: IData = {};\n\n  /**\n   * 编辑器示例\n   *\n   * @type {IDomEditor}\n   * @memberof PageController\n   */\n  public editor!: IDomEditor;\n\n  /**\n   * 编辑器参数\n   *\n   * @type {IData}\n   * @memberof PageController\n   */\n  public editorParams: IData | undefined;\n\n  /**\n   * 用户数据\n   *\n   * @type {IData[]}\n   * @memberof PageController\n   */\n  public items: IData[] = [];\n\n  /**\n   * 编辑器事件\n   *\n   * @type {ControllerEvent<commentEvent>}\n   * @memberof PageController\n   */\n  public evt!: ControllerEvent<commentEvent>;\n\n  /**\n   * 是否正在执行\n   *\n   * @private\n   * @type {boolean}\n   * @memberof PageController\n   */\n  public execting: boolean = false;\n\n  /**\n   * Creates an instance of PageController.\n   * @param {IData} option\n   * @memberof PageController\n   */\n  constructor() {\n    this.registerNode();\n  }\n\n  public registerNode() {\n    if (!(window as IData).pageIsRegiter) {\n      Boot.registerModule(PageModule);\n      (window as IData).pageIsRegiter = true;\n    }\n  }\n\n  /**\n   * 初始化\n   *\n   * @param {IDomEditor} editor\n   * @memberof PageController\n   */\n  public async init(editor: IDomEditor, option: IData) {\n    this.model = option.model;\n    this.context = option.context;\n    this.params = option.params;\n    this.evt = option.evt;\n    this.data = option.data;\n    this.editor = editor;\n    this.editorParams = this.model.editorParams;\n  }\n\n  /**\n   * 控制器销毁\n   *\n   * @memberof PageController\n   */\n  public onDestroyed() {\n    // todo\n  }\n\n  /**\n   * 插入节点\n   *\n   * @param {IDomEditor} editor\n   * @memberof PageController\n   */\n  public insertNode(data: IData) {\n    // todo\n  }\n\n  /**\n   * 解析mention节点\n   *\n   * @param {string} value\n   * @return {*}\n   * @memberof PageController\n   */\n  public parseNode(value: string) {\n    return value;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { h } from 'snabbdom';\nimport { base64ToStr } from '@ibiz-template/core';\nimport {\n  IModuleConf,\n  SlateElement,\n  IButtonMenu,\n  IDomEditor,\n} from '@wangeditor/editor';\nimport { DOMElement } from '@wangeditor/editor/dist/editor/src/utils/dom';\n\n/**\n * 空值节点\n */\ntype EmptyText = {\n  text: '';\n};\n\n/**\n * emoji节点\n */\ntype EmojiElement = {\n  type: 'emoji';\n  data: IData;\n  children: EmptyText[]; // void 元素必须有一个空 text\n};\n\n/**\n * 根据节点类型绘制节点元素\n *\n * wangEditor 内容区呈现元素\n */\nconst renderElemConf = {\n  type: 'emoji',\n  renderElem: (elem: SlateElement): any => {\n    const { data = {} } = elem as EmojiElement;\n\n    const vnode = h(\n      'emoji-elem',\n      {\n        dataset: { value: data.emoji ? base64ToStr(data.emoji) : '' },\n        props: {\n          contentEditable: false, // 不可编辑\n        },\n      },\n      [],\n    );\n    return vnode;\n  },\n};\n\n/**\n * 编辑器节点解析为html字符串\n *\n * 前端数据转后台数据\n */\nconst elemToHtmlConf = {\n  type: 'emoji',\n  elemToHtml: (elem: SlateElement): string => {\n    const { data } = elem as EmojiElement;\n    return `<span data-w-e-type=\"emoji\" class='emoji'>${data.emoji}</span>`;\n  },\n};\n\n/**\n * html字符串解析为编辑器节点\n *\n * 后台数据转前台数据\n */\nconst parseHtmlConf = {\n  selector: 'span[data-w-e-type=\"emoji\"]',\n  parseElemHtml: (elem: DOMElement): EmojiElement => {\n    const data: IData = {\n      emoji: elem.innerHTML,\n    };\n    return {\n      data,\n      type: 'emoji',\n      children: [{ text: '' }],\n    };\n  },\n};\n\n/**\n * 表情菜单项\n *\n * @export\n * @class EmojiButtonMenu\n * @implements {IButtonMenu}\n */\nclass EmojiButtonMenu implements IButtonMenu {\n  /**\n   * 标题\n   *\n   * @memberof EmojiButtonMenu\n   */\n  readonly title = `表情`;\n\n  /**\n   * 菜单类型\n   *\n   * @memberof EmojiButtonMenu\n   */\n  readonly tag = 'button';\n\n  /**\n   * 菜单图标\n   *\n   * @memberof EmojiButtonMenu\n   */\n  readonly iconSvg = `<svg viewBox='0 0 1040 1024' version='1.1' xmlns='http://www.w3.org/2000/svg' p-id='1490' width='1em' height='1em' stroke='var(--w-e-toolbar-color)' > <path stroke-width='38' d='M512.075261 1024A511.774217 511.774217 0 1 1 730.482434 48.769072a37.630457 37.630457 0 1 1-32.061149 68.035867 436.513303 436.513303 0 1 0 250.468323 395.270322 37.630457 37.630457 0 0 1 75.260914 0 512.526826 512.526826 0 0 1-512.075261 511.924739z' p-id='1491' ></path> <path stroke-width='38' d='M333.857416 344.0929a57.348817 57.348817 0 1 0 57.348817 57.348817 57.499339 57.499339 0 0 0-57.348817-57.348817zM686.53006 344.0929a57.348817 57.348817 0 1 0 57.348817 57.348817 57.348817 57.348817 0 0 0-57.348817-57.348817zM515.236219 783.165074c-162.864619 0-262.359547-141.942084-262.359547-219.159782a30.104366 30.104366 0 0 1 60.208731 0c0 48.618551 76.314567 158.951051 202.150816 158.951051s193.571072-134.114949 193.571072-158.951051a30.104366 30.104366 0 0 1 60.208731 0c0 54.488902-90.012054 219.159782-253.779803 219.159782zM1009.549904 207.720123h-67.132735V139.985301a30.104366 30.104366 0 1 0-60.208732 0v67.734822h-67.734822a30.104366 30.104366 0 0 0-30.104366 30.104366 30.104366 30.104366 0 0 0 30.104366 30.104366h67.734822v67.734823a30.104366 30.104366 0 0 0 60.208732 0v-67.734823h67.734823a30.104366 30.104366 0 0 0 30.104365-30.104366 30.104366 30.104366 0 0 0-30.706453-30.104366z' p-id='1492' ></path> </svg>`;\n\n  /**\n   * Creates an instance of EmojiButtonMenu.\n   * @memberof EmojiButtonMenu\n   */\n  constructor() {}\n\n  /**\n   * 菜单是否需要激活（如选中加粗文本，“加粗”菜单会激活），用不到则返回 false\n   *\n   * @return {*}  {boolean}\n   * @memberof EmojiButtonMenu\n   */\n  isActive(): boolean {\n    return false;\n  }\n\n  /**\n   * 获取菜单执行时的 value ，用不到则返回空 字符串或 false\n   *\n   * @return {*}  {(string | boolean)}\n   * @memberof EmojiButtonMenu\n   */\n  getValue(): string | boolean {\n    return false;\n  }\n\n  /**\n   * 菜单是否需要禁用（如选中 H1 ，“引用”菜单被禁用），用不到则返回 false\n   *\n   * @return {*}  {boolean}\n   * @memberof EmojiButtonMenu\n   */\n  isDisabled(): boolean {\n    return false;\n  }\n\n  /**\n   * 点击菜单时触发的函数\n   *\n   * @param {IDomEditor} editor\n   * @memberof EmojiButtonMenu\n   */\n  exec(editor: IDomEditor): void {\n    editor.emit('openEmojiSelect');\n  }\n}\n\n/**\n * 表情菜单\n */\nconst EmojiMenu = {\n  key: 'emoji',\n  factory(): EmojiButtonMenu {\n    return new EmojiButtonMenu();\n  },\n};\n\n/**\n * 表情模块\n * - 表情节点定义\n * - 表情菜单\n */\nexport const EmojiModule: Partial<IModuleConf> = {\n  renderElems: [renderElemConf],\n  elemsToHtml: [elemToHtmlConf],\n  parseElemsHtml: [parseHtmlConf],\n  menus: [EmojiMenu],\n};\n\nexport default EmojiModule;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  IModal,\n  IModalData,\n  IOverlayPopoverContainer,\n  ScriptFactory,\n} from '@ibiz-template/runtime';\nimport { h } from 'vue';\nimport { Boot, DomEditor, IDomEditor } from '@wangeditor/editor';\nimport { NOOP, listenJSEvent } from '@ibiz-template/core';\nimport emojiModule from './emoji-node-module';\nimport { Emoji } from '../component';\n\n/**\n * 用户列表适配器\n *\n * @export\n * @class EmojiController\n * @extends {EditorController}\n */\nexport class EmojiController {\n  /**\n   * 编辑器示例\n   *\n   * @type {IDomEditor}\n   * @memberof EmojiController\n   */\n  public editor!: IDomEditor;\n\n  /**\n   * 气泡容器\n   *\n   * @type {IOverlayPopoverContainer}\n   * @memberof EmojiController\n   */\n  public overlay: IOverlayPopoverContainer | null = null;\n\n  /**\n   * 预定义阻止捕获事件code\n   *\n   * @type {number[]}\n   * @memberof EmojiController\n   */\n  public presetPreventEvents: number[] = [13, 38, 40];\n\n  /**\n   * 预定义阻止冒泡事件code\n   *\n   * @type {number[]}\n   * @memberof EmojiController\n   */\n  public presetPreventPropEvents: number[] = [27];\n\n  /**\n   * 删除回调\n   *\n   * @type {NOOP}\n   * @memberof EmojiController\n   */\n  public cleanup = NOOP;\n\n  /**\n   * 声明' :'插件\n   *\n   * @template T\n   * @param {T} editor\n   * @return {*}\n   * @memberof EmojiController\n   */\n  public emojiPlugin<T extends IDomEditor>(editor: T): IDomEditor {\n    const { isInline, isVoid } = editor;\n\n    /**\n     * 根据节点类型定义是否为行内元素\n     * @param elem\n     * @returns\n     */\n    editor.isInline = elem => {\n      const type = DomEditor.getNodeType(elem);\n      if (type === 'emoji') {\n        return true;\n      }\n      return isInline(elem);\n    };\n\n    /**\n     * 根据节点类型定义是否为 void 节点\n     * @param elem\n     * @returns\n     */\n    editor.isVoid = elem => {\n      const type = DomEditor.getNodeType(elem);\n      if (type === 'emoji') {\n        return true;\n      }\n      return isVoid(elem);\n    };\n\n    return editor;\n  }\n\n  /**\n   * Creates an instance of EmojiController.\n   * @param {IData} option\n   * @memberof EmojiController\n   */\n  constructor() {\n    this.registerNode();\n  }\n\n  public registerNode(): void {\n    if (!(window as IData).emojiIsRegiter) {\n      Boot.registerModule(emojiModule);\n      (window as IData).emojiIsRegiter = true;\n    }\n    Boot.registerPlugin(this.emojiPlugin.bind(this) as any);\n  }\n\n  /**\n   * 初始化\n   *\n   * @param {IDomEditor} editor\n   * @memberof EmojiController\n   */\n  public async init(editor: IDomEditor): Promise<void> {\n    this.editor = editor;\n    this.listenEvent();\n  }\n\n  /**\n   * 监听事件\n   *\n   * @private\n   * @memberof EmojiController\n   */\n  private listenEvent() {\n    const container = this.editor.getEditableContainer();\n    this.editor.on('openEmojiSelect', () => this.openEmojiSelect());\n    this.cleanup = listenJSEvent(container, 'keydown', event => {\n      if (this.overlay && this.presetPreventEvents.includes(event.keyCode)) {\n        event.preventDefault();\n      }\n      // 监听esc按键，销毁弹框\n      if (\n        this.overlay &&\n        this.presetPreventPropEvents.includes(event.keyCode)\n      ) {\n        event.stopPropagation();\n        this.overlay?.dismiss();\n      }\n    });\n  }\n\n  /**\n   * 打开表情选择\n   *\n   * @memberof EmojiController\n   */\n  private async openEmojiSelect(): Promise<void> {\n    const domSelection = document.getSelection()!;\n    const { focusNode } = domSelection;\n    if (focusNode) {\n      this.overlay = ibiz.overlay.createPopover(\n        (modal: IModal) => {\n          return h(Emoji, {\n            controller: this,\n            modal,\n          });\n        },\n        undefined,\n        {\n          width: 'auto',\n          noArrow: true,\n          autoClose: true,\n          placement: 'bottom-start',\n        },\n      );\n      await this.overlay.present(focusNode.parentNode as HTMLElement);\n      this.overlay.onWillDismiss().then(result => {\n        const _result = result as IModalData;\n        const item = _result.data?.[0];\n        if (_result.ok && item) {\n          this.addEmojiNode(item);\n        }\n        this.overlay = null;\n      });\n    }\n  }\n\n  /**\n   * 添加表情\n   *\n   * @param {string} data\n   * @memberof EmojiController\n   */\n  private addEmojiNode(data: IData): void {\n    const emojiNode = {\n      data,\n      type: 'emoji',\n      children: [{ text: '' }],\n    };\n    this.editor.restoreSelection();\n    this.editor.insertNode(emojiNode);\n    this.editor.move(1);\n  }\n\n  /**\n   * 解析emoji节点\n   *\n   * @param {string} value\n   * @return {*}\n   * @memberof EmojiController\n   */\n  public parseNode(value: string): string {\n    return ScriptFactory.execScriptFn(\n      { value, controller: this },\n      `value.replaceAll(/\\\\{\\\\\"\\\\emoji\\\\\":\\\\\"(.+?)\\\\\"\\\\}/g,(x, emoji) => {return '<span data-w-e-type=\"emoji\" class=\"emoji\">'+emoji+'</span>'})`,\n      {\n        singleRowReturn: true,\n        isAsync: false,\n      },\n    ) as string;\n  }\n\n  public onDestroyed(): void {\n    if (this.cleanup !== NOOP) {\n      this.cleanup();\n    }\n    if (this.overlay) {\n      this.overlay.dismiss();\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable default-case */\n/* eslint-disable no-case-declarations */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { AttachmentsController } from '../attachments';\nimport { CodeSnippetController } from '../code-snippet';\nimport { INodeController } from '../interface/node-interface';\nimport { MarkerController } from '../marker';\nimport { MenTionController } from '../mention';\nimport { PageController } from '../page';\nimport { EmojiController } from '../emoji';\n\nexport class CustomNodeFactory {\n  /**\n   * 自定义节点\n   *\n   * @static\n   * @type {IData}\n   * @memberof CustomNodeFactory\n   */\n  public static customNodeMap: Map<string, INodeController> = new Map();\n\n  /**\n   * 预置注册表\n   *\n   * @type {Map<string, any>}\n   * @memberof CustomNodeFactory\n   */\n  public static registerMap: Map<string, any> = new Map();\n\n  /**\n   * 预置注册节点\n   *\n   * @static\n   * @memberof CustomNodeFactory\n   */\n  public static presetNodes = [\n    'mention',\n    'marker',\n    'attachments',\n    'codesnippet',\n    'page',\n    'emoji',\n  ];\n\n  /**\n   * 初始化\n   *\n   * @static\n   * @memberof CustomNodeFactory\n   */\n  public static init(uuid: string) {\n    this.registerMap.set('mention', MenTionController);\n    this.registerMap.set('marker', MarkerController);\n    this.registerMap.set('attachments', AttachmentsController);\n    this.registerMap.set('codesnippet', CodeSnippetController);\n    this.registerMap.set('page', PageController);\n    this.registerMap.set('emoji', EmojiController);\n    this.presetNodes.forEach(type => {\n      this.registerPlugin({\n        type,\n        id: `${type}${uuid}`,\n      });\n    });\n  }\n\n  /**\n   * 注册节点适配器\n   *\n   * @public\n   * @memberof CustomNodeFactory\n   */\n  public static registerPlugin(data: IData) {\n    const { type, id } = data;\n    if (this.customNodeMap.has(id)) {\n      return this.customNodeMap.get(id)!;\n    }\n    const NewController = this.registerMap.get(type);\n    if (NewController) {\n      const controller = new NewController();\n      this.customNodeMap.set(id, controller);\n      return controller;\n    }\n  }\n\n  /**\n   * 根据uuid获取注册插件\n   *\n   * @static\n   * @param {string} id\n   * @return {*}\n   * @memberof CustomNodeFactory\n   */\n  public static getPluginsById(id: string) {\n    const controllers: INodeController[] = [];\n    this.presetNodes.forEach(type => {\n      if (this.customNodeMap.has(`${type}${id}`)) {\n        controllers.push(this.customNodeMap.get(`${type}${id}`)!);\n      }\n    });\n    return controllers;\n  }\n\n  /**\n   * 卸载节点适配器\n   *\n   * @public\n   * @memberof CustomNodeFactory\n   */\n  public static unregisterPlugin(data: IData) {\n    const { id } = data;\n    if (this.customNodeMap.has(id)) {\n      this.customNodeMap.delete(id)!;\n    }\n  }\n\n  /**\n   * 初始化\n   *\n   * @static\n   * @memberof CustomNodeFactory\n   */\n  public static destroy(uuid: string) {\n    this.presetNodes.forEach(type => {\n      this.unregisterPlugin({\n        id: `${type}${uuid}`,\n      });\n    });\n    this.registerMap.delete('mention');\n    this.registerMap.delete('marker');\n    this.registerMap.delete('attachments');\n    this.registerMap.delete('codesnippet');\n    this.registerMap.delete('page');\n    this.registerMap.delete('emoji');\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport class MentionElem extends HTMLElement {\n  // 监听的 attr\n  static get observedAttributes() {\n    return ['data-value'];\n  }\n\n  attributeChangedCallback(tag: string, oldValue: string, newValue: string) {\n    if (tag === 'data-value') {\n      if (newValue && oldValue === newValue) return;\n      const data = JSON.parse(newValue);\n\n      const shadow = this.attachShadow({ mode: 'open' });\n      const document = shadow.ownerDocument;\n\n      if (data.icon) {\n        const svg = document.createElement('span');\n        svg.part.add('svg');\n        svg.innerHTML = data.icon;\n        shadow.appendChild(svg);\n      }\n\n      if (data.identifier) {\n        const identifier = document.createElement('span');\n        identifier.part.add('identifier');\n        identifier.innerHTML = data.identifier;\n        shadow.appendChild(identifier);\n      }\n\n      if (data.name) {\n        const name = document.createElement('span');\n        name.part.add('name');\n        name.innerHTML = data.name;\n        shadow.appendChild(name);\n      }\n\n      const style = document.createElement('style');\n      style.innerHTML = `\n      svg {\n        height: 1em;\n        width: 1em;\n      }\n    `;\n      shadow.appendChild(style);\n    }\n  }\n}\n","import { HtmlUtil } from '../utils';\n/**\n * 人员编辑标记元素创建\n */\nexport class PersonnelMarkerElem extends HTMLElement {\n  // 监听的 attr\n  static get observedAttributes(): string[] {\n    return ['data-value'];\n  }\n\n  attributeChangedCallback(\n    tag: string,\n    oldValue: string,\n    newValue: string,\n  ): void {\n    if (tag === 'data-value') {\n      if (newValue && oldValue === newValue) return;\n      const data = JSON.parse(newValue);\n\n      const shadow = this.attachShadow({ mode: 'open' });\n      const document = shadow.ownerDocument;\n\n      const box = document.createElement('div');\n      box.part.add('box');\n      box.classList.add('personnel-marker_box');\n      let background = '';\n      if (data.name) {\n        background = HtmlUtil.stringToHexColor(data.name);\n        const name = document.createElement('div');\n        name.part.add('name');\n        name.classList.add('personnel-marker_name');\n        name.style.backgroundColor = background;\n        name.innerHTML = data.name;\n        box.appendChild(name);\n      }\n\n      const line = document.createElement('div');\n      line.part.add('line');\n      line.classList.add('personnel-marker_line');\n      line.style.backgroundColor = background;\n\n      box.appendChild(line);\n      shadow.appendChild(box);\n      const style = document.createElement('style');\n      box.appendChild(style);\n    }\n  }\n}\n","/**\n * 表情元素定义\n */\nexport class EmojiElem extends HTMLElement {\n  // 监听的 attr\n  static get observedAttributes(): string[] {\n    return ['data-value'];\n  }\n\n  attributeChangedCallback(\n    tag: string,\n    oldValue: string,\n    newValue: string,\n  ): void {\n    if (tag === 'data-value') {\n      if (newValue && oldValue === newValue) return;\n      const shadow = this.attachShadow({ mode: 'open' });\n      const document = shadow.ownerDocument;\n      const box = document.createElement('span');\n      box.innerHTML = newValue;\n      box.part.add('box');\n      box.classList.add('emoji-elem_box');\n      shadow.appendChild(box);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable no-empty-function */\n/* eslint-disable no-useless-constructor */\nimport { debounce } from '@ibiz-template/core';\nimport { IDomEditor, IButtonMenu } from '@wangeditor/editor';\n\nexport class PaintFormatMenu implements IButtonMenu {\n  readonly title = '格式刷';\n\n  readonly tag = 'button';\n\n  public fragment: IData[] = [];\n\n  public format: IData = {};\n\n  public editor: IDomEditor | null = null;\n\n  public excting: boolean = false;\n\n  readonly iconSvg =\n    '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fit=\"\" height=\"1em\" width=\"1em\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\"><g id=\"aqseditor/paintformat\" stroke-width=\"1\" fill-rule=\"evenodd\"><path d=\"M3 5.24h10V2H3v3.24zM13.299 1H2.701A.701.701 0 0 0 2 1.701v3.838c0 .387.314.701.701.701h6.236L7.621 7.438h-.002v2.233h-.768v5.184L9.404 13.1V9.671h-.585V7.97l1.9-1.73h2.58A.701.701 0 0 0 14 5.539V1.701A.701.701 0 0 0 13.299 1z\" id=\"aqsFill-1\"></path></g></svg>';\n\n  constructor() {}\n\n  // 菜单是否需要激活（如选中加粗文本，“加粗”菜单会激活），用不到则返回 false\n  isActive(editor: IDomEditor): boolean {\n    if (Object.keys(this.format).length > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  // 获取菜单执行时的 value ，用不到则返回空 字符串或 false\n  getValue(editor: IDomEditor): string | boolean {\n    return '';\n  }\n\n  // 菜单是否需要禁用（如选中 H1 ，“引用”菜单被禁用），用不到则返回 false\n  isDisabled(editor: IDomEditor): boolean {\n    return false;\n  }\n\n  calcFormat(fragment: IData[]) {\n    if (fragment.length > 0) {\n      const { children } = fragment[0];\n      children.forEach((item: IData) => {\n        Object.assign(this.format, item);\n      });\n    }\n  }\n\n  clearFormat() {\n    this.format = {};\n    const container = this.editor!.getEditableContainer();\n    if (container) {\n      container.classList.remove('is-paint-format');\n    }\n    const button = document.querySelector(\n      \"button[data-menu-key='paintformat']\",\n    );\n    if (button) {\n      button.classList.remove('active');\n    }\n  }\n\n  setPaintFormat = () => {\n    if (!this.editor) {\n      return;\n    }\n    const select = this.editor.getSelectionText();\n    if (!select) {\n      return;\n    }\n\n    if (Object.keys(this.format).length > 0) {\n      const node = { ...this.format, text: select };\n      this.editor.insertNode(node);\n      if (!this.excting) {\n        this.clearFormat();\n      }\n    }\n  };\n\n  onPaintFormat = debounce(this.setPaintFormat, 500, false);\n\n  throttle(\n    fn: (...args: any[]) => void | Promise<void>,\n    wait: number,\n  ): (...args: any[]) => void {\n    let timer: unknown = null;\n    return function (this: any, ...args: any[]): void {\n      if (!timer) {\n        timer = setTimeout(() => {\n          fn.apply(this, args);\n          timer = null;\n          this.excting = true;\n        }, wait);\n      }\n    };\n  }\n\n  handle(editor: IDomEditor) {\n    // 再次点击取消格式刷\n    if (this.excting) {\n      this.clearFormat();\n      this.excting = false;\n      return;\n    }\n    const fragment = editor.getFragment();\n    this.calcFormat(fragment);\n    this.editor = editor;\n    const container = this.editor.getEditableContainer();\n    if (container) {\n      container.classList.add('is-paint-format');\n    }\n    editor.deselect();\n    editor.on('change', this.onPaintFormat);\n    editor.on('clickOutside', () => {\n      this.clearFormat();\n      this.excting = false;\n    });\n  }\n\n  throttleHandle = this.throttle(this.handle, 300);\n\n  // 点击菜单时触发的函数\n  exec(editor: IDomEditor) {\n    this.throttleHandle(editor);\n  }\n}\n\nexport const paintFormatMenu = {\n  key: 'paintformat',\n  factory() {\n    return new PaintFormatMenu();\n  },\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  DomEditor,\n  IDomEditor,\n  IModuleConf,\n  SlateElement,\n} from '@wangeditor/editor';\nimport { DOMElement } from '@wangeditor/editor/dist/editor/src/utils/dom';\nimport { h } from 'snabbdom';\n\ntype EmptyText = {\n  text: '';\n};\nexport type PersonnelMarkerElement = {\n  type: 'personnel-marker';\n  data: IData;\n  children: EmptyText[]; // void 元素必须有一个空 text\n};\n\nfunction PersonnelMarkerToHtml(elem: SlateElement): string {\n  const { data = {} } = elem as PersonnelMarkerElement;\n  return `<span class='personnel-marker'>${data?.name}</span>`;\n}\n\nconst elemToHtmlConf = {\n  type: 'personnel-marker',\n  elemToHtml: PersonnelMarkerToHtml,\n};\n\nfunction parseHtml(elem: DOMElement): SlateElement {\n  const datastr = decodeURIComponent(elem.getAttribute('data-value') || '');\n  const data: IData = JSON.parse(datastr);\n  return {\n    type: 'personnel-marker',\n    data,\n    children: [{ text: '' }],\n  } as PersonnelMarkerElement;\n}\n\nconst parseHtmlConf = {\n  selector: 'span[data-w-e-type=\"personnel-marker\"]',\n  parseElemHtml: parseHtml,\n};\n\nfunction renderPersonnelMarker(elem: SlateElement): any {\n  const { data = {} } = elem as PersonnelMarkerElement;\n\n  const tempData = {\n    name: `${data.name}`,\n    id: data.id,\n  };\n\n  // 构建 vnode\n  const vnode = h(\n    'personnel-marker-elem',\n    {\n      dataset: { value: JSON.stringify(tempData) },\n      props: {\n        contentEditable: false, // 不可编辑\n      },\n    },\n    [],\n  );\n\n  return vnode;\n}\n\nconst renderElemConf: any = {\n  type: 'personnel-marker',\n  renderElem: renderPersonnelMarker,\n};\n\nexport const personnelMarkerModule: Partial<IModuleConf> = {\n  renderElems: [renderElemConf],\n  elemsToHtml: [elemToHtmlConf],\n  parseElemsHtml: [parseHtmlConf],\n};\n\nexport const personnelMarkerPlugin = <T extends IDomEditor>(editor: T): any => {\n  const { isInline, isVoid, deleteBackward } = editor;\n\n  // 重写 deleteBackward\n  editor.deleteBackward = unit => {\n    const { selection } = editor;\n    // offset为0表示开始删除前一个editor\n    if (selection && selection.focus.offset === 0) {\n      const [p1, p2] = selection.focus.path;\n      let x = p2;\n      let y = p1;\n      let isBr = false;\n      // 如果p2为0 p1要减1\n      if (p2 === 0 && p1 !== 0) {\n        y = y - 1;\n        isBr = true;\n      } else if (p2 > 0) {\n        x = x - 1;\n      }\n\n      const node = (editor.children[y] as IData).children[\n        isBr ? (editor.children[y] as IData).children.length - 1 : x\n      ];\n\n      if (node?.type === 'personnel-marker') {\n        editor.moveReverse(1);\n      }\n    }\n    deleteBackward(unit);\n  };\n\n  // 重写 isInline\n  editor.isInline = elem => {\n    const type = DomEditor.getNodeType(elem);\n\n    if (type === 'personnel-marker') {\n      return true;\n    }\n\n    return isInline(elem);\n  };\n\n  // 重写 isVoid\n  editor.isVoid = elem => {\n    const type = DomEditor.getNodeType(elem);\n    if (type === 'personnel-marker') {\n      return false;\n    }\n\n    return isVoid(elem);\n  };\n\n  return editor;\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { IButtonMenu, IDomEditor } from '@wangeditor/editor';\n\nexport class AIMenu implements IButtonMenu {\n  // TS 语法\n\n  title: string = 'AI询问';\n\n  iconSvg: string =\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"> <text x=\"0\" y=\"13\" font-size=\"16\" fill=\"black\">AI</text></svg>';\n\n  tag: string = 'button';\n\n  // 菜单是否需要激活（如选中加粗文本，“加粗”菜单会激活），用不到则返回 false\n  isActive(editor: IDomEditor): boolean {\n    // TS 语法\n    return false;\n  }\n\n  // 获取菜单执行时的 value ，用不到则返回空 字符串或 false\n  getValue(editor: IDomEditor): string | boolean {\n    // TS 语法\n    return 'aichart';\n  }\n\n  // 菜单是否需要禁用（如选中 H1 ，“引用”菜单被禁用），用不到则返回 false\n  isDisabled(editor: IDomEditor): boolean {\n    // TS 语法\n    return false;\n  }\n\n  // 点击菜单时触发的函数\n  exec(editor: IDomEditor, value: string | boolean): void {\n    // TS 语法\n    // Modal menu ，这个函数不用写，空着即可\n    editor.emit('aiClick');\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  DomEditor,\n  IButtonMenu,\n  IDomEditor,\n  IModuleConf,\n  SlateElement,\n} from '@wangeditor/editor';\n\ntype LinkElement = {\n  type: 'link';\n  url: string;\n  target?: string;\n  children: IData[];\n};\n\nfunction linkToHtml(elem: SlateElement): string {\n  const { url, children } = elem as unknown as LinkElement;\n  let target = '_blank';\n  if (url.startsWith('./#/')) {\n    target = '_self';\n  }\n  return `<a href=\"${url}\" target=\"${target}\">${children[0].text}</a>`;\n}\n\nconst elemToHtmlConf = {\n  type: 'link',\n  elemToHtml: linkToHtml,\n};\n\nclass ViewLink implements IButtonMenu {\n  readonly title = '查看连接';\n\n  readonly iconSvg =\n    '<svg viewBox=\"0 0 1024 1024\"><path d=\"M924.402464 1023.068211H0.679665V99.345412h461.861399v98.909208H99.596867v725.896389h725.896389V561.206811h98.909208z\" p-id=\"10909\"></path><path d=\"M930.805104 22.977336l69.965436 69.965436-453.492405 453.492404-69.965435-69.901489z\" p-id=\"10910\"></path><path d=\"M1022.464381 304.030081h-98.917201V99.345412H709.230573V0.428211h313.233808z\"></path></svg>';\n\n  readonly tag = 'button';\n\n  private getSelectedLinkElem(editor: IDomEditor): LinkElement | null {\n    const node = DomEditor.getSelectedNodeByType(editor, 'link');\n    if (node == null) return null;\n    return node as unknown as LinkElement;\n  }\n\n  getValue(editor: IDomEditor): string | boolean {\n    const linkElem = this.getSelectedLinkElem(editor);\n    if (linkElem) {\n      return linkElem.url || '';\n    }\n    return '';\n  }\n\n  isActive(): boolean {\n    // 无需 active\n    return false;\n  }\n\n  isDisabled(editor: IDomEditor): boolean {\n    if (editor.selection == null) return true;\n\n    const linkElem = this.getSelectedLinkElem(editor);\n    if (linkElem == null) {\n      // 选区未处于 link node ，则禁用\n      return true;\n    }\n    return false;\n  }\n\n  exec(editor: IDomEditor, value: string | boolean): void {\n    if (this.isDisabled(editor)) return;\n    if (!value || typeof value !== 'string') {\n      throw new Error(`打开链接失败, 路径为 '${value}'`);\n    }\n\n    if (value.toString().startsWith('./#/')) {\n      window.open(`${window.location.pathname}${value.slice(1)}`, '_self');\n    } else {\n      // 查看链接\n      window.open(value, '_blank');\n    }\n  }\n}\n\nconst CustomViewLink = {\n  key: 'customViewLink',\n  factory() {\n    return new ViewLink();\n  },\n};\n\nconst CustomViewLinkModule: Partial<IModuleConf> = {\n  menus: [CustomViewLink],\n  elemsToHtml: [elemToHtmlConf],\n};\n\nexport default CustomViewLinkModule;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-fallthrough */\n/* eslint-disable default-case */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport {\n  downloadFileFromBlob,\n  IMarkOpenData,\n  RuntimeError,\n} from '@ibiz-template/core';\nimport {\n  CodeListItem,\n  ControllerEvent,\n  EditorController,\n  EventBase,\n  getDeACMode,\n  IAppDEService,\n} from '@ibiz-template/runtime';\nimport { IAppDEACMode, IHtml } from '@ibiz/model-core';\nimport { Boot, IDomEditor, createEditor, SlateRange } from '@wangeditor/editor';\nimport { VNode } from 'snabbdom';\nimport { nextTick, Ref, ref } from 'vue';\nimport { createUUID } from 'qx-util';\nimport { toNumber } from 'lodash-es';\nimport { CustomNodeFactory } from './factory/custom-node-factory';\nimport { commentEvent } from './html-comment.event';\nimport { EmojiElem, MentionElem, PersonnelMarkerElem } from './custom-elem';\nimport { paintFormatMenu } from './paint-format/paint-format-menu';\nimport {\n  personnelMarkerModule,\n  personnelMarkerPlugin,\n} from './personnel-marker/personnel-marker-node-module';\nimport { ICursor, IPersMarkData, Message } from './interface';\nimport { HtmlUtil, renderStyle, SlateUtil } from './utils';\nimport { AIMenu } from './ai/ai-modules';\nimport CustomViewLinkModule from './link/link-node-module';\n\n/**\n * html框编辑器控制器\n *\n * @export\n * @class HtmlCommentController\n * @extends {EditorController}\n */\nexport class HtmlCommentController extends EditorController<IHtml> {\n  /**\n   * 用户头像数据\n   *\n   * @type {string}\n   * @memberof HtmlCommentController\n   */\n  public userAvatar: string = '';\n\n  /**\n   * 上传参数\n   */\n  public uploadParams?: IParams;\n\n  /**\n   * 下载参数\n   */\n  public exportParams?: IParams;\n\n  /**\n   * 最小高度\n   *\n   * @type {number}\n   * @memberof HtmlCommentController\n   */\n  public minHeight: number = 48;\n\n  /**\n   * 最大高度\n   *\n   * @type {number}\n   * @memberof HtmlCommentController\n   */\n  public maxHeight: number = 315;\n\n  /**\n   * 是否折叠\n   *\n   * @type {Ref<boolean>}\n   * @memberof HtmlCommentController\n   */\n  public collapsed: Ref<boolean> = ref(true);\n\n  /**\n   * 是否隐藏\n   *\n   * @type {Ref<boolean>}\n   * @memberof HtmlCommentController\n   */\n  public hidden: Ref<boolean> = ref(false);\n\n  /**\n   * 回复\n   *\n   * @type {string}\n   * @memberof HtmlCommentController\n   */\n  public reply: Ref<string> = ref('');\n\n  /**\n   * 回复脚本\n   *\n   * @type {string}\n   * @memberof HtmlCommentController\n   */\n  public replyScript: string = '';\n\n  /**\n   * 编辑器模式\n   *\n   * @type {('comment' | 'default')}\n   * @memberof HtmlCommentController\n   */\n  public mode: 'comment' | 'default' = 'comment';\n\n  /**\n   * 插入工具栏项\n   *\n   * @type {IData[]}\n   * @memberof HtmlCommentController\n   */\n  public insertKeys: IData[] = [];\n\n  /**\n   * 绘制模式\n   *\n   * @type {IData[]}\n   * @memberof HtmlCommentController\n   */\n  public renderMode: 'HTML' | 'JSON' = 'HTML';\n\n  /**\n   * 保存间隔\n   *\n   * @type {IData[]}\n   * @memberof HtmlCommentController\n   */\n  public saveInterval: number = 3000;\n\n  /**\n   * 抛值模式\n   *\n   * @type {IData[]}\n   * @memberof HtmlCommentController\n   */\n  public emitMode: 'BUTTON' | 'AUTOMATIC' = 'BUTTON';\n\n  /**\n   * 唯一标识\n   *\n   * @type {string}\n   * @memberof HtmlCommentController\n   */\n  public uuid: string = createUUID();\n\n  /**\n   * 实时编辑（协同编辑）\n   */\n  public enableRealtime: boolean = false;\n\n  /**\n   * 编辑器实例\n   */\n  public editor!: IDomEditor;\n\n  /**\n   * 是否在处理中\n   */\n  public processing = ref(false);\n\n  /**\n   * 用户标记数据map\n   */\n  private persMarkMap: Map<string, IPersMarkData> = new Map();\n\n  /**\n   * 消息信息\n   */\n  private msg!: Message;\n\n  /**\n   * 是否已监听\n   */\n  private hasSubscribe: boolean = false;\n\n  /**\n   * 应用实体服务\n   *\n   * @type {IAppDEService}\n   * @memberof HtmlCommentController\n   */\n  deService?: IAppDEService;\n\n  /**\n   * 自填模式\n   *\n   * @author chitanda\n   * @date 2023-10-12 10:10:52\n   * @type {IAppDEACMode}\n   */\n  deACMode?: IAppDEACMode;\n\n  /**\n   * AI 聊天自填模式\n   *\n   * @author chitanda\n   * @date 2023-10-12 10:10:37\n   * @type {boolean}\n   */\n  chatCompletion: boolean = false;\n\n  evt: ControllerEvent<commentEvent> = new ControllerEvent<commentEvent>(\n    this.getEventArgs.bind(this),\n  );\n\n  protected getEventArgs(): Omit<EventBase, 'eventName'> {\n    return {\n      context: this.context,\n      params: this.params,\n      data: [],\n      eventArg: '',\n      targetName: this.model.name!,\n      view: this.getView(),\n    };\n  }\n\n  protected async onInit(): Promise<void> {\n    await super.onInit();\n    await this.getCurrentUserAvatar();\n\n    const { model } = this;\n    if (model.appDEACModeId) {\n      this.deACMode = await getDeACMode(\n        model.appDEACModeId,\n        model.appDataEntityId!,\n        this.context.srfappid,\n      );\n      if (this.deACMode) {\n        if (this.deACMode.actype === 'CHATCOMPLETION') {\n          this.deService = await ibiz.hub\n            .getApp(model.appId)\n            .deService.getService(this.context, model.appDataEntityId!);\n          this.chatCompletion = true;\n        }\n      }\n    }\n\n    this.registerCustomElem();\n    if (this.editorParams) {\n      const {\n        uploadParams,\n        exportParams,\n        MINHEIGHT,\n        MAXHEIGHT,\n        REPLYSCRIPT,\n        MODE,\n        INSERTKEYS,\n        RENDERMODE,\n        SAVEINTERVAL,\n        EMITMODE,\n        DEFAULTCOLLAPSE,\n        ENABLEREALTIME,\n      } = this.editorParams;\n\n      if (uploadParams) {\n        try {\n          this.uploadParams = JSON.parse(uploadParams);\n        } catch (error) {\n          ibiz.log.error(\n            `编辑器[${ibiz.log.error(\n              error,\n            )}]编辑器参数 uploadParams 非 json 格式`,\n          );\n        }\n      }\n      if (exportParams) {\n        try {\n          this.exportParams = JSON.parse(exportParams);\n        } catch (error) {\n          ibiz.log.error(\n            `编辑器[${ibiz.log.error(\n              error,\n            )}]编辑器参数 exportParams 非 json 格式`,\n          );\n        }\n      }\n      if (MINHEIGHT) {\n        this.minHeight = Number(MINHEIGHT);\n      }\n      if (MAXHEIGHT) {\n        this.maxHeight = Number(MAXHEIGHT);\n      }\n      if (REPLYSCRIPT) {\n        this.replyScript = REPLYSCRIPT;\n      }\n      if (MODE) {\n        this.mode = MODE.toLowerCase();\n      }\n      if (INSERTKEYS) {\n        this.insertKeys = JSON.parse(INSERTKEYS);\n      }\n      if (RENDERMODE) {\n        this.renderMode = RENDERMODE;\n      }\n      if (SAVEINTERVAL) {\n        this.saveInterval = toNumber(SAVEINTERVAL);\n      }\n      if (EMITMODE) {\n        this.emitMode = EMITMODE;\n      }\n      if (DEFAULTCOLLAPSE) {\n        this.collapsed.value =\n          !Object.is(DEFAULTCOLLAPSE, 'TRUE') &&\n          !Object.is(DEFAULTCOLLAPSE, 'true');\n      }\n      if (ENABLEREALTIME) {\n        this.enableRealtime =\n          Object.is(ENABLEREALTIME, 'TRUE') ||\n          Object.is(ENABLEREALTIME, 'true');\n      }\n    }\n\n    CustomNodeFactory.init(this.uuid);\n    this.evt.on('onChange', () => {\n      // 当前执行界面域\n      if ((this.parent as any).form) {\n        return;\n      }\n      const uiDomain = ibiz.uiDomainManager.get(this.context.srfsessionid);\n      if (uiDomain) {\n        uiDomain.dataChange();\n      }\n    });\n    this.initMarkOpenData();\n    this.listenViewDestroyed();\n  }\n\n  /**\n   * 注册自定义元素\n   *\n   * @private\n   * @memberof HtmlCommentController\n   */\n  private registerCustomElem() {\n    if (!window.customElements.get('mention-elem')) {\n      window.customElements.define('mention-elem', MentionElem);\n    }\n    if (!window.customElements.get('personnel-marker-elem')) {\n      window.customElements.define(\n        'personnel-marker-elem',\n        PersonnelMarkerElem,\n      );\n    }\n    if (!window.customElements.get('emoji-elem')) {\n      window.customElements.define('emoji-elem', EmojiElem);\n    }\n    if (!(window as IData).paintFormatIsRegiter) {\n      Boot.registerMenu(paintFormatMenu);\n      (window as IData).paintFormatIsRegiter = true;\n    }\n    if (!(window as IData).personnelMarkerIsRegiter) {\n      Boot.registerModule(personnelMarkerModule);\n      (window as IData).personnelMarkerIsRegiter = true;\n    }\n    // 处理自定义样式\n    Boot.registerRenderStyle((node: IData, vnode: VNode) => {\n      return renderStyle(node, vnode);\n    });\n    Boot.registerPlugin(personnelMarkerPlugin);\n\n    if (!(window as IData).aichartRegister) {\n      Boot.registerMenu({\n        key: 'aichart',\n        factory() {\n          return new AIMenu();\n        },\n      });\n      (window as IData).aichartRegister = true;\n    }\n    if (!(window as IData).customLinkIsRegiter) {\n      Boot.registerModule(CustomViewLinkModule);\n      (window as IData).customLinkIsRegiter = true;\n    }\n  }\n\n  /**\n   * 初始化\n   *\n   * @param {IDomEditor} editor\n   * @memberof HtmlCommentController\n   */\n  public onCreated(editor: IDomEditor, data: IData, toolbarConfig: IData) {\n    const controllers = CustomNodeFactory.getPluginsById(this.uuid);\n    controllers.forEach(controller => {\n      controller.init(editor, {\n        model: this.model,\n        data,\n        toolbarConfig,\n        context: this.context,\n        params: this.params,\n        evt: this.evt,\n      });\n    });\n  }\n\n  /**\n   * 处理编辑\n   * @param item\n   */\n  handleEdit(item: IMarkOpenData) {\n    const { data } = item;\n    if (data) {\n      this.processing.value = true;\n      const persMarkData = this.persMarkMap.get(item.username);\n      if (data.type === 'set_selection') {\n        this.drawPersonnelMarker({\n          id: item.username,\n          cursor: data.cursor,\n        });\n      } else if (\n        data.type === 'set_node' &&\n        persMarkData?.cursor.selectionRange\n      ) {\n        // 如果是设置用户的选区样式\n        this.setPersSelectionMark({\n          persMarkData,\n          mark: data.newProperties,\n        });\n      } else {\n        this.editor.apply(data as any);\n      }\n      this.processing.value = false;\n    }\n  }\n\n  /**\n   * 处理查看\n   * @param item\n   */\n  handleView(item: IMarkOpenData) {}\n\n  /**\n   * 处理更新\n   * @param item\n   */\n  handleUpdate(item: IMarkOpenData) {}\n\n  /**\n   * 处理关闭\n   * @param item\n   */\n  handleClose(item: IMarkOpenData) {}\n\n  /**\n   * 标记打开数据回调\n   * @param msg\n   */\n  private markOpenDataCallback(item: IMarkOpenData) {\n    const { action, data } = item;\n    if (this.enableRealtime) {\n      switch (action) {\n        case 'VIEW':\n          this.handleView(item);\n          break;\n        case 'EDIT':\n          this.handleEdit(item);\n          break;\n        case 'UPDATE':\n          this.handleUpdate(item);\n          break;\n        case 'CLOSE':\n          this.handleClose(item);\n          break;\n      }\n    }\n  }\n\n  /**\n   * 初始化MarkOpenData逻辑\n   */\n  private initMarkOpenData() {\n    this.markOpenDataCallback = this.markOpenDataCallback.bind(this);\n    if (this.enableRealtime) {\n      const ctrl: IData | null =\n        (this.parent as IData).form || (this.parent as IData).grid;\n      if (ctrl) {\n        ctrl.evt.on('onLoadSuccess', (event: EventBase) => {\n          const item = event.data[0];\n          this.msg = { deName: item.srfdecodename, srfkey: item.srfkey };\n          ibiz.markOpenData.action(this.msg.deName, this.msg.srfkey, 'VIEW');\n          if (!this.hasSubscribe) {\n            // 监听数据\n            ibiz.markOpenData.subscribe(\n              this.msg.deName,\n              this.msg.srfkey,\n              this.markOpenDataCallback,\n            );\n          }\n        });\n        ctrl.evt.on('onSaveSuccess', () => {\n          if (this.msg.srfkey) {\n            ibiz.markOpenData.action(\n              this.msg.deName,\n              this.msg.srfkey,\n              'UPDATE',\n            );\n          }\n        });\n        ctrl.view.evt.on('onCloseView', () => {\n          if (this.msg.srfkey) {\n            ibiz.markOpenData.action(this.msg.deName, this.msg.srfkey, 'CLOSE');\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * 在线编辑\n   * @param editor\n   * @param item\n   */\n  onLineEditing(editor: IDomEditor) {\n    this.editor = editor;\n    const { apply } = editor;\n    editor.apply = operation => {\n      apply(operation);\n      if (this.enableRealtime && !this.processing.value) {\n        const data = { ...operation };\n        if (operation.type === 'set_selection') {\n          const cursor = this.handleCursor(operation);\n          Object.assign(data, { cursor });\n        }\n        ibiz.markOpenData.send(this.msg.deName, this.msg.srfkey, 'EDIT', data);\n      }\n    };\n  }\n\n  /**\n   * 处理光标信息\n   * @param op\n   * @returns\n   */\n  public handleCursor(op: IData): ICursor {\n    const cursor: ICursor = {};\n    if (op.properties) {\n      cursor.position = {\n        path: op.properties.focus.path,\n        offset: SlateUtil.calcOffsetByPoint(this.editor, op.properties.focus),\n      };\n    }\n    if (op.newProperties) {\n      cursor.newPosition = {\n        path: op.newProperties.focus.path,\n        offset: SlateUtil.calcOffsetByPoint(\n          this.editor,\n          op.newProperties.focus,\n        ),\n      };\n    }\n    const { selection } = this.editor;\n    const isRange =\n      !SlateRange.isRange(op.newProperties) &&\n      !SlateRange.isRange(op.properties);\n    // 如果光标是一个选区\n    if (isRange && selection) {\n      cursor.selectionRange = {\n        anchor: {\n          path: selection.anchor.path,\n          offset: SlateUtil.calcOffsetByPoint(this.editor, selection.anchor),\n        },\n        focus: {\n          path: selection.focus.path,\n          offset: SlateUtil.calcOffsetByPoint(this.editor, selection.focus),\n        },\n      };\n    }\n    return cursor;\n  }\n\n  /**\n   * 组件销毁\n   *\n   * @memberof HtmlCollapseController\n   */\n  public onDestroyed() {\n    const controllers = CustomNodeFactory.getPluginsById(this.uuid);\n    controllers.forEach(controller => {\n      controller.onDestroyed();\n    });\n    CustomNodeFactory.destroy(this.uuid);\n    if (this.enableRealtime) {\n      ibiz.markOpenData.unsubscribe(\n        this.msg.deName,\n        this.msg.srfkey,\n        this.markOpenDataCallback,\n      );\n    }\n  }\n\n  /**\n   * 处理视图销毁\n   *\n   * @memberof HtmlCommentController\n   */\n  public listenViewDestroyed() {\n    const view = this.getView();\n    if (view) {\n      view.evt.on('onDestroyed', () => {\n        this.onDestroyed();\n      });\n    }\n  }\n\n  /**\n   * 解析所有注册节点\n   *\n   * @param {string} value\n   * @return {*}\n   * @memberof HtmlCommentController\n   */\n  public parseNode(value: string) {\n    let result: string = value;\n    const controllers = CustomNodeFactory.getPluginsById(this.uuid);\n    controllers.forEach(controller => {\n      result = controller.parseNode(result);\n    });\n    return result;\n  }\n\n  /**\n   * 设置html\n   *\n   * @param {string} value\n   * @memberof HtmlCommentController\n   */\n  public async setValue(value: string) {\n    this.collapsed.value = false;\n    // 先提前销毁，防止回显异常\n    this.hidden.value = true;\n    await nextTick();\n    this.hidden.value = false;\n    await nextTick();\n    const html = this.parseNode(value);\n    this.evt.emit('setHtml', {\n      eventArg: html,\n    });\n  }\n\n  /**\n   * 设置回复,data: {name: string, content: string}\n   *\n   * @param {IData} data\n   * @memberof HtmlCommentController\n   */\n  public setReply(data: IData) {\n    this.reply.value = HtmlUtil.getEmojiCustomHtml(\n      `${data.name}: ${data.content}`,\n    );\n    this.evt.emit('onSetReply', {\n      eventArg: this.reply.value,\n    });\n  }\n\n  /**\n   * 删除回复\n   *\n   * @memberof HtmlCommentController\n   */\n  public removeReply() {\n    this.reply.value = '';\n    this.evt.emit('onRemoveReply', {\n      eventArg: this.reply.value,\n    });\n  }\n\n  /**\n   * 清空\n   *\n   * @memberof HtmlCommentController\n   */\n  public clear() {\n    this.reply.value = '';\n    this.evt.emit('onRemoveReply', {\n      eventArg: this.reply.value,\n    });\n    this.evt.emit('clear', {\n      eventArg: '',\n    });\n    this.collapsed.value = true;\n  }\n\n  /**\n   * 请求url获取文件流，并用JS触发文件下载\n   *\n   * @author lxm\n   * @date 2022-11-17 14:11:09\n   * @param {string} url\n   * @param {IData} file\n   */\n  fileDownload(file: { url: string; name: string }): void {\n    // 发送get请求\n    ibiz.net\n      .request(file.url, {\n        method: 'get',\n        responseType: 'blob',\n        baseURL: '', // 已经有baseURL了，这里无需再写\n      })\n      .then((response: IData) => {\n        if (response.status !== 200) {\n          throw new RuntimeError('下载文件失败');\n        }\n        // 请求成功，后台返回的是一个文件流\n        if (!response.data) {\n          throw new RuntimeError('文件流数据不存在');\n        } else {\n          // 获取文件名\n          const fileName = file.name;\n          downloadFileFromBlob(response.data, fileName);\n        }\n      });\n  }\n\n  /**\n   * 切换折叠\n   *\n   * @memberof HtmlCommentController\n   */\n  public toggleCollapse(open?: boolean) {\n    this.collapsed.value = !open && !this.collapsed.value;\n  }\n\n  /**\n   * 绘制模式为json时，需要将返回数据的json内容转html\n   *\n   * @author ljx\n   * @date 2024-03-09 15:11:09\n   * @param {string} url\n   * @param {IData} file\n   */\n  public jsonToHtml(value: string): string {\n    let html = '';\n    try {\n      const content = JSON.parse(value);\n      // 创建编辑器实例\n      const editor = createEditor({\n        content,\n      });\n      html = editor.getHtml();\n    } catch (error) {\n      html = value;\n      ibiz.log.error('JSON字符串转换错误', error);\n    }\n    return html;\n  }\n\n  /**\n   * 绘制模式为json时，处理抛值数据\n   *\n   * @author ljx\n   * @date 2024-03-09 15:11:09\n   * @param {string} url\n   * @param {IData} file\n   */\n  public toJson(value: IData[] = []): string {\n    let json = '';\n    try {\n      json = JSON.stringify(value);\n    } catch (error) {\n      ibiz.log.error('JSON字符串转换错误');\n    }\n    return json;\n  }\n\n  /**\n   * 绘制正在编辑人员标记\n   * @param item 用户标记数据\n   */\n  public drawPersonnelMarker(item: IPersMarkData): void {\n    const { id } = item;\n    const node = {\n      type: 'personnel-marker',\n      data: { name: id },\n      children: [{ text: '' }],\n      id,\n    };\n    const preCursor = this.persMarkMap.get(id)?.cursor;\n    Object.assign(item, { preCursor });\n    SlateUtil.movePersNode(this.editor, {\n      node,\n      param: item,\n    });\n    this.persMarkMap.set(id, item);\n  }\n\n  /**\n   * 设置人员选区标记\n   * @param item\n   */\n  public setPersSelectionMark(item: {\n    persMarkData: IPersMarkData;\n    mark: IData;\n  }): void {\n    const { persMarkData, mark } = item;\n    const range = persMarkData.cursor.selectionRange;\n    if (range) {\n      SlateUtil.addMarks(this.editor, {\n        mark,\n        selection: {\n          anchor: SlateUtil.calcPointByOffset(this.editor, range.anchor),\n          focus: SlateUtil.calcPointByOffset(this.editor, range.focus),\n        },\n      });\n    }\n  }\n\n  /**\n   * 获取当前用户头像\n   *\n   * @memberof HtmlCommentController\n   */\n  public async getCurrentUserAvatar() {\n    const app = await ibiz.hub.getApp(this.context.srfappid);\n    let dataItems: readonly CodeListItem[] = [];\n    dataItems = await app.codeList.get(\n      'SysOperator',\n      this.context,\n      this.params,\n    );\n    if (this.context.srfuserid) {\n      const tempItem = dataItems.filter((itme: CodeListItem) => {\n        return itme.value === this.context.srfuserid;\n      });\n      if (tempItem && tempItem.length > 0) {\n        this.userAvatar = tempItem[0]?.data?.iconurl || '';\n      }\n    }\n  }\n\n  /**\n   * 获取当前视图\n   *\n   * @return {*}\n   * @memberof HtmlCommentController\n   */\n  public getView() {\n    const ctrl =\n      (this.parent as IData).form ||\n      (this.parent as IData).grid ||\n      (this.parent as IData).panel;\n    if (ctrl) {\n      return ctrl.view;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  IEditorContainerController,\n  IEditorProvider,\n} from '@ibiz-template/runtime';\nimport { IHtml } from '@ibiz/model-core';\nimport { HtmlCommentController } from './html-comment.controller';\n\n/**\n * html框编辑器适配器\n *\n * @author lxm\n * @date 2022-09-19 22:09:03\n * @export\n * @class HtmlCommentProvider\n * @implements {EditorProvider}\n */\nexport class HtmlCommentProvider implements IEditorProvider {\n  formEditor: string = 'HtmlComment';\n\n  gridEditor: string = 'HtmlComment';\n\n  async createController(\n    editorModel: IHtml,\n    parentController: IEditorContainerController,\n  ): Promise<HtmlCommentController> {\n    const c = new HtmlCommentController(editorModel, parentController);\n    await c.init();\n    return c;\n  }\n}\n","import { App, defineAsyncComponent } from 'vue';\nimport { registerEditorProvider } from '@ibiz-template/runtime';\nimport { withInstall } from '@ibiz-template/vue3-util';\nimport { HtmlComment } from './html-comment';\nimport { HtmlCommentProvider } from './html-comment.provider';\nimport IBizHtmlCollapse from './wang-editor/wang-editor-collapse';\nimport IBizHtmlContent from './wang-editor/wang-editor-comment';\n\nexport const IBizHtmlComment = withInstall(HtmlComment, function (v: App) {\n  v.component(IBizHtmlCollapse.name, IBizHtmlCollapse);\n  v.component(IBizHtmlContent.name, IBizHtmlContent);\n  v.component(HtmlComment.name, HtmlComment);\n  registerEditorProvider(\n    'EDITOR_CUSTOMSTYLE_COMMENT',\n    () => new HtmlCommentProvider(),\n  );\n});\n\nexport default {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/explicit-function-return-type\n  install(app: App) {\n    app.use(IBizHtmlComment);\n    app.component(\n      'IBizHtmlContent',\n      defineAsyncComponent(() => import('./wang-editor/wang-editor-comment')),\n    );\n  },\n};\n"],"names":["ModalUtil","modalOrPanel","htmlRef","__publicField","$elem","dom","htmlDom","toolbarDom","buttonDom","dataMenuKey","outToolbarDom","modalWidth","modalHeight","toolbarHeight","btnRect","btnBottom","btnRight","btnTop","btnLeft","top","left","bottom","right","modalStyle","windowWidth","windowHeight","IBizHtmlContent","defineComponent","name","props","getHtmlProps","emits","setup","emit","ns","useNamespace","c","controller","htmlContent","ref","cssVars","resizeObserver","lastToolbarHeight","toolbarRef","editorRef","shallowRef","previewRef","valueHtml","headers","Authorization","getCookie","CoreConst","TOKEN","uploadUrl","downloadUrl","enableEdit","hasEnableEdit","readonlyState","enableFullScreen","isFullScreen","previewUrl","previewUrlList","isBackFill","editorModel","model","editorParams","value","toBoolean","readonly","disabled","handleSetHtml","event","eventArg","setHtml","focus","handleClear","blur","handleSetReply","evt","on","watch","data","newVal","urls","ibiz","util","file","calcFileUpDownUrl","context","params","immediate","deep","customCheckLinkFn","text","url","customParseLinkUrl","toolbarConfig","toolbarKeys","key","title","iconSvg","menuKeys","chatCompletion","push","editorConfig","placeholder","placeHolder","readOnly","MENU_CONF","uploadImage","server","fieldName","maxFileSize","maxNumberOfFiles","allowedFileTypes","withCredentials","onBeforeUpload","onProgress","progress","console","log","onSuccess","res","onFailed","onError","err","customInsert","insertFn","replace","id","alt","filename","insertLink","checkLink","parseLinkUrl","editLink","hoverbarKeys","link","handlePreview","el","src","openPreview","nodeEntries","SlateEditor","nodes","match","node","SlateElement","isElement","type","universal","nodeEntry","endsWith","nextTick","container","$refs","children","click","setImageHook","editor","editorContainer","getEditableContainer","querySelectorAll","forEach","img","onclick","target","handleEventListener","funcName","imgEl","querySelector","handleKeyPress","keyCode","stopPropagation","preventDefault","onShow","chatInstance","onClickAI","deService","module","chat","default","aiChat","create","question","arr","createUUID","aiChatSse","msg","info","actionstate","actionresult","addMessage","messageid","state","role","content","result","JSON","parse","choices","length","replaceMessage","messages","action","message","closed","aiChatHistory","Array","isArray","item","onBeforeUnmount","close","destroy","handleCreated","modalUtil","onCreated","onLineEditing","handleChange","html","getHtml","emitValue","isNil","handleDestroyed","_editor","off","handleFocus","handleBlur","customAlert","alert","customPaste","callback","insertText","str","printHtml","disable","enable","calcHtmlStyle","htmlContentHeight","offsetHeight","ResizeObserver","entries","height","contentRect","tempCssVars","cssVarBlock","observe","selector","moveToLastStr","index","indexOf","offset","selection","anchor","path","move","changeEditState","renderCancelMessage","_createVNode","be","_createTextVNode","bem","cancelEdit","ElMessageBox","customClass","b","showCancelButton","cancelButtonClass","confirmButtonClass","then","parseNode","catch","save","renderFooter","onClick","changeFullScreenState","isAllowRenderFullScreen","renderHeaserToolbar","renderReply","reply","htmlCode","ScriptFactory","execScriptFn","replyScript","singleRowReturn","isAsync","_resolveComponent","removeReply","renderEditorContent","hidden","Editor","$event","Toolbar","renderPreview","e","onMounted","oldVal","mode","render","onClose","defaultToolbars","presRegex","IBizHtmlCollapse","containerRef","collapse","showExpand","funcs","insertKeys","keys","i","includes","splice","handleExpand","maxHeight","onload","handleEmit","renderMode","toJson","debounceEmit","debounce","saveInterval","isFocused","emitMode","awaitTimeout","box","scroll","renderToggle","tempStyle","Object","assign","is","useClickOutside","jsonToHtml","onUnmounted","disconnect","stop","HtmlUtil","root","inputString","hash","charCode","trimmedHash","r","g","colorCode","engChar","char","chineseStr","x","emoji","tempVal","addVnodeStyle","vnode","newStyle","renderStyle","backgroundColor","bgColor","styleVnode","SlateUtil","op","mark","SlateText","parentNode","parentPath","SlateRange","SlateTransforms","marks","options","param","cursor","preCursor","position","newPosition","selectionRange","preRange","SlateNode","point","parent","textLength","HtmlComment","getEditorEmits","comment","isAvatarLoadError","onFocus","collapsed","onChange","onBlur","avatarLoadError","renderAvatar","userAvatar","urlConfig","avatarBg","stringToHexColor","srfusername","avatarName","minHeight","sel","elm","array","primitive","s","addNS","child","childData","h","is.array","is.primitive","attachmentsToHtml","elem","script","elemToHtmlConf","parseHtml","datastr","parseHtmlConf","renderAttachments","tempData","renderElemConf","AttachMentsMenu","RuntimeError","Menu","AttachmentsController","Boot","AttachmentsModule","option","CodeSnippetToHtml","renderCodeSnippet","CodeSnippetMenu","CodeSnippetController","CodeSnippetModule","markerToHtml","renderMarker","MenTionMenu$1","atMenu","MenTionMenu","MenTion","required","modal","loading","items","cleanup","NOOP","curUser","total","errorLoadItems","overlay","execting","dismiss","values","query","pop","test","refresh","isInitialLoad","registerEditorEvt","load","args","getUsers","response","status","Number","isLoadMore","toUIData","loadMore","isLodeMoreDisabled","computed","size","leading","setSelection","findIndex","onUserSelect","user","modalData","ok","getAvatarDownloadUrl","avatarUrl","renderItem","usertext","operatorMap","has","operator","get","iconurl","listenJSEvent","window","_withDirectives","map","_resolveDirective","Marker","curItem","regex","onSelect","renderContent","quoteCodelistMap","codeListItems","codeList","identifier","Emoji","val","strToBase64","MarkerController","isInline","isVoid","t","DomEditor","markerModule","QUOTEURL","QUOTEFIELDMAP","QUOTEMETHOD","QUOTESCRIPT","QUOTEINSCRIPT","QUOTEPARAMS","QUOTECODELISTMAP","codelist","_a","domSelection","focusNode","findItem","childrenItem","markerNode","navigateContexts","navigateParams","selfContext","convertNavData","_context","selfParams","tempParams","appCodeListId","app","mentionToHtml","renderMention","MenTionController","mentionModule","USERURL","USERFIELDMAP","USERMETHOD","USERSCRIPT","USERINSCRIPT","dataItems","mentionNode","PageToHtml","renderPage","PageMenu","PageController","PageModule","base64ToStr","EmojiButtonMenu","EmojiMenu","EmojiModule","EmojiController","emojiModule","_result","emojiNode","CustomNodeFactory","uuid","NewController","controllers","MentionElem","tag","oldValue","newValue","shadow","document","svg","style","PersonnelMarkerElem","background","line","EmojiElem","PaintFormatMenu","select","fragment","button","fn","wait","timer","paintFormatMenu","PersonnelMarkerToHtml","renderPersonnelMarker","personnelMarkerModule","personnelMarkerPlugin","deleteBackward","unit","p1","p2","y","isBr","AIMenu","linkToHtml","ViewLink","linkElem","CustomViewLink","CustomViewLinkModule","HtmlCommentController","EditorController","ControllerEvent","getDeACMode","uploadParams","exportParams","MINHEIGHT","MAXHEIGHT","REPLYSCRIPT","MODE","INSERTKEYS","RENDERMODE","SAVEINTERVAL","EMITMODE","DEFAULTCOLLAPSE","ENABLEREALTIME","error","toNumber","uiDomain","persMarkData","ctrl","apply","operation","view","fileName","downloadFileFromBlob","open","createEditor","json","range","tempItem","itme","_b","HtmlCommentProvider","parentController","IBizHtmlComment","withInstall","v","registerEditorProvider","defineAsyncComponent","wangEditorComment"],"mappings":"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","x_google_ignoreList":[8,9,10]}