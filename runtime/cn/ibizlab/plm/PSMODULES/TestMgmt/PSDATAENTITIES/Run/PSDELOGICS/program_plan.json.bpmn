<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:g="http://www.jboss.org/drools/flow/gpd" xmlns:tns="http://www.jboss.org/drools" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" expressionLanguage="http://www.mvel.org/2.0" id="Definition" name="" targetNamespace="http://www.jboss.org/drools" typeLanguage="http://www.java.com/javaTypes">
        <process id="cn.ibizlab.plm.core.testmgmt.service.logic.runprogram_plan" isClosed="false" isExecutable="true" name="testmgmt_run_program_plan_ruleFlow" processType="Private" tns:packageName="cn.ibizlab.plm.core.testmgmt.service.logic.runprogram_plan">
            <extensionElements>
                <tns:import name="java.util.Map" />
                <tns:import name="org.springframework.util.StringUtils"/>
                <tns:import name="cn.ibizlab.plm.util.helper.RuleUtils"/>
                                <tns:metaData express="" name="runprogram_plandefault" type="entity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.testmgmt.domain.Test_case()" name="runprogram_plantest_case_info" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.testmgmt.domain.Run()" name="runprogram_planfor_temp_obj" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.base.domain.Relation()" name="runprogram_planrelationobj" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.base.domain.Relation()" name="runprogram_planrelationobj2" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.testmgmt.domain.Run()" name="runprogram_planselect_create_data" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.testmgmt.domain.Run()" name="runprogram_planselectdata" type="refentity"/>
                                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.testmgmt.service.IRunService))" name="runservice" type="service"/>
                                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.testmgmt.service.ITest_caseService))" name="test_caseservice" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.testmgmt.service.IRunService))" name="iBzSysRunDefaultService" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.AuthenticationUser).getAuthenticationUser()" name="curuser" type="session"/>
                            <tns:global identifier="runprogram_plandefault" type="cn.ibizlab.plm.core.testmgmt.domain.Run" />
                            <tns:global identifier="runprogram_plantest_case_info" type="cn.ibizlab.plm.core.testmgmt.domain.Test_case" />
                            <tns:global identifier="runprogram_planfor_temp_obj" type="cn.ibizlab.plm.core.testmgmt.domain.Run" />
                            <tns:global identifier="runprogram_planrelationobj" type="cn.ibizlab.plm.core.base.domain.Relation" />
                            <tns:global identifier="runprogram_planrelationobj2" type="cn.ibizlab.plm.core.base.domain.Relation" />
                            <tns:global identifier="runprogram_planselect_create_data" type="cn.ibizlab.plm.core.testmgmt.domain.Run" />
                            <tns:global identifier="runprogram_planselectdata" type="cn.ibizlab.plm.core.testmgmt.domain.Run" />
            </extensionElements>
                        <startEvent id="begin" isInterrupting="true"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="runprogram_planbindparam1" id="bindparam1" implementation="http://www.jboss.org/drools/rule" name="绑定参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="runprogram_plandeaction1" id="deaction1" implementation="http://www.jboss.org/drools/rule" name="创建执行用例"/>
                        <endEvent id="deaction1_end" name="end"/>
                        <sequenceFlow id="deaction1_end_line" sourceRef="deaction1" targetRef="deaction1_end"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="runprogram_planprepareparam2" id="prepareparam2" implementation="http://www.jboss.org/drools/rule" name="准备参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="runprogram_plandeaction2" id="deaction2" implementation="http://www.jboss.org/drools/rule" name="获取测试用例详情"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="runprogram_planend1" id="end1" implementation="http://www.jboss.org/drools/rule" name="结束"/>
                        <endEvent id="end1_end" name="end"/>
                        <sequenceFlow id="end1_end_line" sourceRef="end1" targetRef="end1_end"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="runprogram_planloopsubcall1" id="loopsubcall1" implementation="http://www.jboss.org/drools/rule" name="循环子调用"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="runprogram_planprepareparam3" id="prepareparam3" implementation="http://www.jboss.org/drools/rule" name="准备参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="runprogram_plancopyparam1" id="copyparam1" implementation="http://www.jboss.org/drools/rule" name="拷贝参数"/>
                    <sequenceFlow id="gateway-begin_bindparam1" sourceRef="gateway-begin" targetRef="bindparam1">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $runprogram_plandefault:Run();
                                            $runprogram_plantest_case_info:Test_case();
                                            $runprogram_planfor_temp_obj:Run();
                                            $runprogram_planrelationobj:Relation();
                                            $runprogram_planrelationobj2:Relation();
                                            $runprogram_planselect_create_data:Run();
                                            $runprogram_planselectdata:Run();
                                    eval($runprogram_plandefault==runprogram_plandefault && $runprogram_plantest_case_info==runprogram_plantest_case_info && $runprogram_planfor_temp_obj==runprogram_planfor_temp_obj && $runprogram_planrelationobj==runprogram_planrelationobj && $runprogram_planrelationobj2==runprogram_planrelationobj2 && $runprogram_planselect_create_data==runprogram_planselect_create_data && $runprogram_planselectdata==runprogram_planselectdata);
                                eval((RuleUtils.test($runprogram_plandefault.get("principal_id"),"ISNOTNULL","")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="gateway-begin_end1" sourceRef="gateway-begin" targetRef="end1">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $runprogram_plandefault:Run();
                                            $runprogram_plantest_case_info:Test_case();
                                            $runprogram_planfor_temp_obj:Run();
                                            $runprogram_planrelationobj:Relation();
                                            $runprogram_planrelationobj2:Relation();
                                            $runprogram_planselect_create_data:Run();
                                            $runprogram_planselectdata:Run();
                                    eval($runprogram_plandefault==runprogram_plandefault && $runprogram_plantest_case_info==runprogram_plantest_case_info && $runprogram_planfor_temp_obj==runprogram_planfor_temp_obj && $runprogram_planrelationobj==runprogram_planrelationobj && $runprogram_planrelationobj2==runprogram_planrelationobj2 && $runprogram_planselect_create_data==runprogram_planselect_create_data && $runprogram_planselectdata==runprogram_planselectdata);
                                eval((RuleUtils.test($runprogram_plandefault.get("principal_id"),"ISNULL","")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="gateway-bindparam1_end1" sourceRef="gateway-bindparam1" targetRef="end1">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $runprogram_plandefault:Run();
                                            $runprogram_plantest_case_info:Test_case();
                                            $runprogram_planfor_temp_obj:Run();
                                            $runprogram_planrelationobj:Relation();
                                            $runprogram_planrelationobj2:Relation();
                                            $runprogram_planselect_create_data:Run();
                                            $runprogram_planselectdata:Run();
                                    eval($runprogram_plandefault==runprogram_plandefault && $runprogram_plantest_case_info==runprogram_plantest_case_info && $runprogram_planfor_temp_obj==runprogram_planfor_temp_obj && $runprogram_planrelationobj==runprogram_planrelationobj && $runprogram_planrelationobj2==runprogram_planrelationobj2 && $runprogram_planselect_create_data==runprogram_planselect_create_data && $runprogram_planselectdata==runprogram_planselectdata);
                                eval((RuleUtils.test($runprogram_planselectdata.get("size"),"EQ","0")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="gateway-bindparam1_loopsubcall1" sourceRef="gateway-bindparam1" targetRef="loopsubcall1">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $runprogram_plandefault:Run();
                                            $runprogram_plantest_case_info:Test_case();
                                            $runprogram_planfor_temp_obj:Run();
                                            $runprogram_planrelationobj:Relation();
                                            $runprogram_planrelationobj2:Relation();
                                            $runprogram_planselect_create_data:Run();
                                            $runprogram_planselectdata:Run();
                                    eval($runprogram_plandefault==runprogram_plandefault && $runprogram_plantest_case_info==runprogram_plantest_case_info && $runprogram_planfor_temp_obj==runprogram_planfor_temp_obj && $runprogram_planrelationobj==runprogram_planrelationobj && $runprogram_planrelationobj2==runprogram_planrelationobj2 && $runprogram_planselect_create_data==runprogram_planselect_create_data && $runprogram_planselectdata==runprogram_planselectdata);
                                eval((RuleUtils.test($runprogram_planselectdata.get("size"),"NOTEQ","0")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="prepareparam2_deaction1" sourceRef="prepareparam2" targetRef="deaction1">
                    </sequenceFlow>
                    <sequenceFlow id="deaction2_prepareparam2" sourceRef="deaction2" targetRef="prepareparam2">
                    </sequenceFlow>
                    <sequenceFlow id="loopsubcall1_end1" sourceRef="loopsubcall1" targetRef="end1">
                    </sequenceFlow>
                    <sequenceFlow id="loopsubcall1_prepareparam3" sourceRef="loopsubcall1" targetRef="prepareparam3">
                    </sequenceFlow>
                    <sequenceFlow id="prepareparam3_copyparam1" sourceRef="prepareparam3" targetRef="copyparam1">
                    </sequenceFlow>
                    <sequenceFlow id="copyparam1_deaction2" sourceRef="copyparam1" targetRef="deaction2">
                    </sequenceFlow>
                            <exclusiveGateway id="gateway-begin" name="Gateway" gatewayDirection="Diverging" default="gateway-begin_end_line"></exclusiveGateway>
                            <sequenceFlow id="begin_gateway-begin_gatewayline" sourceRef="begin" targetRef="gateway-begin"></sequenceFlow>
                            <sequenceFlow id="gateway-begin_end_line" sourceRef="gateway-begin" targetRef="gateway-begin_end"/>
                            <endEvent id="gateway-begin_end" name="end"/>
                            <exclusiveGateway id="gateway-bindparam1" name="Gateway" gatewayDirection="Diverging" default="gateway-bindparam1_end_line"></exclusiveGateway>
                            <sequenceFlow id="bindparam1_gateway-bindparam1_gatewayline" sourceRef="bindparam1" targetRef="gateway-bindparam1"></sequenceFlow>
                            <sequenceFlow id="gateway-bindparam1_end_line" sourceRef="gateway-bindparam1" targetRef="gateway-bindparam1_end"/>
                            <endEvent id="gateway-bindparam1_end" name="end"/>
        </process>
    </definitions>