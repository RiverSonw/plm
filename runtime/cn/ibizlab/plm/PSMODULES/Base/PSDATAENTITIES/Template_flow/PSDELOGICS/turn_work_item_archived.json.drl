package cn.ibizlab.plm.base.logic.template_flowlogic.turn_work_item_archived;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.base.domain.Template_flow template_flowturn_work_item_archiveddefault;
                global cn.ibizlab.plm.core.projmgmt.domain.Work_item template_flowturn_work_item_archivedwork_item_filter;
                global cn.ibizlab.plm.core.projmgmt.domain.Work_item template_flowturn_work_item_archivedwork_items;
                    global cn.ibizlab.plm.core.projmgmt.service.IWork_itemService work_itemservice;
        global cn.ibizlab.plm.core.base.service.ITemplate_flowService iBzSysTemplate_flowDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "template_flowturn_work_item_archivedbegin"
            when
            then
            end

            //逻辑处理节点[设置工作项过滤条件]
            rule "prepareparam1"
            ruleflow-group "template_flowturn_work_item_archivedprepareparam1"
            when
            then
                            template_flowturn_work_item_archivedwork_item_filter.set("n_work_item_type_id_eq","scrum_task");
                            template_flowturn_work_item_archivedwork_item_filter.set("n_state_eq","40");
                            template_flowturn_work_item_archivedwork_item_filter.set("size","1000");
                        update(template_flowturn_work_item_archiveddefault);//更新fact中变量值
                        update(template_flowturn_work_item_archivedwork_item_filter);//更新fact中变量值
                        update(template_flowturn_work_item_archivedwork_items);//更新fact中变量值
            end

            //逻辑处理节点[实体数据集]
            rule "dedataset1"
            ruleflow-group "template_flowturn_work_item_archiveddedataset1"
            when
            then
                        update(template_flowturn_work_item_archiveddefault);//更新fact中变量值
                        update(template_flowturn_work_item_archivedwork_item_filter);//更新fact中变量值
                        update(template_flowturn_work_item_archivedwork_items);//更新fact中变量值
            end

            //逻辑处理节点[实体行为]
            rule "deaction1"
            ruleflow-group "template_flowturn_work_item_archiveddeaction1"
            when
            then
                        work_itemservice.archive(template_flowturn_work_item_archivedwork_items);
                        update(template_flowturn_work_item_archiveddefault);//更新fact中变量值
                        update(template_flowturn_work_item_archivedwork_item_filter);//更新fact中变量值
                        update(template_flowturn_work_item_archivedwork_items);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "template_flowturn_work_item_archivedend1"
            when
            then
                        update(template_flowturn_work_item_archiveddefault);//更新fact中变量值
                        update(template_flowturn_work_item_archivedwork_item_filter);//更新fact中变量值
                        update(template_flowturn_work_item_archivedwork_items);//更新fact中变量值
            end