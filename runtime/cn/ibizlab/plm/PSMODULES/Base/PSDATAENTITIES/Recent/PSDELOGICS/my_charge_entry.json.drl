package cn.ibizlab.plm.base.logic.recentlogic.my_charge_entry;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.base.domain.Recent recentmy_charge_entrydefault;
                global java.util.Map recentmy_charge_entryfilter;
                global java.util.Map recentmy_charge_entrymy_assignee;
                global java.util.Map recentmy_charge_entrytemp_obj;
                    global cn.ibizlab.plm.core.prodmgmt.service.ITicketService ticketservice;
                    global cn.ibizlab.plm.core.testmgmt.service.ITest_caseService test_caseservice;
                    global cn.ibizlab.plm.core.projmgmt.service.IWork_itemService work_itemservice;
                    global cn.ibizlab.plm.core.prodmgmt.service.IIdeaService ideaservice;
        global cn.ibizlab.plm.core.base.service.IRecentService iBzSysRecentDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "recentmy_charge_entrybegin"
            when
            then
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "recentmy_charge_entryend1"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我负责的工作项]
            rule "rawsqlcall1"
            ruleflow-group "recentmy_charge_entryrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="SELECT count(t.id) as my_charge_work_item FROM work_item t where t.IS_DELETED = 0 AND t.IS_ARCHIVED = 0 AND t.ASSIGNEE_ID = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_charge_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我负责的产品需求]
            rule "rawsqlcall2"
            ruleflow-group "recentmy_charge_entryrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="-- 我负责的产品需求 SELECT count(t.id) as my_charge_idea FROM idea t where t.IS_DELETED = 0 AND t.IS_ARCHIVED = 0 AND t.ASSIGNEE_ID = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_charge_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我负责的工单]
            rule "rawsqlcall3"
            ruleflow-group "recentmy_charge_entryrawsqlcall3"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="-- 我负责的工单 SELECT count(t.id) as my_charge_ticket FROM ticket t where t.IS_DELETED = 0 AND t.IS_ARCHIVED = 0 AND t.ASSIGNEE_ID = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_charge_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我负责的测试用例]
            rule "rawsqlcall4"
            ruleflow-group "recentmy_charge_entryrawsqlcall4"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="-- 我负责的测试用例 SELECT count(t.id) as my_charge_test_case FROM test_case t where t.IS_DELETED = 0 AND t.IS_ARCHIVED = 0 AND t.MAINTENANCE_ID = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_charge_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[求和]
            rule "rawsqlcall5"
            ruleflow-group "recentmy_charge_entryrawsqlcall5"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
        param.put("param1",curuser.getSessionParams().get("srfpersonid"));
        param.put("param2",curuser.getSessionParams().get("srfpersonid"));
        param.put("param3",curuser.getSessionParams().get("srfpersonid"));
    String strSql="SELECT (     (SELECT count(id) FROM work_item WHERE IS_DELETED = 0 AND IS_ARCHIVED = 0 AND ASSIGNEE_ID = #{et.param0}) +     (SELECT count(id) FROM idea WHERE IS_DELETED = 0 AND IS_ARCHIVED = 0 AND ASSIGNEE_ID = #{et.param1}) +     (SELECT count(id) FROM ticket WHERE IS_DELETED = 0 AND IS_ARCHIVED = 0 AND ASSIGNEE_ID = #{et.param2}) +     (SELECT count(id) FROM test_case WHERE IS_DELETED = 0 AND IS_ARCHIVED = 0 AND MAINTENANCE_ID = #{et.param3}) ) AS my_charge_total";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_charge_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我负责的工单]
            rule "dedataset3"
            ruleflow-group "recentmy_charge_entrydedataset3"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我负责的测试用例]
            rule "dedataset4"
            ruleflow-group "recentmy_charge_entrydedataset4"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我负责的事项]
            rule "dedataset1"
            ruleflow-group "recentmy_charge_entrydedataset1"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我负责的需求]
            rule "dedataset2"
            ruleflow-group "recentmy_charge_entrydedataset2"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[计算总条数]
            rule "rawsfcode1"
            ruleflow-group "recentmy_charge_entryrawsfcode1"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[绑定我负责事项统计数]
            rule "bindparam1"
            ruleflow-group "recentmy_charge_entrybindparam1"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[绑定需求统计数]
            rule "bindparam2"
            ruleflow-group "recentmy_charge_entrybindparam2"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[绑定工单统计数]
            rule "bindparam3"
            ruleflow-group "recentmy_charge_entrybindparam3"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[绑定测试用例统计数]
            rule "bindparam4"
            ruleflow-group "recentmy_charge_entrybindparam4"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[调试逻辑参数]
            rule "debugparam1"
            ruleflow-group "recentmy_charge_entrydebugparam1"
            when
            then
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[设置我负责事项统计数]
            rule "prepareparam1"
            ruleflow-group "recentmy_charge_entryprepareparam1"
            when
            then
                            recentmy_charge_entrydefault.set("my_charge_work_item",recentmy_charge_entrytemp_obj.get("count_work_item"));
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[设置需求统计数]
            rule "prepareparam2"
            ruleflow-group "recentmy_charge_entryprepareparam2"
            when
            then
                            recentmy_charge_entrydefault.set("my_charge_idea",recentmy_charge_entrytemp_obj.get("count_idea"));
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[设置工单统计数]
            rule "prepareparam3"
            ruleflow-group "recentmy_charge_entryprepareparam3"
            when
            then
                            recentmy_charge_entrydefault.set("my_charge_ticket",recentmy_charge_entrytemp_obj.get("count_ticket"));
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[设置测试用例统计数]
            rule "prepareparam4"
            ruleflow-group "recentmy_charge_entryprepareparam4"
            when
            then
                            recentmy_charge_entrydefault.set("my_charge_test_case",recentmy_charge_entrytemp_obj.get("count_test_case"));
                        update(recentmy_charge_entrydefault);//更新fact中变量值
                        update(recentmy_charge_entryfilter);//更新fact中变量值
                        update(recentmy_charge_entrymy_assignee);//更新fact中变量值
                        update(recentmy_charge_entrytemp_obj);//更新fact中变量值
            end