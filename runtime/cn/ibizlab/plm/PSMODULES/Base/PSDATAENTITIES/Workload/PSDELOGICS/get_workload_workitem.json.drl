package cn.ibizlab.plm.base.logic.workloadlogic.get_workload_workitem;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.base.domain.Workload workloadget_workload_workitemdefault;
                global cn.ibizlab.plm.core.projmgmt.domain.Work_item workloadget_workload_workitemtemp_obj;
                    global cn.ibizlab.plm.core.base.service.IWorkloadService workloadservice;
        global cn.ibizlab.plm.core.base.service.IWorkloadService iBzSysWorkloadDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "workloadget_workload_workitembegin"
            when
            then
            end

            //逻辑处理节点[get]
            rule "deaction1"
            ruleflow-group "workloadget_workload_workitemdeaction1"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(workloadservice.get(workloadget_workload_workitemdefault.getId()),workloadget_workload_workitemdefault);
                        update(workloadget_workload_workitemdefault);//更新fact中变量值
                        update(workloadget_workload_workitemtemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[获取已登记工时]
            rule "rawsqlcall1"
            ruleflow-group "workloadget_workload_workitemrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",workloadget_workload_workitemdefault.get("principalid"));
        param.put("param1",workloadget_workload_workitemdefault.get("id"));
    String strSql="select t1.ESTIMATED_WORKLOAD, t1.REMAINING_WORKLOAD, sum(t2.DURATION) as `ACTUAL_WORKLOAD` from work_item t1 left join workload t2 on t1.ID = t2.PRINCIPAL_ID where t1.ID = #{et.param0} and t2.ID <>  #{et.param1}";
                        java.util.List<JSONObject> entities=iBzSysWorkloadDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    workloadget_workload_workitemtemp_obj.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(workloadget_workload_workitemdefault);//更新fact中变量值
                        update(workloadget_workload_workitemtemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[填充工时属性]
            rule "prepareparam1"
            ruleflow-group "workloadget_workload_workitemprepareparam1"
            when
            then
                            workloadget_workload_workitemdefault.set("actual_workload",workloadget_workload_workitemtemp_obj.get("actualworkload"));
                            workloadget_workload_workitemdefault.set("estimated_workload",workloadget_workload_workitemtemp_obj.get("estimatedworkload"));
                            workloadget_workload_workitemdefault.set("remaining_workload",workloadget_workload_workitemtemp_obj.get("remainingworkload"));
                        update(workloadget_workload_workitemdefault);//更新fact中变量值
                        update(workloadget_workload_workitemtemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[计算工时进度：（实际工时 / (实际工时+剩余工时)）]
            rule "rawsfcode1"
            ruleflow-group "workloadget_workload_workitemrawsfcode1"
            when
            then
                        update(workloadget_workload_workitemdefault);//更新fact中变量值
                        update(workloadget_workload_workitemtemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "workloadget_workload_workitemend1"
            when
            then
                        update(workloadget_workload_workitemdefault);//更新fact中变量值
                        update(workloadget_workload_workitemtemp_obj);//更新fact中变量值
            end