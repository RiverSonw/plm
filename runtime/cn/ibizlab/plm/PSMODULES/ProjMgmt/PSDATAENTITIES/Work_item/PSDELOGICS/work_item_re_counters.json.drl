package cn.ibizlab.plm.projmgmt.logic.work_itemlogic.work_item_re_counters;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.projmgmt.domain.Work_item work_itemwork_item_re_countersdefault;
        global cn.ibizlab.plm.core.projmgmt.service.IWork_itemService iBzSysWork_itemDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "work_itemwork_item_re_countersbegin"
            when
            then
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "work_itemwork_item_re_countersend1"
            when
            then
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联产品需求]
            rule "rawsqlcall1"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_idea FROM 	idea t  WHERE 	EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( 			t11.`TARGET_TYPE` = 'idea'  			AND t11.`PRINCIPAL_TYPE` = 'work_item'  			AND t11.`PRINCIPAL_ID` = #{et.param0} ) ) 			AND ( 				 t.`IS_ARCHIVED` = 0 AND t.`IS_DELETED` = 0  			)";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联子工作项]
            rule "rawsqlcall2"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_children FROM 	work_item t  WHERE 	t.pid = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联工作项]
            rule "rawsqlcall3"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall3"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_work_item FROM 	work_item t  WHERE 	EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( 			t11.`TARGET_TYPE` = 'work_item'  			AND t11.`PRINCIPAL_TYPE` = 'work_item'  			AND t11.`PRINCIPAL_ID` = #{et.param0} ) ) 			AND ( 				 t.`IS_ARCHIVED` = 0 AND t.`IS_DELETED` = 0  			)";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联测试用例]
            rule "rawsqlcall4"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall4"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_test_case FROM 	test_case t  WHERE 	EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( 			t11.`TARGET_TYPE` = 'test_case'  			AND (t11.`PRINCIPAL_TYPE` = 'work_item' OR t11.`PRINCIPAL_TYPE` = 'bug') 			AND t11.`PRINCIPAL_ID` = #{et.param0} ) ) 			AND ( 				 t.`IS_ARCHIVED` = 0 AND t.`IS_DELETED` = 0  			)";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联工单]
            rule "rawsqlcall5"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall5"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_ticket FROM 	ticket t  WHERE 	EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( 			t11.`TARGET_TYPE` = 'ticket'  			AND t11.`PRINCIPAL_TYPE` = 'work_item'  			AND t11.`PRINCIPAL_ID` = #{et.param0} ) ) 			AND ( 				 t.`IS_ARCHIVED` = 0 AND t.`IS_DELETED` = 0  			)";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[工作项内交付物]
            rule "rawsqlcall6"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall6"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="	SELECT 	count( t.id ) AS work_item_deliverable FROM 	attachment t  WHERE     t.owner_id = #{et.param0} and t.owner_subtype='DELIVERABLE' and t.owner_type = 'WORK_ITEM'";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
            end