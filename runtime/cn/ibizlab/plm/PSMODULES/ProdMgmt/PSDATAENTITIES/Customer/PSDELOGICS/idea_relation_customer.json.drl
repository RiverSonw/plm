package cn.ibizlab.plm.prodmgmt.logic.customerlogic.idea_relation_customer;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.prodmgmt.domain.Customer customeridea_relation_customerdefault;
                global cn.ibizlab.plm.core.prodmgmt.domain.Customer customeridea_relation_customerfor_temp_obj;
                global cn.ibizlab.plm.core.base.domain.Relation customeridea_relation_customerrelationobj;
                global cn.ibizlab.plm.core.base.domain.Relation customeridea_relation_customerrelationobj2;
                global cn.ibizlab.plm.core.prodmgmt.domain.Customer customeridea_relation_customerselectdata;
                    global cn.ibizlab.plm.core.base.service.IRelationService relationservice;
        global cn.ibizlab.plm.core.prodmgmt.service.ICustomerService iBzSysCustomerDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "customeridea_relation_customerbegin"
            when
            then
            end

            //逻辑处理节点[调试逻辑参数]
            rule "debugparam1"
            ruleflow-group "customeridea_relation_customerdebugparam1"
            when
            then
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end

            //逻辑处理节点[绑定参数]
            rule "bindparam1"
            ruleflow-group "customeridea_relation_customerbindparam1"
            when
            then
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end

            //逻辑处理节点[循环子调用]
            rule "loopsubcall1"
            ruleflow-group "customeridea_relation_customerloopsubcall1"
            when
            then
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end

            //逻辑处理节点[重新建立参数]
            rule "renewparam1"
            ruleflow-group "customeridea_relation_customerrenewparam1"
            when
            then
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end

            //逻辑处理节点[重新建立参数]
            rule "renewparam2"
            ruleflow-group "customeridea_relation_customerrenewparam2"
            when
            then
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end

            //逻辑处理节点[准备参数]
            rule "prepareparam2"
            ruleflow-group "customeridea_relation_customerprepareparam2"
            when
            then
                            customeridea_relation_customerrelationobj2.set("principalid",customeridea_relation_customerfor_temp_obj.get("owner_id"));
                            customeridea_relation_customerrelationobj.set("targetid",customeridea_relation_customerfor_temp_obj.get("owner_id"));
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end

            //逻辑处理节点[填充需要的属性值]
            rule "prepareparam1"
            ruleflow-group "customeridea_relation_customerprepareparam1"
            when
            then
                            customeridea_relation_customerrelationobj.set("principalid",customeridea_relation_customerdefault.get("principal_id"));
                            customeridea_relation_customerrelationobj2.set("principalid",customeridea_relation_customerfor_temp_obj.get("id"));
                            customeridea_relation_customerrelationobj2.set("targetid",customeridea_relation_customerdefault.get("principal_id"));
                            customeridea_relation_customerrelationobj2.set("principaltype",customeridea_relation_customerdefault.get("target_type"));
                            customeridea_relation_customerrelationobj2.set("targettype",customeridea_relation_customerdefault.get("principal_type"));
                            customeridea_relation_customerrelationobj.set("principaltype",customeridea_relation_customerdefault.get("principal_type"));
                            customeridea_relation_customerrelationobj.set("targettype",customeridea_relation_customerdefault.get("target_type"));
                            customeridea_relation_customerrelationobj.set("targetid",customeridea_relation_customerfor_temp_obj.get("id"));
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "customeridea_relation_customerend1"
            when
            then
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end

            //逻辑处理节点[生成正向关联数据]
            rule "deaction1"
            ruleflow-group "customeridea_relation_customerdeaction1"
            when
            then
                        relationservice.save(customeridea_relation_customerrelationobj);
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end

            //逻辑处理节点[生成反向关联数据]
            rule "deaction2"
            ruleflow-group "customeridea_relation_customerdeaction2"
            when
            then
                        relationservice.save(customeridea_relation_customerrelationobj2);
                        update(customeridea_relation_customerdefault);//更新fact中变量值
                        update(customeridea_relation_customerfor_temp_obj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj);//更新fact中变量值
                        update(customeridea_relation_customerrelationobj2);//更新fact中变量值
                        update(customeridea_relation_customerselectdata);//更新fact中变量值
            end