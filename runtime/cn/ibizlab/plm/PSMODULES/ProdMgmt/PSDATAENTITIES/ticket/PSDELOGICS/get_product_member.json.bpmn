<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:g="http://www.jboss.org/drools/flow/gpd" xmlns:tns="http://www.jboss.org/drools" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" expressionLanguage="http://www.mvel.org/2.0" id="Definition" name="" targetNamespace="http://www.jboss.org/drools" typeLanguage="http://www.java.com/javaTypes">
        <process id="cn.ibizlab.plm.core.prodmgmt.service.logic.ticketget_product_member" isClosed="false" isExecutable="true" name="prodmgmt_ticket_get_product_member_ruleFlow" processType="Private" tns:packageName="cn.ibizlab.plm.core.prodmgmt.service.logic.ticketget_product_member">
            <extensionElements>
                <tns:import name="java.util.Map" />
                <tns:import name="org.springframework.util.StringUtils"/>
                <tns:import name="cn.ibizlab.plm.util.helper.RuleUtils"/>
                                <tns:metaData express="" name="ticketget_product_memberdefault" type="entity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.prodmgmt.domain.product_member()" name="ticketget_product_memberfilter" type="refentity"/>
                                <tns:metaData express="new HashMap()" name="ticketget_product_memberfor_obj" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.prodmgmt.domain.product_member()" name="ticketget_product_membermembers" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.prodmgmt.domain.ticket()" name="ticketget_product_memberticket" type="refentity"/>
                                <tns:metaData express="new HashMap()" name="ticketget_product_memberuser" type="refentity"/>
                                <tns:metaData express="new HashMap()" name="ticketget_product_memberviewctx" type="refentity"/>
                                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.prodmgmt.service.Iproduct_memberService))" name="product_memberservice" type="service"/>
                                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.prodmgmt.service.IticketService))" name="ticketservice" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.prodmgmt.service.IticketService))" name="iBzSysTicketDefaultService" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.AuthenticationUser).getAuthenticationUser()" name="curuser" type="session"/>
                            <tns:global identifier="ticketget_product_memberdefault" type="cn.ibizlab.plm.core.prodmgmt.domain.ticket" />
                            <tns:global identifier="ticketget_product_memberfilter" type="cn.ibizlab.plm.core.prodmgmt.domain.product_member" />
                            <tns:global identifier="ticketget_product_membermembers" type="cn.ibizlab.plm.core.prodmgmt.domain.product_member" />
                            <tns:global identifier="ticketget_product_memberticket" type="cn.ibizlab.plm.core.prodmgmt.domain.ticket" />
            </extensionElements>
                        <startEvent id="begin" isInterrupting="true"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberdebugparam2" id="debugparam2" implementation="http://www.jboss.org/drools/rule" name="调试逻辑参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberprepareparam2" id="prepareparam2" implementation="http://www.jboss.org/drools/rule" name="获取产品ID"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberdedataset2" id="dedataset2" implementation="http://www.jboss.org/drools/rule" name="根据产品ID获取产品成员"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberdeaction1" id="deaction1" implementation="http://www.jboss.org/drools/rule" name="获取工单详情"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberprepareparam1" id="prepareparam1" implementation="http://www.jboss.org/drools/rule" name="获取产品ID"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberdedataset1" id="dedataset1" implementation="http://www.jboss.org/drools/rule" name="根据产品ID获取产品成员"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberprepareparam3" id="prepareparam3" implementation="http://www.jboss.org/drools/rule" name="准备参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberend3" id="end3" implementation="http://www.jboss.org/drools/rule" name="结束"/>
                        <endEvent id="end3_end" name="end"/>
                        <sequenceFlow id="end3_end_line" sourceRef="end3" targetRef="end3_end"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberloopsubcall1" id="loopsubcall1" implementation="http://www.jboss.org/drools/rule" name="循环子调用"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberdebugparam5" id="debugparam5" implementation="http://www.jboss.org/drools/rule" name="循环for_obj"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberprepareparam4" id="prepareparam4" implementation="http://www.jboss.org/drools/rule" name="准备参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberend2" id="end2" implementation="http://www.jboss.org/drools/rule" name="结束"/>
                        <endEvent id="end2_end" name="end"/>
                        <sequenceFlow id="end2_end_line" sourceRef="end2" targetRef="end2_end"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="ticketget_product_memberend1" id="end1" implementation="http://www.jboss.org/drools/rule" name="跳出循环"/>
                        <endEvent id="end1_end" name="end"/>
                        <sequenceFlow id="end1_end_line" sourceRef="end1" targetRef="end1_end"/>
                    <sequenceFlow id="begin_debugparam2" sourceRef="begin" targetRef="debugparam2">
                    </sequenceFlow>
                    <sequenceFlow id="gateway-debugparam2_deaction1" sourceRef="gateway-debugparam2" targetRef="deaction1">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $ticketget_product_memberdefault:ticket();
                                            $ticketget_product_memberfilter:product_member();
                                            $ticketget_product_memberfor_obj:Map();
                                            $ticketget_product_membermembers:product_member();
                                            $ticketget_product_memberticket:ticket();
                                            $ticketget_product_memberuser:Map();
                                            $ticketget_product_memberviewctx:Map();
                                    eval($ticketget_product_memberdefault==ticketget_product_memberdefault && $ticketget_product_memberfilter==ticketget_product_memberfilter && $ticketget_product_membermembers==ticketget_product_membermembers && $ticketget_product_memberticket==ticketget_product_memberticket && );
                                eval((RuleUtils.test($ticketget_product_memberdefault.get("product"),"ISNULL","")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="gateway-debugparam2_prepareparam2" sourceRef="gateway-debugparam2" targetRef="prepareparam2">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $ticketget_product_memberdefault:ticket();
                                            $ticketget_product_memberfilter:product_member();
                                            $ticketget_product_memberfor_obj:Map();
                                            $ticketget_product_membermembers:product_member();
                                            $ticketget_product_memberticket:ticket();
                                            $ticketget_product_memberuser:Map();
                                            $ticketget_product_memberviewctx:Map();
                                    eval($ticketget_product_memberdefault==ticketget_product_memberdefault && $ticketget_product_memberfilter==ticketget_product_memberfilter && $ticketget_product_membermembers==ticketget_product_membermembers && $ticketget_product_memberticket==ticketget_product_memberticket && );
                                eval((RuleUtils.test($ticketget_product_memberdefault.get("product"),"ISNOTNULL","")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="prepareparam2_dedataset2" sourceRef="prepareparam2" targetRef="dedataset2">
                    </sequenceFlow>
                    <sequenceFlow id="dedataset2_prepareparam3" sourceRef="dedataset2" targetRef="prepareparam3">
                    </sequenceFlow>
                    <sequenceFlow id="deaction1_prepareparam1" sourceRef="deaction1" targetRef="prepareparam1">
                    </sequenceFlow>
                    <sequenceFlow id="prepareparam1_dedataset1" sourceRef="prepareparam1" targetRef="dedataset1">
                    </sequenceFlow>
                    <sequenceFlow id="dedataset1_prepareparam3" sourceRef="dedataset1" targetRef="prepareparam3">
                    </sequenceFlow>
                    <sequenceFlow id="prepareparam3_loopsubcall1" sourceRef="prepareparam3" targetRef="loopsubcall1">
                    </sequenceFlow>
                    <sequenceFlow id="loopsubcall1_debugparam5" sourceRef="loopsubcall1" targetRef="debugparam5">
                    </sequenceFlow>
                    <sequenceFlow id="loopsubcall1_end2" sourceRef="loopsubcall1" targetRef="end2">
                    </sequenceFlow>
                    <sequenceFlow id="gateway-debugparam5_prepareparam4" sourceRef="gateway-debugparam5" targetRef="prepareparam4">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $ticketget_product_memberdefault:ticket();
                                            $ticketget_product_memberfilter:product_member();
                                            $ticketget_product_memberfor_obj:Map();
                                            $ticketget_product_membermembers:product_member();
                                            $ticketget_product_memberticket:ticket();
                                            $ticketget_product_memberuser:Map();
                                            $ticketget_product_memberviewctx:Map();
                                    eval($ticketget_product_memberdefault==ticketget_product_memberdefault && $ticketget_product_memberfilter==ticketget_product_memberfilter && $ticketget_product_membermembers==ticketget_product_membermembers && $ticketget_product_memberticket==ticketget_product_memberticket && );
                                eval((RuleUtils.test($ticketget_product_memberfor_obj.get("ROLE_ID"),"EQ","reader"))&&(RuleUtils.test($ticketget_product_memberfor_obj.get("USER_ID"),"EQ","ID")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="gateway-debugparam5_end3" sourceRef="gateway-debugparam5" targetRef="end3">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $ticketget_product_memberdefault:ticket();
                                            $ticketget_product_memberfilter:product_member();
                                            $ticketget_product_memberfor_obj:Map();
                                            $ticketget_product_membermembers:product_member();
                                            $ticketget_product_memberticket:ticket();
                                            $ticketget_product_memberuser:Map();
                                            $ticketget_product_memberviewctx:Map();
                                    eval($ticketget_product_memberdefault==ticketget_product_memberdefault && $ticketget_product_memberfilter==ticketget_product_memberfilter && $ticketget_product_membermembers==ticketget_product_membermembers && $ticketget_product_memberticket==ticketget_product_memberticket && );
                                eval((RuleUtils.test($ticketget_product_memberfor_obj.get("user_id"),"EQ","ID"))&&(RuleUtils.test($ticketget_product_memberfor_obj.get("role_id"),"NOTEQ","reader")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="prepareparam4_end1" sourceRef="prepareparam4" targetRef="end1">
                    </sequenceFlow>
                            <exclusiveGateway id="gateway-debugparam2" name="Gateway" gatewayDirection="Diverging" default="gateway-debugparam2_end_line"></exclusiveGateway>
                            <sequenceFlow id="debugparam2_gateway-debugparam2_gatewayline" sourceRef="debugparam2" targetRef="gateway-debugparam2"></sequenceFlow>
                            <sequenceFlow id="gateway-debugparam2_end_line" sourceRef="gateway-debugparam2" targetRef="gateway-debugparam2_end"/>
                            <endEvent id="gateway-debugparam2_end" name="end"/>
                            <exclusiveGateway id="gateway-debugparam5" name="Gateway" gatewayDirection="Diverging" default="gateway-debugparam5_end_line"></exclusiveGateway>
                            <sequenceFlow id="debugparam5_gateway-debugparam5_gatewayline" sourceRef="debugparam5" targetRef="gateway-debugparam5"></sequenceFlow>
                            <sequenceFlow id="gateway-debugparam5_end_line" sourceRef="gateway-debugparam5" targetRef="gateway-debugparam5_end"/>
                            <endEvent id="gateway-debugparam5_end" name="end"/>
        </process>
    </definitions>